// Code generated by protoc-gen-go.
// source: msg.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	msg.proto

It has these top-level messages:
	Rpc
	Request
	Msg
	ThirdPartLogin
	SyncError
	RpcErrorResponse
	Login
	LoginRsp
	CSHeartBeatRqst
	CSHeartBeatRsp
	CSCommonErrMsg
	CSUserLoginRqst
	PlayerBaseInfo
	PlayerInfo
	CSUserLoginRsp
	CSUserLogoutRqst
	CSUserLogoutRsp
	CSUserSetNickRqst
	CSUserSetNickRsp
	CSUserSetSexRqst
	CSUserSetSexRsp
	CSUserAddGoldRqst
	CSUserAddGoldRsp
	CSUserEnterRoomRqst
	CSUserEnterRoomRsp
	CSUserLeaveRoomRqst
	CSUserLeaveRoomRsp
	CSUserChallengeModeInfo
	CSUserChallengeModeInfoNotify
	SeatInfo
	ViewSeatInfo
	TableInfo
	CSUserStartGameRqst
	CSUserStartGameRsp
	CSUserTableInfoChangeNotify
	CSUserReadyGameRqst
	CSUserTableRechargeGiveUpRqst
	CSUserReadyGameNotify
	CSUserMjAssignNotify
	CSUserMjOperateRqst
	MjSettlementDetail
	MjSettlementInfo
	CSUserMjOperateNotify
	CSUserMjWaitForOperateNotify
	CSUserMjGetNotify
	CSUserMjLastHandNotify
	CSUserTableDIsmissNotify
	CSUserBaseInfoChangeNotify
	CSMjOperateRecord
	CSUserTableCardInfoNotify
	CSUserMjSettlementInfoNotify
	CSUserSubFlowerNotify
	CSUserChallengeModeResultInfoNotify
	CSUserChallengeModeRankingRewardNotify
	CSUserChallengeModeRankingListRqst
	CSChallengModeRankingInfo
	CSUserChallengeModeRankingListRsp
	RoomAdvanceParam
	CSUserCreateRoomRqst
	CSUserCreateRoomRsp
	CSUserDissolveRoomRqst
	CSUserDissolveRoomRsp
	CSUserDissolveRoomNotify
	CSUserRenewRoomRqst
	CSUserRenewRoomRsp
	CSUserCreateDissolveRoomCostNotify
	CSUserRoomInfoChangeNotify
	CSUserTableChatRqst
	CSUserTableChatNotify
	CSUserTableDissolveApplyRqst
	CSUserTableAnswerDissolveApplyRqst
	CSUserTableDissolveApplyNotify
	CSMatchWinDetailInfo
	CSMatchWinRecord
	CSUserTableMatchWinRecordNotify
	UserReward
	UserEmailInfo
	CSUserGetEmailInfoRqst
	CSUserGetEmailInfoRsp
	CSUserOpenEmailRqst
	CSUserOpenEmailRsp
	CSUserGetEmailRewardRqst
	CSUserGetEmailRewardRsp
	CSUserDeleteEmailRqst
	CSUserDeleteEmailRsp
	CSUserNewEmailNotify
	CSUserSignInRqst
	CSUserSignInRsp
	CSUserGetConsecutiveSignInNumberRqst
	CSUserGetConsecutiveSignInNumberRsp
	SignInRewardCfg
	CSUserGetSignInRewardCfgRqst
	CSUserGetSignInRewardCfgRsp
	CSUserGetOrderRqst
	CSUserGetOrderRsp
	CSUserAuthRedeiptRqst
	CSUserAuthRedeiptRsp
	UserGoldRank
	CSUserGetGoldRankListRqst
	CSUserGetGoldRankListRsp
	UserWinCountRank
	CSUserGetWinCountRankListRqst
	CSUserGetWinCountRankListRsp
	UserTaskInfo
	CSUserTasks
	CSUserGetAllDailyTasksRqst
	CSUserGetAllAchievementTasksRqst
	CSUserGetTaskRewardRqst
	CSUserGetTaskRewardRsp
	CSUserRegAccountRqst
	CSUserRegAccountRsp
	NormalAuthMsg
	TencentAuthMsg
	VisitorAuthMsg
	CSUserAuthAccountRqst
	CSUserAuthAccountRsp
	CSUserChangePasswordRqst
	CSUserChangePasswordRsp
	CSUserConnectSwitchNotify
	CSUserMatchRecordListRqst
	CSMatchRecordInfo
	CSUserMatchRecordListRsp
	CSSystemMsgInfo
	CSSystemMsgNotify
	CSUserDiamondToGoldRqst
	CSUserMjHuanSanZhangNotify
	CSUserDiamondToGoldRsp
	CSUserReconnectEnterRoomRqst
	CSUserReconnectEnterRoomRsp
	UserLastGameInfo
	CSUserLastGameInfoNotify
	UserSingleBoardInfo
	CSUserAlreadyFinishGameInfoNotify
	CSUserTableReadyShutDownNotify
	BuyRecordContext
	CSUserGetBuyRecordRqst
	CSUserGetBuyRecordRsp
	UserGameInitInfo
	UserGameOperation
	CSUserGameAllOperationNotify
	ClubMatchContext
	CSUserGetClubMatchInfoRqst
	CSUserGetClubMatchInfoRsp
	ClubMemberBaseInfo
	ClubBaseInfo
	CSPlayerClubPageRqst
	CSPlayerClubPageRsp
	CSSearchClubRqst
	CSSearchClubRsp
	CSJoinClubRqst
	CSJoinClubRsp
	CSClubApplicationNotify
	CSQuitClubRqst
	CSQuitClubRsp
	CSQuitClubNotify
	CSClubInfoChangeNotify
	CSSetClubInfoRqst
	CSSetClubInfoRsp
	CSGetApplicantsRqst
	CSGetApplicantsRsp
	CSRefuseApplicantRqst
	CSRefuseApplicantRsp
	CSAcceptApplicantRqst
	CSAcceptApplicantRsp
	CSAddClubMemberNotify
	CSGetMembersRqst
	CSGetMembersRsp
	CSRemoveMemberRqst
	CSRemoveMemberRsp
	CSRemoveClubMemberNotify
	CSDissolveClubRqst
	CSDissolveClubRsp
	Contribution
	CSGetContributionRqst
	CSGetContributionRsp
	CSGetCaptainRewardRqst
	CSGetCaptainRewardRsp
	UserClubInfo
	CSUserGetClubInfoRqst
	CSUserGetClubInfoRsp
	CSUserNewClubInfoNotify
	CSClubMemberOnlineNotify
	CSUserInviteInPriviteRoomNotify
	CSUserEnterZfbTableRqst
	CSUserEnterZfbTableRsp
	CSUserZfbTableChangeInfoNotity
	CSUserZfbSettleInfoNotity
	ZfbRecordInfo
	CSUserZfbRecordNotity
	CSUserLeaveZfbTableRqst
	CSUserLeaveZfbTableRsp
	CSUserYaZhuInZfbRqst
	CSUserYaZhuInZfbRsp
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 充值平台类型
type USER_RECHARGE_PLATFORM int32

const (
	USER_RECHARGE_PLATFORM_RECHARGE_PLATFORM_IOS     USER_RECHARGE_PLATFORM = 1
	USER_RECHARGE_PLATFORM_RECHARGE_PLATFORM_WEIXIN  USER_RECHARGE_PLATFORM = 2
	USER_RECHARGE_PLATFORM_RECHARGE_PLATFORM_WINDOWS USER_RECHARGE_PLATFORM = 3
)

var USER_RECHARGE_PLATFORM_name = map[int32]string{
	1: "RECHARGE_PLATFORM_IOS",
	2: "RECHARGE_PLATFORM_WEIXIN",
	3: "RECHARGE_PLATFORM_WINDOWS",
}
var USER_RECHARGE_PLATFORM_value = map[string]int32{
	"RECHARGE_PLATFORM_IOS":     1,
	"RECHARGE_PLATFORM_WEIXIN":  2,
	"RECHARGE_PLATFORM_WINDOWS": 3,
}

func (x USER_RECHARGE_PLATFORM) Enum() *USER_RECHARGE_PLATFORM {
	p := new(USER_RECHARGE_PLATFORM)
	*p = x
	return p
}
func (x USER_RECHARGE_PLATFORM) String() string {
	return proto.EnumName(USER_RECHARGE_PLATFORM_name, int32(x))
}
func (x *USER_RECHARGE_PLATFORM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(USER_RECHARGE_PLATFORM_value, data, "USER_RECHARGE_PLATFORM")
	if err != nil {
		return err
	}
	*x = USER_RECHARGE_PLATFORM(value)
	return nil
}
func (USER_RECHARGE_PLATFORM) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 用户登录身份类型
type USER_IDENTITY_TYPE int32

const (
	USER_IDENTITY_TYPE_IDENTITY_TYPE_NORMAL  USER_IDENTITY_TYPE = 1
	USER_IDENTITY_TYPE_IDENTITY_TYPE_VISITOR USER_IDENTITY_TYPE = 2
	USER_IDENTITY_TYPE_IDENTITY_TYPE_WEIXIN  USER_IDENTITY_TYPE = 3
	USER_IDENTITY_TYPE_IDENTITY_TYPE_QQ      USER_IDENTITY_TYPE = 4
	USER_IDENTITY_TYPE_IDENTITY_TYPE_ROBOT   USER_IDENTITY_TYPE = 5
)

var USER_IDENTITY_TYPE_name = map[int32]string{
	1: "IDENTITY_TYPE_NORMAL",
	2: "IDENTITY_TYPE_VISITOR",
	3: "IDENTITY_TYPE_WEIXIN",
	4: "IDENTITY_TYPE_QQ",
	5: "IDENTITY_TYPE_ROBOT",
}
var USER_IDENTITY_TYPE_value = map[string]int32{
	"IDENTITY_TYPE_NORMAL":  1,
	"IDENTITY_TYPE_VISITOR": 2,
	"IDENTITY_TYPE_WEIXIN":  3,
	"IDENTITY_TYPE_QQ":      4,
	"IDENTITY_TYPE_ROBOT":   5,
}

func (x USER_IDENTITY_TYPE) Enum() *USER_IDENTITY_TYPE {
	p := new(USER_IDENTITY_TYPE)
	*p = x
	return p
}
func (x USER_IDENTITY_TYPE) String() string {
	return proto.EnumName(USER_IDENTITY_TYPE_name, int32(x))
}
func (x *USER_IDENTITY_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(USER_IDENTITY_TYPE_value, data, "USER_IDENTITY_TYPE")
	if err != nil {
		return err
	}
	*x = USER_IDENTITY_TYPE(value)
	return nil
}
func (USER_IDENTITY_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 结果类型
type RESULT_TYPE int32

const (
	RESULT_TYPE_RESULT_TYPE_SUCCESS             RESULT_TYPE = 0
	RESULT_TYPE_RESULT_TYPE_SYS_ERR             RESULT_TYPE = 1
	RESULT_TYPE_RESULT_TYPE_TIMEOUT_ERR         RESULT_TYPE = 2
	RESULT_TYPE_RESULT_TYPE_PHONENUM_ERR        RESULT_TYPE = 3
	RESULT_TYPE_RESULT_TYPE_REG_NICKNAME_ERR    RESULT_TYPE = 4
	RESULT_TYPE_RESULT_TYPE_REG_SEX_ERR         RESULT_TYPE = 5
	RESULT_TYPE_RESULT_TYPE_AUTH_PASSWORD_ERR   RESULT_TYPE = 6
	RESULT_TYPE_RESULT_TYPE_CHANGE_PASSWORD_ERR RESULT_TYPE = 7
)

var RESULT_TYPE_name = map[int32]string{
	0: "RESULT_TYPE_SUCCESS",
	1: "RESULT_TYPE_SYS_ERR",
	2: "RESULT_TYPE_TIMEOUT_ERR",
	3: "RESULT_TYPE_PHONENUM_ERR",
	4: "RESULT_TYPE_REG_NICKNAME_ERR",
	5: "RESULT_TYPE_REG_SEX_ERR",
	6: "RESULT_TYPE_AUTH_PASSWORD_ERR",
	7: "RESULT_TYPE_CHANGE_PASSWORD_ERR",
}
var RESULT_TYPE_value = map[string]int32{
	"RESULT_TYPE_SUCCESS":             0,
	"RESULT_TYPE_SYS_ERR":             1,
	"RESULT_TYPE_TIMEOUT_ERR":         2,
	"RESULT_TYPE_PHONENUM_ERR":        3,
	"RESULT_TYPE_REG_NICKNAME_ERR":    4,
	"RESULT_TYPE_REG_SEX_ERR":         5,
	"RESULT_TYPE_AUTH_PASSWORD_ERR":   6,
	"RESULT_TYPE_CHANGE_PASSWORD_ERR": 7,
}

func (x RESULT_TYPE) Enum() *RESULT_TYPE {
	p := new(RESULT_TYPE)
	*p = x
	return p
}
func (x RESULT_TYPE) String() string {
	return proto.EnumName(RESULT_TYPE_name, int32(x))
}
func (x *RESULT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RESULT_TYPE_value, data, "RESULT_TYPE")
	if err != nil {
		return err
	}
	*x = RESULT_TYPE(value)
	return nil
}
func (RESULT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type USER_RECHARGE_RESULT int32

const (
	USER_RECHARGE_RESULT_RECHARGE_RESULT_NONE    USER_RECHARGE_RESULT = 0
	USER_RECHARGE_RESULT_RECHARGE_RESULT_INIT    USER_RECHARGE_RESULT = 1
	USER_RECHARGE_RESULT_RECHARGE_RESULT_ING     USER_RECHARGE_RESULT = 2
	USER_RECHARGE_RESULT_RECHARGE_RESULT_SUCCESS USER_RECHARGE_RESULT = 3
	USER_RECHARGE_RESULT_RECHARGE_RESULT_FAIL    USER_RECHARGE_RESULT = 4
)

var USER_RECHARGE_RESULT_name = map[int32]string{
	0: "RECHARGE_RESULT_NONE",
	1: "RECHARGE_RESULT_INIT",
	2: "RECHARGE_RESULT_ING",
	3: "RECHARGE_RESULT_SUCCESS",
	4: "RECHARGE_RESULT_FAIL",
}
var USER_RECHARGE_RESULT_value = map[string]int32{
	"RECHARGE_RESULT_NONE":    0,
	"RECHARGE_RESULT_INIT":    1,
	"RECHARGE_RESULT_ING":     2,
	"RECHARGE_RESULT_SUCCESS": 3,
	"RECHARGE_RESULT_FAIL":    4,
}

func (x USER_RECHARGE_RESULT) Enum() *USER_RECHARGE_RESULT {
	p := new(USER_RECHARGE_RESULT)
	*p = x
	return p
}
func (x USER_RECHARGE_RESULT) String() string {
	return proto.EnumName(USER_RECHARGE_RESULT_name, int32(x))
}
func (x *USER_RECHARGE_RESULT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(USER_RECHARGE_RESULT_value, data, "USER_RECHARGE_RESULT")
	if err != nil {
		return err
	}
	*x = USER_RECHARGE_RESULT(value)
	return nil
}
func (USER_RECHARGE_RESULT) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 货币类型
type CURRENCY_TYPE int32

const (
	CURRENCY_TYPE_CURRENCY_TYPE_NONE    CURRENCY_TYPE = 0
	CURRENCY_TYPE_CURRENCY_TYPE_GOLD    CURRENCY_TYPE = 1
	CURRENCY_TYPE_CURRENCY_TYPE_DIAMOND CURRENCY_TYPE = 2
	CURRENCY_TYPE_CURRENCY_TYPE_POINT   CURRENCY_TYPE = 3
)

var CURRENCY_TYPE_name = map[int32]string{
	0: "CURRENCY_TYPE_NONE",
	1: "CURRENCY_TYPE_GOLD",
	2: "CURRENCY_TYPE_DIAMOND",
	3: "CURRENCY_TYPE_POINT",
}
var CURRENCY_TYPE_value = map[string]int32{
	"CURRENCY_TYPE_NONE":    0,
	"CURRENCY_TYPE_GOLD":    1,
	"CURRENCY_TYPE_DIAMOND": 2,
	"CURRENCY_TYPE_POINT":   3,
}

func (x CURRENCY_TYPE) Enum() *CURRENCY_TYPE {
	p := new(CURRENCY_TYPE)
	*p = x
	return p
}
func (x CURRENCY_TYPE) String() string {
	return proto.EnumName(CURRENCY_TYPE_name, int32(x))
}
func (x *CURRENCY_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CURRENCY_TYPE_value, data, "CURRENCY_TYPE")
	if err != nil {
		return err
	}
	*x = CURRENCY_TYPE(value)
	return nil
}
func (CURRENCY_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ROOM_TYPE int32

const (
	ROOM_TYPE_ROOM_TYPE_NONE                    ROOM_TYPE = 1
	ROOM_TYPE_ROOM_TYPE_CUSTOM_XUE_ZHAN_MJ      ROOM_TYPE = 500
	ROOM_TYPE_ROOM_TYPE_CUSTOM_GOLD_XUE_ZHAN_MJ ROOM_TYPE = 501
	ROOM_TYPE_ROOM_TYPE_CUSTOM_CLUB_XUE_ZHAN_MJ ROOM_TYPE = 502
	ROOM_TYPE_ROOM_TYPE_CUSTOM_ZFB_YULE_MJ      ROOM_TYPE = 503
)

var ROOM_TYPE_name = map[int32]string{
	1:   "ROOM_TYPE_NONE",
	500: "ROOM_TYPE_CUSTOM_XUE_ZHAN_MJ",
	501: "ROOM_TYPE_CUSTOM_GOLD_XUE_ZHAN_MJ",
	502: "ROOM_TYPE_CUSTOM_CLUB_XUE_ZHAN_MJ",
	503: "ROOM_TYPE_CUSTOM_ZFB_YULE_MJ",
}
var ROOM_TYPE_value = map[string]int32{
	"ROOM_TYPE_NONE":                    1,
	"ROOM_TYPE_CUSTOM_XUE_ZHAN_MJ":      500,
	"ROOM_TYPE_CUSTOM_GOLD_XUE_ZHAN_MJ": 501,
	"ROOM_TYPE_CUSTOM_CLUB_XUE_ZHAN_MJ": 502,
	"ROOM_TYPE_CUSTOM_ZFB_YULE_MJ":      503,
}

func (x ROOM_TYPE) Enum() *ROOM_TYPE {
	p := new(ROOM_TYPE)
	*p = x
	return p
}
func (x ROOM_TYPE) String() string {
	return proto.EnumName(ROOM_TYPE_name, int32(x))
}
func (x *ROOM_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ROOM_TYPE_value, data, "ROOM_TYPE")
	if err != nil {
		return err
	}
	*x = ROOM_TYPE(value)
	return nil
}
func (ROOM_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ZFB_TABLE_TYPE int32

const (
	ZFB_TABLE_TYPE_TALE_LEVE_NONE  ZFB_TABLE_TYPE = 1
	ZFB_TABLE_TYPE_TALE_LEVE_ONE   ZFB_TABLE_TYPE = 2
	ZFB_TABLE_TYPE_TALE_LEVE_TWO   ZFB_TABLE_TYPE = 3
	ZFB_TABLE_TYPE_TALE_LEVE_THREE ZFB_TABLE_TYPE = 4
)

var ZFB_TABLE_TYPE_name = map[int32]string{
	1: "TALE_LEVE_NONE",
	2: "TALE_LEVE_ONE",
	3: "TALE_LEVE_TWO",
	4: "TALE_LEVE_THREE",
}
var ZFB_TABLE_TYPE_value = map[string]int32{
	"TALE_LEVE_NONE":  1,
	"TALE_LEVE_ONE":   2,
	"TALE_LEVE_TWO":   3,
	"TALE_LEVE_THREE": 4,
}

func (x ZFB_TABLE_TYPE) Enum() *ZFB_TABLE_TYPE {
	p := new(ZFB_TABLE_TYPE)
	*p = x
	return p
}
func (x ZFB_TABLE_TYPE) String() string {
	return proto.EnumName(ZFB_TABLE_TYPE_name, int32(x))
}
func (x *ZFB_TABLE_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ZFB_TABLE_TYPE_value, data, "ZFB_TABLE_TYPE")
	if err != nil {
		return err
	}
	*x = ZFB_TABLE_TYPE(value)
	return nil
}
func (ZFB_TABLE_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ZFB_TABLE_RULES_TYPE int32

const (
	ZFB_TABLE_RULES_TYPE_ZFB_RULES_NONE   ZFB_TABLE_RULES_TYPE = 1
	ZFB_TABLE_RULES_TYPE_ZFB_RULES_ZHUANG ZFB_TABLE_RULES_TYPE = 2
	ZFB_TABLE_RULES_TYPE_ZFB_RULES_IDLE   ZFB_TABLE_RULES_TYPE = 3
	ZFB_TABLE_RULES_TYPE_ZFB_RULES_HE     ZFB_TABLE_RULES_TYPE = 4
	ZFB_TABLE_RULES_TYPE_ZFB_RULES_LEOPAR ZFB_TABLE_RULES_TYPE = 5
	ZFB_TABLE_RULES_TYPE_ZFB_RULES_BAR    ZFB_TABLE_RULES_TYPE = 6
)

var ZFB_TABLE_RULES_TYPE_name = map[int32]string{
	1: "ZFB_RULES_NONE",
	2: "ZFB_RULES_ZHUANG",
	3: "ZFB_RULES_IDLE",
	4: "ZFB_RULES_HE",
	5: "ZFB_RULES_LEOPAR",
	6: "ZFB_RULES_BAR",
}
var ZFB_TABLE_RULES_TYPE_value = map[string]int32{
	"ZFB_RULES_NONE":   1,
	"ZFB_RULES_ZHUANG": 2,
	"ZFB_RULES_IDLE":   3,
	"ZFB_RULES_HE":     4,
	"ZFB_RULES_LEOPAR": 5,
	"ZFB_RULES_BAR":    6,
}

func (x ZFB_TABLE_RULES_TYPE) Enum() *ZFB_TABLE_RULES_TYPE {
	p := new(ZFB_TABLE_RULES_TYPE)
	*p = x
	return p
}
func (x ZFB_TABLE_RULES_TYPE) String() string {
	return proto.EnumName(ZFB_TABLE_RULES_TYPE_name, int32(x))
}
func (x *ZFB_TABLE_RULES_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ZFB_TABLE_RULES_TYPE_value, data, "ZFB_TABLE_RULES_TYPE")
	if err != nil {
		return err
	}
	*x = ZFB_TABLE_RULES_TYPE(value)
	return nil
}
func (ZFB_TABLE_RULES_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type RoomState int32

const (
	RoomState_Room_State_Init       RoomState = 1
	RoomState_Room_State_Game       RoomState = 2
	RoomState_Room_State_Dissolve   RoomState = 3
	RoomState_Room_State_Wait_Renew RoomState = 4
)

var RoomState_name = map[int32]string{
	1: "Room_State_Init",
	2: "Room_State_Game",
	3: "Room_State_Dissolve",
	4: "Room_State_Wait_Renew",
}
var RoomState_value = map[string]int32{
	"Room_State_Init":       1,
	"Room_State_Game":       2,
	"Room_State_Dissolve":   3,
	"Room_State_Wait_Renew": 4,
}

func (x RoomState) Enum() *RoomState {
	p := new(RoomState)
	*p = x
	return p
}
func (x RoomState) String() string {
	return proto.EnumName(RoomState_name, int32(x))
}
func (x *RoomState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RoomState_value, data, "RoomState")
	if err != nil {
		return err
	}
	*x = RoomState(value)
	return nil
}
func (RoomState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type TableDefine int32

const (
	TableDefine_TABLE_SEAT_NONE TableDefine = 100
)

var TableDefine_name = map[int32]string{
	100: "TABLE_SEAT_NONE",
}
var TableDefine_value = map[string]int32{
	"TABLE_SEAT_NONE": 100,
}

func (x TableDefine) Enum() *TableDefine {
	p := new(TableDefine)
	*p = x
	return p
}
func (x TableDefine) String() string {
	return proto.EnumName(TableDefine_name, int32(x))
}
func (x *TableDefine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableDefine_value, data, "TableDefine")
	if err != nil {
		return err
	}
	*x = TableDefine(value)
	return nil
}
func (TableDefine) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type TableState int32

const (
	TableState_Table_State_Init          TableState = 1
	TableState_Table_State_Start         TableState = 2
	TableState_Table_State_Gaming        TableState = 3
	TableState_Table_State_Game_End      TableState = 4
	TableState_Table_State_Dissolve      TableState = 5
	TableState_Table_State_Wait_Renew    TableState = 6
	TableState_Table_State_Wait_Dissolve TableState = 7
	TableState_Table_State_Wait_Recharge TableState = 8
)

var TableState_name = map[int32]string{
	1: "Table_State_Init",
	2: "Table_State_Start",
	3: "Table_State_Gaming",
	4: "Table_State_Game_End",
	5: "Table_State_Dissolve",
	6: "Table_State_Wait_Renew",
	7: "Table_State_Wait_Dissolve",
	8: "Table_State_Wait_Recharge",
}
var TableState_value = map[string]int32{
	"Table_State_Init":          1,
	"Table_State_Start":         2,
	"Table_State_Gaming":        3,
	"Table_State_Game_End":      4,
	"Table_State_Dissolve":      5,
	"Table_State_Wait_Renew":    6,
	"Table_State_Wait_Dissolve": 7,
	"Table_State_Wait_Recharge": 8,
}

func (x TableState) Enum() *TableState {
	p := new(TableState)
	*p = x
	return p
}
func (x TableState) String() string {
	return proto.EnumName(TableState_name, int32(x))
}
func (x *TableState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableState_value, data, "TableState")
	if err != nil {
		return err
	}
	*x = TableState(value)
	return nil
}
func (TableState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type MjUserState int32

const (
	MjUserState_Mj_User_State_Init          MjUserState = 1
	MjUserState_Mj_User_State_Sit           MjUserState = 2
	MjUserState_Mj_User_State_Ready         MjUserState = 3
	MjUserState_Mj_User_State_Playing       MjUserState = 4
	MjUserState_Mj_User_State_Hu            MjUserState = 5
	MjUserState_Mj_User_State_GiveUp        MjUserState = 6
	MjUserState_Mj_User_State_Observer_Sit  MjUserState = 7
	MjUserState_Mj_User_State_Wait_Recharge MjUserState = 8
)

var MjUserState_name = map[int32]string{
	1: "Mj_User_State_Init",
	2: "Mj_User_State_Sit",
	3: "Mj_User_State_Ready",
	4: "Mj_User_State_Playing",
	5: "Mj_User_State_Hu",
	6: "Mj_User_State_GiveUp",
	7: "Mj_User_State_Observer_Sit",
	8: "Mj_User_State_Wait_Recharge",
}
var MjUserState_value = map[string]int32{
	"Mj_User_State_Init":          1,
	"Mj_User_State_Sit":           2,
	"Mj_User_State_Ready":         3,
	"Mj_User_State_Playing":       4,
	"Mj_User_State_Hu":            5,
	"Mj_User_State_GiveUp":        6,
	"Mj_User_State_Observer_Sit":  7,
	"Mj_User_State_Wait_Recharge": 8,
}

func (x MjUserState) Enum() *MjUserState {
	p := new(MjUserState)
	*p = x
	return p
}
func (x MjUserState) String() string {
	return proto.EnumName(MjUserState_name, int32(x))
}
func (x *MjUserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MjUserState_value, data, "MjUserState")
	if err != nil {
		return err
	}
	*x = MjUserState(value)
	return nil
}
func (MjUserState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type PlayerDefine int32

const (
	PlayerDefine_INVALID_LATITUDE_LONGITUDE PlayerDefine = 200
)

var PlayerDefine_name = map[int32]string{
	200: "INVALID_LATITUDE_LONGITUDE",
}
var PlayerDefine_value = map[string]int32{
	"INVALID_LATITUDE_LONGITUDE": 200,
}

func (x PlayerDefine) Enum() *PlayerDefine {
	p := new(PlayerDefine)
	*p = x
	return p
}
func (x PlayerDefine) String() string {
	return proto.EnumName(PlayerDefine_name, int32(x))
}
func (x *PlayerDefine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayerDefine_value, data, "PlayerDefine")
	if err != nil {
		return err
	}
	*x = PlayerDefine(value)
	return nil
}
func (PlayerDefine) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

// 麻将操作码
type MJ_OPERATE_MASK int32

const (
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE           MJ_OPERATE_MASK = 1
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_DEAL           MJ_OPERATE_MASK = 2
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_GUO            MJ_OPERATE_MASK = 3
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_PENG           MJ_OPERATE_MASK = 4
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_MING_GANG      MJ_OPERATE_MASK = 5
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_AN_GANG        MJ_OPERATE_MASK = 6
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_BU_GANG        MJ_OPERATE_MASK = 7
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_REJECTSUIT     MJ_OPERATE_MASK = 8
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_HU             MJ_OPERATE_MASK = 9
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_MO_PAI         MJ_OPERATE_MASK = 10
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_GIVE_UP        MJ_OPERATE_MASK = 11
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_HUAN_SAN_ZHANG MJ_OPERATE_MASK = 12
)

var MJ_OPERATE_MASK_name = map[int32]string{
	1:  "MJ_OPERATE_MASK_NONE",
	2:  "MJ_OPERATE_MASK_DEAL",
	3:  "MJ_OPERATE_MASK_GUO",
	4:  "MJ_OPERATE_MASK_PENG",
	5:  "MJ_OPERATE_MASK_MING_GANG",
	6:  "MJ_OPERATE_MASK_AN_GANG",
	7:  "MJ_OPERATE_MASK_BU_GANG",
	8:  "MJ_OPERATE_MASK_REJECTSUIT",
	9:  "MJ_OPERATE_MASK_HU",
	10: "MJ_OPERATE_MASK_MO_PAI",
	11: "MJ_OPERATE_MASK_GIVE_UP",
	12: "MJ_OPERATE_MASK_HUAN_SAN_ZHANG",
}
var MJ_OPERATE_MASK_value = map[string]int32{
	"MJ_OPERATE_MASK_NONE":           1,
	"MJ_OPERATE_MASK_DEAL":           2,
	"MJ_OPERATE_MASK_GUO":            3,
	"MJ_OPERATE_MASK_PENG":           4,
	"MJ_OPERATE_MASK_MING_GANG":      5,
	"MJ_OPERATE_MASK_AN_GANG":        6,
	"MJ_OPERATE_MASK_BU_GANG":        7,
	"MJ_OPERATE_MASK_REJECTSUIT":     8,
	"MJ_OPERATE_MASK_HU":             9,
	"MJ_OPERATE_MASK_MO_PAI":         10,
	"MJ_OPERATE_MASK_GIVE_UP":        11,
	"MJ_OPERATE_MASK_HUAN_SAN_ZHANG": 12,
}

func (x MJ_OPERATE_MASK) Enum() *MJ_OPERATE_MASK {
	p := new(MJ_OPERATE_MASK)
	*p = x
	return p
}
func (x MJ_OPERATE_MASK) String() string {
	return proto.EnumName(MJ_OPERATE_MASK_name, int32(x))
}
func (x *MJ_OPERATE_MASK) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJ_OPERATE_MASK_value, data, "MJ_OPERATE_MASK")
	if err != nil {
		return err
	}
	*x = MJ_OPERATE_MASK(value)
	return nil
}
func (MJ_OPERATE_MASK) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

// 麻将操作码
type MJ_SETTLEMENT_TYPE int32

const (
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE       MJ_SETTLEMENT_TYPE = 0
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_HU         MJ_SETTLEMENT_TYPE = 1
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ZI_MO      MJ_SETTLEMENT_TYPE = 2
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_QIANG_GANG MJ_SETTLEMENT_TYPE = 3
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GANG_HUA   MJ_SETTLEMENT_TYPE = 4
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GANG_PAO   MJ_SETTLEMENT_TYPE = 5
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GUA_FENG   MJ_SETTLEMENT_TYPE = 6
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_XIA_YU     MJ_SETTLEMENT_TYPE = 7
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_CHA_JIAO   MJ_SETTLEMENT_TYPE = 8
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_TUI_SHUI   MJ_SETTLEMENT_TYPE = 9
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_HUA_ZHU    MJ_SETTLEMENT_TYPE = 10
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ZHUAN_YU   MJ_SETTLEMENT_TYPE = 11
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_TIAN_HU    MJ_SETTLEMENT_TYPE = 12
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_DI_HU      MJ_SETTLEMENT_TYPE = 13
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ESCAPE     MJ_SETTLEMENT_TYPE = 14
)

var MJ_SETTLEMENT_TYPE_name = map[int32]string{
	0:  "MJ_SETTLEMENT_TYPE_NONE",
	1:  "MJ_SETTLEMENT_TYPE_HU",
	2:  "MJ_SETTLEMENT_TYPE_ZI_MO",
	3:  "MJ_SETTLEMENT_TYPE_QIANG_GANG",
	4:  "MJ_SETTLEMENT_TYPE_GANG_HUA",
	5:  "MJ_SETTLEMENT_TYPE_GANG_PAO",
	6:  "MJ_SETTLEMENT_TYPE_GUA_FENG",
	7:  "MJ_SETTLEMENT_TYPE_XIA_YU",
	8:  "MJ_SETTLEMENT_TYPE_CHA_JIAO",
	9:  "MJ_SETTLEMENT_TYPE_TUI_SHUI",
	10: "MJ_SETTLEMENT_TYPE_HUA_ZHU",
	11: "MJ_SETTLEMENT_TYPE_ZHUAN_YU",
	12: "MJ_SETTLEMENT_TYPE_TIAN_HU",
	13: "MJ_SETTLEMENT_TYPE_DI_HU",
	14: "MJ_SETTLEMENT_TYPE_ESCAPE",
}
var MJ_SETTLEMENT_TYPE_value = map[string]int32{
	"MJ_SETTLEMENT_TYPE_NONE":       0,
	"MJ_SETTLEMENT_TYPE_HU":         1,
	"MJ_SETTLEMENT_TYPE_ZI_MO":      2,
	"MJ_SETTLEMENT_TYPE_QIANG_GANG": 3,
	"MJ_SETTLEMENT_TYPE_GANG_HUA":   4,
	"MJ_SETTLEMENT_TYPE_GANG_PAO":   5,
	"MJ_SETTLEMENT_TYPE_GUA_FENG":   6,
	"MJ_SETTLEMENT_TYPE_XIA_YU":     7,
	"MJ_SETTLEMENT_TYPE_CHA_JIAO":   8,
	"MJ_SETTLEMENT_TYPE_TUI_SHUI":   9,
	"MJ_SETTLEMENT_TYPE_HUA_ZHU":    10,
	"MJ_SETTLEMENT_TYPE_ZHUAN_YU":   11,
	"MJ_SETTLEMENT_TYPE_TIAN_HU":    12,
	"MJ_SETTLEMENT_TYPE_DI_HU":      13,
	"MJ_SETTLEMENT_TYPE_ESCAPE":     14,
}

func (x MJ_SETTLEMENT_TYPE) Enum() *MJ_SETTLEMENT_TYPE {
	p := new(MJ_SETTLEMENT_TYPE)
	*p = x
	return p
}
func (x MJ_SETTLEMENT_TYPE) String() string {
	return proto.EnumName(MJ_SETTLEMENT_TYPE_name, int32(x))
}
func (x *MJ_SETTLEMENT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJ_SETTLEMENT_TYPE_value, data, "MJ_SETTLEMENT_TYPE")
	if err != nil {
		return err
	}
	*x = MJ_SETTLEMENT_TYPE(value)
	return nil
}
func (MJ_SETTLEMENT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type FINAL_CARD_TYPE int32

const (
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_NONE         FINAL_CARD_TYPE = 0
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_HU           FINAL_CARD_TYPE = 1
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_DA_DUI       FINAL_CARD_TYPE = 2
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_JIANG        FINAL_CARD_TYPE = 4
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_YAO_JIU      FINAL_CARD_TYPE = 8
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_QING         FINAL_CARD_TYPE = 16
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_QI_DUI       FINAL_CARD_TYPE = 32
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_JIN_GOU_DIAO FINAL_CARD_TYPE = 64
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_HAI_DI_LAO   FINAL_CARD_TYPE = 128
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_MEN_QING     FINAL_CARD_TYPE = 256
	FINAL_CARD_TYPE_FINAL_CARD_TYPE_ZHONG_ZHANG  FINAL_CARD_TYPE = 512
)

var FINAL_CARD_TYPE_name = map[int32]string{
	0:   "FINAL_CARD_TYPE_NONE",
	1:   "FINAL_CARD_TYPE_HU",
	2:   "FINAL_CARD_TYPE_DA_DUI",
	4:   "FINAL_CARD_TYPE_JIANG",
	8:   "FINAL_CARD_TYPE_YAO_JIU",
	16:  "FINAL_CARD_TYPE_QING",
	32:  "FINAL_CARD_TYPE_QI_DUI",
	64:  "FINAL_CARD_TYPE_JIN_GOU_DIAO",
	128: "FINAL_CARD_TYPE_HAI_DI_LAO",
	256: "FINAL_CARD_TYPE_MEN_QING",
	512: "FINAL_CARD_TYPE_ZHONG_ZHANG",
}
var FINAL_CARD_TYPE_value = map[string]int32{
	"FINAL_CARD_TYPE_NONE":         0,
	"FINAL_CARD_TYPE_HU":           1,
	"FINAL_CARD_TYPE_DA_DUI":       2,
	"FINAL_CARD_TYPE_JIANG":        4,
	"FINAL_CARD_TYPE_YAO_JIU":      8,
	"FINAL_CARD_TYPE_QING":         16,
	"FINAL_CARD_TYPE_QI_DUI":       32,
	"FINAL_CARD_TYPE_JIN_GOU_DIAO": 64,
	"FINAL_CARD_TYPE_HAI_DI_LAO":   128,
	"FINAL_CARD_TYPE_MEN_QING":     256,
	"FINAL_CARD_TYPE_ZHONG_ZHANG":  512,
}

func (x FINAL_CARD_TYPE) Enum() *FINAL_CARD_TYPE {
	p := new(FINAL_CARD_TYPE)
	*p = x
	return p
}
func (x FINAL_CARD_TYPE) String() string {
	return proto.EnumName(FINAL_CARD_TYPE_name, int32(x))
}
func (x *FINAL_CARD_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FINAL_CARD_TYPE_value, data, "FINAL_CARD_TYPE")
	if err != nil {
		return err
	}
	*x = FINAL_CARD_TYPE(value)
	return nil
}
func (FINAL_CARD_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type HUAN_SAN_ZHANG_TYPE int32

const (
	HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_NONE HUAN_SAN_ZHANG_TYPE = 0
	HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_1    HUAN_SAN_ZHANG_TYPE = 1
	HUAN_SAN_ZHANG_TYPE_HUAN_SAN_ZHANG_TYPE_2    HUAN_SAN_ZHANG_TYPE = 2
)

var HUAN_SAN_ZHANG_TYPE_name = map[int32]string{
	0: "HUAN_SAN_ZHANG_TYPE_NONE",
	1: "HUAN_SAN_ZHANG_TYPE_1",
	2: "HUAN_SAN_ZHANG_TYPE_2",
}
var HUAN_SAN_ZHANG_TYPE_value = map[string]int32{
	"HUAN_SAN_ZHANG_TYPE_NONE": 0,
	"HUAN_SAN_ZHANG_TYPE_1":    1,
	"HUAN_SAN_ZHANG_TYPE_2":    2,
}

func (x HUAN_SAN_ZHANG_TYPE) Enum() *HUAN_SAN_ZHANG_TYPE {
	p := new(HUAN_SAN_ZHANG_TYPE)
	*p = x
	return p
}
func (x HUAN_SAN_ZHANG_TYPE) String() string {
	return proto.EnumName(HUAN_SAN_ZHANG_TYPE_name, int32(x))
}
func (x *HUAN_SAN_ZHANG_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HUAN_SAN_ZHANG_TYPE_value, data, "HUAN_SAN_ZHANG_TYPE")
	if err != nil {
		return err
	}
	*x = HUAN_SAN_ZHANG_TYPE(value)
	return nil
}
func (HUAN_SAN_ZHANG_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type TableFinalDecision int32

const (
	TableFinalDecision_Table_Decision_None     TableFinalDecision = 1
	TableFinalDecision_Table_Decision_Agree    TableFinalDecision = 2
	TableFinalDecision_Table_Decision_Disagree TableFinalDecision = 3
)

var TableFinalDecision_name = map[int32]string{
	1: "Table_Decision_None",
	2: "Table_Decision_Agree",
	3: "Table_Decision_Disagree",
}
var TableFinalDecision_value = map[string]int32{
	"Table_Decision_None":     1,
	"Table_Decision_Agree":    2,
	"Table_Decision_Disagree": 3,
}

func (x TableFinalDecision) Enum() *TableFinalDecision {
	p := new(TableFinalDecision)
	*p = x
	return p
}
func (x TableFinalDecision) String() string {
	return proto.EnumName(TableFinalDecision_name, int32(x))
}
func (x *TableFinalDecision) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableFinalDecision_value, data, "TableFinalDecision")
	if err != nil {
		return err
	}
	*x = TableFinalDecision(value)
	return nil
}
func (TableFinalDecision) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

// 邮件类型
type GAME_EMAIL_TYPE int32

const (
	GAME_EMAIL_TYPE_GAME_EMAIL_TYPE_TEXT   GAME_EMAIL_TYPE = 0
	GAME_EMAIL_TYPE_GAME_EMAIL_TYPE_REWARD GAME_EMAIL_TYPE = 1
)

var GAME_EMAIL_TYPE_name = map[int32]string{
	0: "GAME_EMAIL_TYPE_TEXT",
	1: "GAME_EMAIL_TYPE_REWARD",
}
var GAME_EMAIL_TYPE_value = map[string]int32{
	"GAME_EMAIL_TYPE_TEXT":   0,
	"GAME_EMAIL_TYPE_REWARD": 1,
}

func (x GAME_EMAIL_TYPE) Enum() *GAME_EMAIL_TYPE {
	p := new(GAME_EMAIL_TYPE)
	*p = x
	return p
}
func (x GAME_EMAIL_TYPE) String() string {
	return proto.EnumName(GAME_EMAIL_TYPE_name, int32(x))
}
func (x *GAME_EMAIL_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GAME_EMAIL_TYPE_value, data, "GAME_EMAIL_TYPE")
	if err != nil {
		return err
	}
	*x = GAME_EMAIL_TYPE(value)
	return nil
}
func (GAME_EMAIL_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type GAME_EMAIL_NOTIFY_TYPE int32

const (
	GAME_EMAIL_NOTIFY_TYPE_GAME_EMAIL_NOTIFY_TYPE_NONE   GAME_EMAIL_NOTIFY_TYPE = 0
	GAME_EMAIL_NOTIFY_TYPE_GAME_EMAIL_NOTIFY_TYPE_REMIND GAME_EMAIL_NOTIFY_TYPE = 1
)

var GAME_EMAIL_NOTIFY_TYPE_name = map[int32]string{
	0: "GAME_EMAIL_NOTIFY_TYPE_NONE",
	1: "GAME_EMAIL_NOTIFY_TYPE_REMIND",
}
var GAME_EMAIL_NOTIFY_TYPE_value = map[string]int32{
	"GAME_EMAIL_NOTIFY_TYPE_NONE":   0,
	"GAME_EMAIL_NOTIFY_TYPE_REMIND": 1,
}

func (x GAME_EMAIL_NOTIFY_TYPE) Enum() *GAME_EMAIL_NOTIFY_TYPE {
	p := new(GAME_EMAIL_NOTIFY_TYPE)
	*p = x
	return p
}
func (x GAME_EMAIL_NOTIFY_TYPE) String() string {
	return proto.EnumName(GAME_EMAIL_NOTIFY_TYPE_name, int32(x))
}
func (x *GAME_EMAIL_NOTIFY_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GAME_EMAIL_NOTIFY_TYPE_value, data, "GAME_EMAIL_NOTIFY_TYPE")
	if err != nil {
		return err
	}
	*x = GAME_EMAIL_NOTIFY_TYPE(value)
	return nil
}
func (GAME_EMAIL_NOTIFY_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

// 状态类型
type GAME_EMAIL_STATUS int32

const (
	GAME_EMAIL_STATUS_GAME_EMAIL_STATUS_NONE   GAME_EMAIL_STATUS = 0
	GAME_EMAIL_STATUS_GAME_EMAIL_STATUS_OPENED GAME_EMAIL_STATUS = 1
)

var GAME_EMAIL_STATUS_name = map[int32]string{
	0: "GAME_EMAIL_STATUS_NONE",
	1: "GAME_EMAIL_STATUS_OPENED",
}
var GAME_EMAIL_STATUS_value = map[string]int32{
	"GAME_EMAIL_STATUS_NONE":   0,
	"GAME_EMAIL_STATUS_OPENED": 1,
}

func (x GAME_EMAIL_STATUS) Enum() *GAME_EMAIL_STATUS {
	p := new(GAME_EMAIL_STATUS)
	*p = x
	return p
}
func (x GAME_EMAIL_STATUS) String() string {
	return proto.EnumName(GAME_EMAIL_STATUS_name, int32(x))
}
func (x *GAME_EMAIL_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GAME_EMAIL_STATUS_value, data, "GAME_EMAIL_STATUS")
	if err != nil {
		return err
	}
	*x = GAME_EMAIL_STATUS(value)
	return nil
}
func (GAME_EMAIL_STATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type GAME_TASK_TYPE int32

const (
	GAME_TASK_TYPE_GAME_TASK_TYPE_NONE        GAME_TASK_TYPE = 0
	GAME_TASK_TYPE_GAME_TASK_TYPE_DAILY       GAME_TASK_TYPE = 1
	GAME_TASK_TYPE_GAME_TASK_TYPE_ACHIEVEMENT GAME_TASK_TYPE = 2
)

var GAME_TASK_TYPE_name = map[int32]string{
	0: "GAME_TASK_TYPE_NONE",
	1: "GAME_TASK_TYPE_DAILY",
	2: "GAME_TASK_TYPE_ACHIEVEMENT",
}
var GAME_TASK_TYPE_value = map[string]int32{
	"GAME_TASK_TYPE_NONE":        0,
	"GAME_TASK_TYPE_DAILY":       1,
	"GAME_TASK_TYPE_ACHIEVEMENT": 2,
}

func (x GAME_TASK_TYPE) Enum() *GAME_TASK_TYPE {
	p := new(GAME_TASK_TYPE)
	*p = x
	return p
}
func (x GAME_TASK_TYPE) String() string {
	return proto.EnumName(GAME_TASK_TYPE_name, int32(x))
}
func (x *GAME_TASK_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GAME_TASK_TYPE_value, data, "GAME_TASK_TYPE")
	if err != nil {
		return err
	}
	*x = GAME_TASK_TYPE(value)
	return nil
}
func (GAME_TASK_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type TASK_CONDITION_TYPE int32

const (
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_NONE                      TASK_CONDITION_TYPE = 0
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_CLASSIC_MODE              TASK_CONDITION_TYPE = 1
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_PENG                      TASK_CONDITION_TYPE = 2
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_GANG                      TASK_CONDITION_TYPE = 3
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_ZI_MO                     TASK_CONDITION_TYPE = 4
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_QING                      TASK_CONDITION_TYPE = 5
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_DA_DUI_ZI                 TASK_CONDITION_TYPE = 6
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_GANG_SHANG_HUA            TASK_CONDITION_TYPE = 7
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_LONG_QI_DUI               TASK_CONDITION_TYPE = 8
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_QIANG_GANG                TASK_CONDITION_TYPE = 9
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_YAO_JIU                   TASK_CONDITION_TYPE = 10
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_NEW_REGISTER              TASK_CONDITION_TYPE = 50
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_COMPLETE_COIN_FIFTY       TASK_CONDITION_TYPE = 51
	TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_COMPLETE_COIN_ONE_HUNDRED TASK_CONDITION_TYPE = 52
)

var TASK_CONDITION_TYPE_name = map[int32]string{
	0:  "TASK_CONDITION_TYPE_NONE",
	1:  "TASK_CONDITION_TYPE_CLASSIC_MODE",
	2:  "TASK_CONDITION_TYPE_PENG",
	3:  "TASK_CONDITION_TYPE_GANG",
	4:  "TASK_CONDITION_TYPE_ZI_MO",
	5:  "TASK_CONDITION_TYPE_QING",
	6:  "TASK_CONDITION_TYPE_DA_DUI_ZI",
	7:  "TASK_CONDITION_TYPE_GANG_SHANG_HUA",
	8:  "TASK_CONDITION_TYPE_LONG_QI_DUI",
	9:  "TASK_CONDITION_TYPE_QIANG_GANG",
	10: "TASK_CONDITION_TYPE_YAO_JIU",
	50: "TASK_CONDITION_TYPE_NEW_REGISTER",
	51: "TASK_CONDITION_TYPE_COMPLETE_COIN_FIFTY",
	52: "TASK_CONDITION_TYPE_COMPLETE_COIN_ONE_HUNDRED",
}
var TASK_CONDITION_TYPE_value = map[string]int32{
	"TASK_CONDITION_TYPE_NONE":                      0,
	"TASK_CONDITION_TYPE_CLASSIC_MODE":              1,
	"TASK_CONDITION_TYPE_PENG":                      2,
	"TASK_CONDITION_TYPE_GANG":                      3,
	"TASK_CONDITION_TYPE_ZI_MO":                     4,
	"TASK_CONDITION_TYPE_QING":                      5,
	"TASK_CONDITION_TYPE_DA_DUI_ZI":                 6,
	"TASK_CONDITION_TYPE_GANG_SHANG_HUA":            7,
	"TASK_CONDITION_TYPE_LONG_QI_DUI":               8,
	"TASK_CONDITION_TYPE_QIANG_GANG":                9,
	"TASK_CONDITION_TYPE_YAO_JIU":                   10,
	"TASK_CONDITION_TYPE_NEW_REGISTER":              50,
	"TASK_CONDITION_TYPE_COMPLETE_COIN_FIFTY":       51,
	"TASK_CONDITION_TYPE_COMPLETE_COIN_ONE_HUNDRED": 52,
}

func (x TASK_CONDITION_TYPE) Enum() *TASK_CONDITION_TYPE {
	p := new(TASK_CONDITION_TYPE)
	*p = x
	return p
}
func (x TASK_CONDITION_TYPE) String() string {
	return proto.EnumName(TASK_CONDITION_TYPE_name, int32(x))
}
func (x *TASK_CONDITION_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TASK_CONDITION_TYPE_value, data, "TASK_CONDITION_TYPE")
	if err != nil {
		return err
	}
	*x = TASK_CONDITION_TYPE(value)
	return nil
}
func (TASK_CONDITION_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

// 换三张的类型
type TASK_HSZ_TYPE int32

const (
	TASK_HSZ_TYPE_TASK_HSZ_TYPE_NONE           TASK_HSZ_TYPE = 0
	TASK_HSZ_TYPE_TASK_HSZ_TYPE_CLOCKWISE      TASK_HSZ_TYPE = 1
	TASK_HSZ_TYPE_TASK_HSZ_TYPE_ANTI_CLOCKWISE TASK_HSZ_TYPE = 2
	TASK_HSZ_TYPE_TASK_HSZ_TYPE_FTF            TASK_HSZ_TYPE = 3
)

var TASK_HSZ_TYPE_name = map[int32]string{
	0: "TASK_HSZ_TYPE_NONE",
	1: "TASK_HSZ_TYPE_CLOCKWISE",
	2: "TASK_HSZ_TYPE_ANTI_CLOCKWISE",
	3: "TASK_HSZ_TYPE_FTF",
}
var TASK_HSZ_TYPE_value = map[string]int32{
	"TASK_HSZ_TYPE_NONE":           0,
	"TASK_HSZ_TYPE_CLOCKWISE":      1,
	"TASK_HSZ_TYPE_ANTI_CLOCKWISE": 2,
	"TASK_HSZ_TYPE_FTF":            3,
}

func (x TASK_HSZ_TYPE) Enum() *TASK_HSZ_TYPE {
	p := new(TASK_HSZ_TYPE)
	*p = x
	return p
}
func (x TASK_HSZ_TYPE) String() string {
	return proto.EnumName(TASK_HSZ_TYPE_name, int32(x))
}
func (x *TASK_HSZ_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TASK_HSZ_TYPE_value, data, "TASK_HSZ_TYPE")
	if err != nil {
		return err
	}
	*x = TASK_HSZ_TYPE(value)
	return nil
}
func (TASK_HSZ_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type CLUB_MEMBER_TYPE int32

const (
	CLUB_MEMBER_TYPE_CLUB_MEMBER_TYPE_NONE    CLUB_MEMBER_TYPE = 0
	CLUB_MEMBER_TYPE_CLUB_MEMBER_TYPE_MEMBER  CLUB_MEMBER_TYPE = 1
	CLUB_MEMBER_TYPE_CLUB_MEMBER_TYPE_CAPTAIN CLUB_MEMBER_TYPE = 2
)

var CLUB_MEMBER_TYPE_name = map[int32]string{
	0: "CLUB_MEMBER_TYPE_NONE",
	1: "CLUB_MEMBER_TYPE_MEMBER",
	2: "CLUB_MEMBER_TYPE_CAPTAIN",
}
var CLUB_MEMBER_TYPE_value = map[string]int32{
	"CLUB_MEMBER_TYPE_NONE":    0,
	"CLUB_MEMBER_TYPE_MEMBER":  1,
	"CLUB_MEMBER_TYPE_CAPTAIN": 2,
}

func (x CLUB_MEMBER_TYPE) Enum() *CLUB_MEMBER_TYPE {
	p := new(CLUB_MEMBER_TYPE)
	*p = x
	return p
}
func (x CLUB_MEMBER_TYPE) String() string {
	return proto.EnumName(CLUB_MEMBER_TYPE_name, int32(x))
}
func (x *CLUB_MEMBER_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CLUB_MEMBER_TYPE_value, data, "CLUB_MEMBER_TYPE")
	if err != nil {
		return err
	}
	*x = CLUB_MEMBER_TYPE(value)
	return nil
}
func (CLUB_MEMBER_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type CLUB_STATUS int32

const (
	CLUB_STATUS_CLUB_STATUS_NONE              CLUB_STATUS = 0
	CLUB_STATUS_CLUB_STATUS_NORMAL            CLUB_STATUS = 1
	CLUB_STATUS_CLUB_STATUS_BAN               CLUB_STATUS = 2
	CLUB_STATUS_CLUB_STATUS_WAIT_FOR_DISSOLVE CLUB_STATUS = 100
)

var CLUB_STATUS_name = map[int32]string{
	0:   "CLUB_STATUS_NONE",
	1:   "CLUB_STATUS_NORMAL",
	2:   "CLUB_STATUS_BAN",
	100: "CLUB_STATUS_WAIT_FOR_DISSOLVE",
}
var CLUB_STATUS_value = map[string]int32{
	"CLUB_STATUS_NONE":              0,
	"CLUB_STATUS_NORMAL":            1,
	"CLUB_STATUS_BAN":               2,
	"CLUB_STATUS_WAIT_FOR_DISSOLVE": 100,
}

func (x CLUB_STATUS) Enum() *CLUB_STATUS {
	p := new(CLUB_STATUS)
	*p = x
	return p
}
func (x CLUB_STATUS) String() string {
	return proto.EnumName(CLUB_STATUS_name, int32(x))
}
func (x *CLUB_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CLUB_STATUS_value, data, "CLUB_STATUS")
	if err != nil {
		return err
	}
	*x = CLUB_STATUS(value)
	return nil
}
func (CLUB_STATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type PLAYER_CLUB_OPERATOR int32

const (
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_NONE            PLAYER_CLUB_OPERATOR = 0
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_JOIN            PLAYER_CLUB_OPERATOR = 1
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_LEAVE           PLAYER_CLUB_OPERATOR = 2
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_ALTER_NAME      PLAYER_CLUB_OPERATOR = 3
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_ALTER_LOGO      PLAYER_CLUB_OPERATOR = 4
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_APPLY_DISSOLVE  PLAYER_CLUB_OPERATOR = 5
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_BAN             PLAYER_CLUB_OPERATOR = 6
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_CANCEL_BAN      PLAYER_CLUB_OPERATOR = 7
	PLAYER_CLUB_OPERATOR_PLAYER_CLUB_OPERATOR_REJECT_DISSOLVE PLAYER_CLUB_OPERATOR = 8
)

var PLAYER_CLUB_OPERATOR_name = map[int32]string{
	0: "PLAYER_CLUB_OPERATOR_NONE",
	1: "PLAYER_CLUB_OPERATOR_JOIN",
	2: "PLAYER_CLUB_OPERATOR_LEAVE",
	3: "PLAYER_CLUB_OPERATOR_ALTER_NAME",
	4: "PLAYER_CLUB_OPERATOR_ALTER_LOGO",
	5: "PLAYER_CLUB_OPERATOR_APPLY_DISSOLVE",
	6: "PLAYER_CLUB_OPERATOR_BAN",
	7: "PLAYER_CLUB_OPERATOR_CANCEL_BAN",
	8: "PLAYER_CLUB_OPERATOR_REJECT_DISSOLVE",
}
var PLAYER_CLUB_OPERATOR_value = map[string]int32{
	"PLAYER_CLUB_OPERATOR_NONE":            0,
	"PLAYER_CLUB_OPERATOR_JOIN":            1,
	"PLAYER_CLUB_OPERATOR_LEAVE":           2,
	"PLAYER_CLUB_OPERATOR_ALTER_NAME":      3,
	"PLAYER_CLUB_OPERATOR_ALTER_LOGO":      4,
	"PLAYER_CLUB_OPERATOR_APPLY_DISSOLVE":  5,
	"PLAYER_CLUB_OPERATOR_BAN":             6,
	"PLAYER_CLUB_OPERATOR_CANCEL_BAN":      7,
	"PLAYER_CLUB_OPERATOR_REJECT_DISSOLVE": 8,
}

func (x PLAYER_CLUB_OPERATOR) Enum() *PLAYER_CLUB_OPERATOR {
	p := new(PLAYER_CLUB_OPERATOR)
	*p = x
	return p
}
func (x PLAYER_CLUB_OPERATOR) String() string {
	return proto.EnumName(PLAYER_CLUB_OPERATOR_name, int32(x))
}
func (x *PLAYER_CLUB_OPERATOR) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PLAYER_CLUB_OPERATOR_value, data, "PLAYER_CLUB_OPERATOR")
	if err != nil {
		return err
	}
	*x = PLAYER_CLUB_OPERATOR(value)
	return nil
}
func (PLAYER_CLUB_OPERATOR) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

type Rpc struct {
	Request          []*Request `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Rpc) Reset()                    { *m = Rpc{} }
func (m *Rpc) String() string            { return proto.CompactTextString(m) }
func (*Rpc) ProtoMessage()               {}
func (*Rpc) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Rpc) GetRequest() []*Request {
	if m != nil {
		return m.Request
	}
	return nil
}

type Request struct {
	Method            *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	SerializedRequest []byte  `protobuf:"bytes,2,opt,name=serialized_request,json=serializedRequest" json:"serialized_request,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *Request) GetSerializedRequest() []byte {
	if m != nil {
		return m.SerializedRequest
	}
	return nil
}

type Msg struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Msg) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Msg) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type ThirdPartLogin struct {
	WeiXinBaseInfo   []byte `protobuf:"bytes,1,req,name=WeiXinBaseInfo" json:"WeiXinBaseInfo,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ThirdPartLogin) Reset()                    { *m = ThirdPartLogin{} }
func (m *ThirdPartLogin) String() string            { return proto.CompactTextString(m) }
func (*ThirdPartLogin) ProtoMessage()               {}
func (*ThirdPartLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ThirdPartLogin) GetWeiXinBaseInfo() []byte {
	if m != nil {
		return m.WeiXinBaseInfo
	}
	return nil
}

type SyncError struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncError) Reset()                    { *m = SyncError{} }
func (m *SyncError) String() string            { return proto.CompactTextString(m) }
func (*SyncError) ProtoMessage()               {}
func (*SyncError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SyncError) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type RpcErrorResponse struct {
	Method           *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	Text             *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcErrorResponse) Reset()                    { *m = RpcErrorResponse{} }
func (m *RpcErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*RpcErrorResponse) ProtoMessage()               {}
func (*RpcErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RpcErrorResponse) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RpcErrorResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type Login struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Login) Reset()                    { *m = Login{} }
func (m *Login) String() string            { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()               {}
func (*Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Login) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type LoginRsp struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginRsp) Reset()                    { *m = LoginRsp{} }
func (m *LoginRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()               {}
func (*LoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LoginRsp) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type CSHeartBeatRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSHeartBeatRqst) Reset()                    { *m = CSHeartBeatRqst{} }
func (m *CSHeartBeatRqst) String() string            { return proto.CompactTextString(m) }
func (*CSHeartBeatRqst) ProtoMessage()               {}
func (*CSHeartBeatRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CSHeartBeatRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSHeartBeatRsp struct {
	ServerTime       *uint64 `protobuf:"varint,1,req,name=ServerTime" json:"ServerTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSHeartBeatRsp) Reset()                    { *m = CSHeartBeatRsp{} }
func (m *CSHeartBeatRsp) String() string            { return proto.CompactTextString(m) }
func (*CSHeartBeatRsp) ProtoMessage()               {}
func (*CSHeartBeatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CSHeartBeatRsp) GetServerTime() uint64 {
	if m != nil && m.ServerTime != nil {
		return *m.ServerTime
	}
	return 0
}

// common err msg
type CSCommonErrMsg struct {
	RqstCmdID        *uint32 `protobuf:"varint,1,req,name=RqstCmdID" json:"RqstCmdID,omitempty"`
	ErrorCode        *uint32 `protobuf:"varint,2,req,name=ErrorCode" json:"ErrorCode,omitempty"`
	Opt1             *int32  `protobuf:"varint,3,opt,name=opt1" json:"opt1,omitempty"`
	Opt2             *int32  `protobuf:"varint,4,opt,name=opt2" json:"opt2,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSCommonErrMsg) Reset()                    { *m = CSCommonErrMsg{} }
func (m *CSCommonErrMsg) String() string            { return proto.CompactTextString(m) }
func (*CSCommonErrMsg) ProtoMessage()               {}
func (*CSCommonErrMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CSCommonErrMsg) GetRqstCmdID() uint32 {
	if m != nil && m.RqstCmdID != nil {
		return *m.RqstCmdID
	}
	return 0
}

func (m *CSCommonErrMsg) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *CSCommonErrMsg) GetOpt1() int32 {
	if m != nil && m.Opt1 != nil {
		return *m.Opt1
	}
	return 0
}

func (m *CSCommonErrMsg) GetOpt2() int32 {
	if m != nil && m.Opt2 != nil {
		return *m.Opt2
	}
	return 0
}

// 登陆
type CSUserLoginRqst struct {
	Identity         *USER_IDENTITY_TYPE `protobuf:"varint,1,req,name=Identity,enum=rpc.USER_IDENTITY_TYPE" json:"Identity,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserLoginRqst) Reset()                    { *m = CSUserLoginRqst{} }
func (m *CSUserLoginRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserLoginRqst) ProtoMessage()               {}
func (*CSUserLoginRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CSUserLoginRqst) GetIdentity() USER_IDENTITY_TYPE {
	if m != nil && m.Identity != nil {
		return *m.Identity
	}
	return USER_IDENTITY_TYPE_IDENTITY_TYPE_NORMAL
}

type PlayerBaseInfo struct {
	Uid              *uint64             `protobuf:"varint,1,req,name=Uid" json:"Uid,omitempty"`
	NickName         *string             `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	Sex              *int32              `protobuf:"varint,3,req,name=Sex" json:"Sex,omitempty"`
	UserGold         *int64              `protobuf:"varint,4,req,name=UserGold" json:"UserGold,omitempty"`
	CustomRoomPoint  *int64              `protobuf:"varint,5,req,name=CustomRoomPoint" json:"CustomRoomPoint,omitempty"`
	HeadImage        *string             `protobuf:"bytes,6,req,name=HeadImage" json:"HeadImage,omitempty"`
	Identity         *USER_IDENTITY_TYPE `protobuf:"varint,7,req,name=Identity,enum=rpc.USER_IDENTITY_TYPE" json:"Identity,omitempty"`
	UserDiamond      *int64              `protobuf:"varint,8,req,name=UserDiamond" json:"UserDiamond,omitempty"`
	ConnectIp        *uint32             `protobuf:"varint,9,req,name=ConnectIp" json:"ConnectIp,omitempty"`
	Longitude        *uint32             `protobuf:"varint,10,req,name=Longitude" json:"Longitude,omitempty"`
	Latitude         *uint32             `protobuf:"varint,11,req,name=Latitude" json:"Latitude,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PlayerBaseInfo) Reset()                    { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()               {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PlayerBaseInfo) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerBaseInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *PlayerBaseInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *PlayerBaseInfo) GetUserGold() int64 {
	if m != nil && m.UserGold != nil {
		return *m.UserGold
	}
	return 0
}

func (m *PlayerBaseInfo) GetCustomRoomPoint() int64 {
	if m != nil && m.CustomRoomPoint != nil {
		return *m.CustomRoomPoint
	}
	return 0
}

func (m *PlayerBaseInfo) GetHeadImage() string {
	if m != nil && m.HeadImage != nil {
		return *m.HeadImage
	}
	return ""
}

func (m *PlayerBaseInfo) GetIdentity() USER_IDENTITY_TYPE {
	if m != nil && m.Identity != nil {
		return *m.Identity
	}
	return USER_IDENTITY_TYPE_IDENTITY_TYPE_NORMAL
}

func (m *PlayerBaseInfo) GetUserDiamond() int64 {
	if m != nil && m.UserDiamond != nil {
		return *m.UserDiamond
	}
	return 0
}

func (m *PlayerBaseInfo) GetConnectIp() uint32 {
	if m != nil && m.ConnectIp != nil {
		return *m.ConnectIp
	}
	return 0
}

func (m *PlayerBaseInfo) GetLongitude() uint32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *PlayerBaseInfo) GetLatitude() uint32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

type PlayerInfo struct {
	BaseInfo         *PlayerBaseInfo `protobuf:"bytes,1,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PlayerInfo) Reset()                    { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()               {}
func (*PlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *PlayerInfo) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

// 登陆响应
type CSUserLoginRsp struct {
	IsNewUser        *int32      `protobuf:"varint,1,req,name=IsNewUser" json:"IsNewUser,omitempty"`
	Info             *PlayerInfo `protobuf:"bytes,2,req,name=Info" json:"Info,omitempty"`
	CurRoomType      *ROOM_TYPE  `protobuf:"varint,3,req,name=CurRoomType,enum=rpc.ROOM_TYPE" json:"CurRoomType,omitempty"`
	CurRoomId        *uint32     `protobuf:"varint,4,req,name=CurRoomId" json:"CurRoomId,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSUserLoginRsp) Reset()                    { *m = CSUserLoginRsp{} }
func (m *CSUserLoginRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserLoginRsp) ProtoMessage()               {}
func (*CSUserLoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CSUserLoginRsp) GetIsNewUser() int32 {
	if m != nil && m.IsNewUser != nil {
		return *m.IsNewUser
	}
	return 0
}

func (m *CSUserLoginRsp) GetInfo() *PlayerInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CSUserLoginRsp) GetCurRoomType() ROOM_TYPE {
	if m != nil && m.CurRoomType != nil {
		return *m.CurRoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserLoginRsp) GetCurRoomId() uint32 {
	if m != nil && m.CurRoomId != nil {
		return *m.CurRoomId
	}
	return 0
}

// 登出
type CSUserLogoutRqst struct {
	UserName         *string `protobuf:"bytes,1,req,name=UserName" json:"UserName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserLogoutRqst) Reset()                    { *m = CSUserLogoutRqst{} }
func (m *CSUserLogoutRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserLogoutRqst) ProtoMessage()               {}
func (*CSUserLogoutRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CSUserLogoutRqst) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

// 登出响应
type CSUserLogoutRsp struct {
	UserName         *string `protobuf:"bytes,1,req,name=UserName" json:"UserName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserLogoutRsp) Reset()                    { *m = CSUserLogoutRsp{} }
func (m *CSUserLogoutRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserLogoutRsp) ProtoMessage()               {}
func (*CSUserLogoutRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CSUserLogoutRsp) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

// 设置昵称
type CSUserSetNickRqst struct {
	NewNickName      *string `protobuf:"bytes,1,req,name=NewNickName" json:"NewNickName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserSetNickRqst) Reset()                    { *m = CSUserSetNickRqst{} }
func (m *CSUserSetNickRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserSetNickRqst) ProtoMessage()               {}
func (*CSUserSetNickRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CSUserSetNickRqst) GetNewNickName() string {
	if m != nil && m.NewNickName != nil {
		return *m.NewNickName
	}
	return ""
}

type CSUserSetNickRsp struct {
	OldNickName      *string `protobuf:"bytes,1,req,name=OldNickName" json:"OldNickName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserSetNickRsp) Reset()                    { *m = CSUserSetNickRsp{} }
func (m *CSUserSetNickRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserSetNickRsp) ProtoMessage()               {}
func (*CSUserSetNickRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CSUserSetNickRsp) GetOldNickName() string {
	if m != nil && m.OldNickName != nil {
		return *m.OldNickName
	}
	return ""
}

// 设置性别
type CSUserSetSexRqst struct {
	NewSex           *int32 `protobuf:"varint,1,req,name=NewSex" json:"NewSex,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserSetSexRqst) Reset()                    { *m = CSUserSetSexRqst{} }
func (m *CSUserSetSexRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserSetSexRqst) ProtoMessage()               {}
func (*CSUserSetSexRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CSUserSetSexRqst) GetNewSex() int32 {
	if m != nil && m.NewSex != nil {
		return *m.NewSex
	}
	return 0
}

type CSUserSetSexRsp struct {
	OldSex           *int32 `protobuf:"varint,1,req,name=OldSex" json:"OldSex,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserSetSexRsp) Reset()                    { *m = CSUserSetSexRsp{} }
func (m *CSUserSetSexRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserSetSexRsp) ProtoMessage()               {}
func (*CSUserSetSexRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CSUserSetSexRsp) GetOldSex() int32 {
	if m != nil && m.OldSex != nil {
		return *m.OldSex
	}
	return 0
}

// 添加金豆
type CSUserAddGoldRqst struct {
	GoldValue        *uint32 `protobuf:"varint,1,req,name=GoldValue" json:"GoldValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserAddGoldRqst) Reset()                    { *m = CSUserAddGoldRqst{} }
func (m *CSUserAddGoldRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserAddGoldRqst) ProtoMessage()               {}
func (*CSUserAddGoldRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CSUserAddGoldRqst) GetGoldValue() uint32 {
	if m != nil && m.GoldValue != nil {
		return *m.GoldValue
	}
	return 0
}

type CSUserAddGoldRsp struct {
	UserGoldValue    *uint64 `protobuf:"varint,1,req,name=UserGoldValue" json:"UserGoldValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserAddGoldRsp) Reset()                    { *m = CSUserAddGoldRsp{} }
func (m *CSUserAddGoldRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserAddGoldRsp) ProtoMessage()               {}
func (*CSUserAddGoldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CSUserAddGoldRsp) GetUserGoldValue() uint64 {
	if m != nil && m.UserGoldValue != nil {
		return *m.UserGoldValue
	}
	return 0
}

// 进入房间
type CSUserEnterRoomRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	Longitude        *uint32    `protobuf:"varint,3,req,name=Longitude" json:"Longitude,omitempty"`
	Latitude         *uint32    `protobuf:"varint,4,req,name=Latitude" json:"Latitude,omitempty"`
	ClubId           *uint64    `protobuf:"varint,5,req,name=ClubId" json:"ClubId,omitempty"`
	RoomPassword     *string    `protobuf:"bytes,6,req,name=RoomPassword" json:"RoomPassword,omitempty"`
	Uid              *uint64    `protobuf:"varint,7,req,name=Uid" json:"Uid,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserEnterRoomRqst) Reset()                    { *m = CSUserEnterRoomRqst{} }
func (m *CSUserEnterRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserEnterRoomRqst) ProtoMessage()               {}
func (*CSUserEnterRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CSUserEnterRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserEnterRoomRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserEnterRoomRqst) GetLongitude() uint32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *CSUserEnterRoomRqst) GetLatitude() uint32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *CSUserEnterRoomRqst) GetClubId() uint64 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

func (m *CSUserEnterRoomRqst) GetRoomPassword() string {
	if m != nil && m.RoomPassword != nil {
		return *m.RoomPassword
	}
	return ""
}

func (m *CSUserEnterRoomRqst) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type CSUserEnterRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	EnterRoomSuccess *bool      `protobuf:"varint,3,req,name=EnterRoomSuccess" json:"EnterRoomSuccess,omitempty"`
	MinCurrencyValue *uint64    `protobuf:"varint,4,req,name=MinCurrencyValue" json:"MinCurrencyValue,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserEnterRoomRsp) Reset()                    { *m = CSUserEnterRoomRsp{} }
func (m *CSUserEnterRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserEnterRoomRsp) ProtoMessage()               {}
func (*CSUserEnterRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CSUserEnterRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserEnterRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserEnterRoomRsp) GetEnterRoomSuccess() bool {
	if m != nil && m.EnterRoomSuccess != nil {
		return *m.EnterRoomSuccess
	}
	return false
}

func (m *CSUserEnterRoomRsp) GetMinCurrencyValue() uint64 {
	if m != nil && m.MinCurrencyValue != nil {
		return *m.MinCurrencyValue
	}
	return 0
}

// 离开房间
type CSUserLeaveRoomRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	Uid              *uint64    `protobuf:"varint,3,req,name=Uid" json:"Uid,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserLeaveRoomRqst) Reset()                    { *m = CSUserLeaveRoomRqst{} }
func (m *CSUserLeaveRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserLeaveRoomRqst) ProtoMessage()               {}
func (*CSUserLeaveRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CSUserLeaveRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserLeaveRoomRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserLeaveRoomRqst) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type CSUserLeaveRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserLeaveRoomRsp) Reset()                    { *m = CSUserLeaveRoomRsp{} }
func (m *CSUserLeaveRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserLeaveRoomRsp) ProtoMessage()               {}
func (*CSUserLeaveRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CSUserLeaveRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserLeaveRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 玩家挑战赛信息
type CSUserChallengeModeInfo struct {
	TreasureCard      *uint32 `protobuf:"varint,1,req,name=TreasureCard" json:"TreasureCard,omitempty"`
	TreasureCardCount *uint32 `protobuf:"varint,2,req,name=TreasureCardCount" json:"TreasureCardCount,omitempty"`
	Points            *uint32 `protobuf:"varint,3,req,name=Points" json:"Points,omitempty"`
	ChallengeCount    *uint32 `protobuf:"varint,4,req,name=ChallengeCount" json:"ChallengeCount,omitempty"`
	ChallengeTimes    *uint32 `protobuf:"varint,5,req,name=ChallengeTimes" json:"ChallengeTimes,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSUserChallengeModeInfo) Reset()                    { *m = CSUserChallengeModeInfo{} }
func (m *CSUserChallengeModeInfo) String() string            { return proto.CompactTextString(m) }
func (*CSUserChallengeModeInfo) ProtoMessage()               {}
func (*CSUserChallengeModeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CSUserChallengeModeInfo) GetTreasureCard() uint32 {
	if m != nil && m.TreasureCard != nil {
		return *m.TreasureCard
	}
	return 0
}

func (m *CSUserChallengeModeInfo) GetTreasureCardCount() uint32 {
	if m != nil && m.TreasureCardCount != nil {
		return *m.TreasureCardCount
	}
	return 0
}

func (m *CSUserChallengeModeInfo) GetPoints() uint32 {
	if m != nil && m.Points != nil {
		return *m.Points
	}
	return 0
}

func (m *CSUserChallengeModeInfo) GetChallengeCount() uint32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *CSUserChallengeModeInfo) GetChallengeTimes() uint32 {
	if m != nil && m.ChallengeTimes != nil {
		return *m.ChallengeTimes
	}
	return 0
}

// CS_CMD_USER_CHALLENGE_MODE_INFO_NOTIFY = 60;//挑战赛信息通知
type CSUserChallengeModeInfoNotify struct {
	ChallengeModeInfo *CSUserChallengeModeInfo `protobuf:"bytes,1,req,name=ChallengeModeInfo" json:"ChallengeModeInfo,omitempty"`
	XXX_unrecognized  []byte                   `json:"-"`
}

func (m *CSUserChallengeModeInfoNotify) Reset()                    { *m = CSUserChallengeModeInfoNotify{} }
func (m *CSUserChallengeModeInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserChallengeModeInfoNotify) ProtoMessage()               {}
func (*CSUserChallengeModeInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CSUserChallengeModeInfoNotify) GetChallengeModeInfo() *CSUserChallengeModeInfo {
	if m != nil {
		return m.ChallengeModeInfo
	}
	return nil
}

type SeatInfo struct {
	SeatId                  *uint32         `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	UserState               *MjUserState    `protobuf:"varint,2,req,name=UserState,enum=rpc.MjUserState" json:"UserState,omitempty"`
	OffLineFlag             *bool           `protobuf:"varint,3,req,name=OffLineFlag" json:"OffLineFlag,omitempty"`
	BaseInfo                *PlayerBaseInfo `protobuf:"bytes,4,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	StartMatchCurrencyValue *int64          `protobuf:"varint,5,opt,name=StartMatchCurrencyValue" json:"StartMatchCurrencyValue,omitempty"`
	XXX_unrecognized        []byte          `json:"-"`
}

func (m *SeatInfo) Reset()                    { *m = SeatInfo{} }
func (m *SeatInfo) String() string            { return proto.CompactTextString(m) }
func (*SeatInfo) ProtoMessage()               {}
func (*SeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *SeatInfo) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *SeatInfo) GetUserState() MjUserState {
	if m != nil && m.UserState != nil {
		return *m.UserState
	}
	return MjUserState_Mj_User_State_Init
}

func (m *SeatInfo) GetOffLineFlag() bool {
	if m != nil && m.OffLineFlag != nil {
		return *m.OffLineFlag
	}
	return false
}

func (m *SeatInfo) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SeatInfo) GetStartMatchCurrencyValue() int64 {
	if m != nil && m.StartMatchCurrencyValue != nil {
		return *m.StartMatchCurrencyValue
	}
	return 0
}

type ViewSeatInfo struct {
	BaseInfo         *PlayerBaseInfo `protobuf:"bytes,1,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ViewSeatInfo) Reset()                    { *m = ViewSeatInfo{} }
func (m *ViewSeatInfo) String() string            { return proto.CompactTextString(m) }
func (*ViewSeatInfo) ProtoMessage()               {}
func (*ViewSeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ViewSeatInfo) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

type TableInfo struct {
	BankerSeatId         *uint32         `protobuf:"varint,1,req,name=BankerSeatId" json:"BankerSeatId,omitempty"`
	FirstDice            *uint32         `protobuf:"varint,2,req,name=FirstDice" json:"FirstDice,omitempty"`
	SecondDice           *uint32         `protobuf:"varint,3,req,name=SecondDice" json:"SecondDice,omitempty"`
	CardNum              *uint32         `protobuf:"varint,4,req,name=CardNum" json:"CardNum,omitempty"`
	TableState           *TableState     `protobuf:"varint,5,req,name=tableState,enum=rpc.TableState" json:"tableState,omitempty"`
	SeatInfos            []*SeatInfo     `protobuf:"bytes,6,rep,name=SeatInfos" json:"SeatInfos,omitempty"`
	ViewSeatInfos        []*ViewSeatInfo `protobuf:"bytes,7,rep,name=ViewSeatInfos" json:"ViewSeatInfos,omitempty"`
	WaitRenewRoomTimeOut *uint32         `protobuf:"varint,8,req,name=WaitRenewRoomTimeOut" json:"WaitRenewRoomTimeOut,omitempty"`
	SettlementId         *uint64         `protobuf:"varint,9,req,name=SettlementId" json:"SettlementId,omitempty"`
	FinishedMatchNum     *uint64         `protobuf:"varint,10,req,name=FinishedMatchNum" json:"FinishedMatchNum,omitempty"`
	TotalMatchNum        *uint32         `protobuf:"varint,11,req,name=TotalMatchNum" json:"TotalMatchNum,omitempty"`
	WaitRechargeTimeOut  *uint32         `protobuf:"varint,12,req,name=WaitRechargeTimeOut" json:"WaitRechargeTimeOut,omitempty"`
	XXX_unrecognized     []byte          `json:"-"`
}

func (m *TableInfo) Reset()                    { *m = TableInfo{} }
func (m *TableInfo) String() string            { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()               {}
func (*TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *TableInfo) GetBankerSeatId() uint32 {
	if m != nil && m.BankerSeatId != nil {
		return *m.BankerSeatId
	}
	return 0
}

func (m *TableInfo) GetFirstDice() uint32 {
	if m != nil && m.FirstDice != nil {
		return *m.FirstDice
	}
	return 0
}

func (m *TableInfo) GetSecondDice() uint32 {
	if m != nil && m.SecondDice != nil {
		return *m.SecondDice
	}
	return 0
}

func (m *TableInfo) GetCardNum() uint32 {
	if m != nil && m.CardNum != nil {
		return *m.CardNum
	}
	return 0
}

func (m *TableInfo) GetTableState() TableState {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return TableState_Table_State_Init
}

func (m *TableInfo) GetSeatInfos() []*SeatInfo {
	if m != nil {
		return m.SeatInfos
	}
	return nil
}

func (m *TableInfo) GetViewSeatInfos() []*ViewSeatInfo {
	if m != nil {
		return m.ViewSeatInfos
	}
	return nil
}

func (m *TableInfo) GetWaitRenewRoomTimeOut() uint32 {
	if m != nil && m.WaitRenewRoomTimeOut != nil {
		return *m.WaitRenewRoomTimeOut
	}
	return 0
}

func (m *TableInfo) GetSettlementId() uint64 {
	if m != nil && m.SettlementId != nil {
		return *m.SettlementId
	}
	return 0
}

func (m *TableInfo) GetFinishedMatchNum() uint64 {
	if m != nil && m.FinishedMatchNum != nil {
		return *m.FinishedMatchNum
	}
	return 0
}

func (m *TableInfo) GetTotalMatchNum() uint32 {
	if m != nil && m.TotalMatchNum != nil {
		return *m.TotalMatchNum
	}
	return 0
}

func (m *TableInfo) GetWaitRechargeTimeOut() uint32 {
	if m != nil && m.WaitRechargeTimeOut != nil {
		return *m.WaitRechargeTimeOut
	}
	return 0
}

// 开始游戏
type CSUserStartGameRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserStartGameRqst) Reset()                    { *m = CSUserStartGameRqst{} }
func (m *CSUserStartGameRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserStartGameRqst) ProtoMessage()               {}
func (*CSUserStartGameRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *CSUserStartGameRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserStartGameRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

type CSUserStartGameRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserStartGameRsp) Reset()                    { *m = CSUserStartGameRsp{} }
func (m *CSUserStartGameRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserStartGameRsp) ProtoMessage()               {}
func (*CSUserStartGameRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *CSUserStartGameRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserStartGameRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 通知桌子信息改变
type CSUserTableInfoChangeNotify struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	Info             *TableInfo `protobuf:"bytes,3,req,name=Info" json:"Info,omitempty"`
	RoomOwnerUid     *uint64    `protobuf:"varint,4,req,name=RoomOwnerUid" json:"RoomOwnerUid,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserTableInfoChangeNotify) Reset()                    { *m = CSUserTableInfoChangeNotify{} }
func (m *CSUserTableInfoChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableInfoChangeNotify) ProtoMessage()               {}
func (*CSUserTableInfoChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CSUserTableInfoChangeNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserTableInfoChangeNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserTableInfoChangeNotify) GetInfo() *TableInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CSUserTableInfoChangeNotify) GetRoomOwnerUid() uint64 {
	if m != nil && m.RoomOwnerUid != nil {
		return *m.RoomOwnerUid
	}
	return 0
}

// 游戏准备
type CSUserReadyGameRqst struct {
	ReadySeatId      *uint32 `protobuf:"varint,1,req,name=ReadySeatId" json:"ReadySeatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserReadyGameRqst) Reset()                    { *m = CSUserReadyGameRqst{} }
func (m *CSUserReadyGameRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserReadyGameRqst) ProtoMessage()               {}
func (*CSUserReadyGameRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *CSUserReadyGameRqst) GetReadySeatId() uint32 {
	if m != nil && m.ReadySeatId != nil {
		return *m.ReadySeatId
	}
	return 0
}

// CS_CMD_USER_TABLE_RECHARGE_GIVE_UP = 94; //玩家比赛中放弃充值机会
type CSUserTableRechargeGiveUpRqst struct {
	GiveUpSeatId     *uint32 `protobuf:"varint,1,req,name=GiveUpSeatId" json:"GiveUpSeatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserTableRechargeGiveUpRqst) Reset()                    { *m = CSUserTableRechargeGiveUpRqst{} }
func (m *CSUserTableRechargeGiveUpRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableRechargeGiveUpRqst) ProtoMessage()               {}
func (*CSUserTableRechargeGiveUpRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CSUserTableRechargeGiveUpRqst) GetGiveUpSeatId() uint32 {
	if m != nil && m.GiveUpSeatId != nil {
		return *m.GiveUpSeatId
	}
	return 0
}

// 通知游戏准备
type CSUserReadyGameNotify struct {
	ReadySeatId      *uint32 `protobuf:"varint,1,req,name=ReadySeatId" json:"ReadySeatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserReadyGameNotify) Reset()                    { *m = CSUserReadyGameNotify{} }
func (m *CSUserReadyGameNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserReadyGameNotify) ProtoMessage()               {}
func (*CSUserReadyGameNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *CSUserReadyGameNotify) GetReadySeatId() uint32 {
	if m != nil && m.ReadySeatId != nil {
		return *m.ReadySeatId
	}
	return 0
}

// 发牌
type CSUserMjAssignNotify struct {
	SeatId           *uint32  `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	BankerSeatId     *uint32  `protobuf:"varint,2,req,name=BankerSeatId" json:"BankerSeatId,omitempty"`
	FirstDice        *uint32  `protobuf:"varint,3,req,name=FirstDice" json:"FirstDice,omitempty"`
	SecondDice       *uint32  `protobuf:"varint,4,req,name=SecondDice" json:"SecondDice,omitempty"`
	Mjs              []uint32 `protobuf:"varint,5,rep,name=Mjs" json:"Mjs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSUserMjAssignNotify) Reset()                    { *m = CSUserMjAssignNotify{} }
func (m *CSUserMjAssignNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjAssignNotify) ProtoMessage()               {}
func (*CSUserMjAssignNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *CSUserMjAssignNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetBankerSeatId() uint32 {
	if m != nil && m.BankerSeatId != nil {
		return *m.BankerSeatId
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetFirstDice() uint32 {
	if m != nil && m.FirstDice != nil {
		return *m.FirstDice
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetSecondDice() uint32 {
	if m != nil && m.SecondDice != nil {
		return *m.SecondDice
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetMjs() []uint32 {
	if m != nil {
		return m.Mjs
	}
	return nil
}

// 玩家操作
type CSUserMjOperateRqst struct {
	OperateSeatId    *uint32          `protobuf:"varint,1,req,name=OperateSeatId" json:"OperateSeatId,omitempty"`
	OperateMask      *MJ_OPERATE_MASK `protobuf:"varint,2,req,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	TagMj            *uint32          `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	TagMj1           *uint32          `protobuf:"varint,4,opt,name=TagMj1" json:"TagMj1,omitempty"`
	TagMj2           *uint32          `protobuf:"varint,5,opt,name=TagMj2" json:"TagMj2,omitempty"`
	Uid              *uint64          `protobuf:"varint,6,req,name=Uid" json:"Uid,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CSUserMjOperateRqst) Reset()                    { *m = CSUserMjOperateRqst{} }
func (m *CSUserMjOperateRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjOperateRqst) ProtoMessage()               {}
func (*CSUserMjOperateRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CSUserMjOperateRqst) GetOperateSeatId() uint32 {
	if m != nil && m.OperateSeatId != nil {
		return *m.OperateSeatId
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CSUserMjOperateRqst) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetTagMj1() uint32 {
	if m != nil && m.TagMj1 != nil {
		return *m.TagMj1
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetTagMj2() uint32 {
	if m != nil && m.TagMj2 != nil {
		return *m.TagMj2
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type MjSettlementDetail struct {
	SeatId           *uint32 `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	Value            *int32  `protobuf:"varint,2,req,name=Value" json:"Value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MjSettlementDetail) Reset()                    { *m = MjSettlementDetail{} }
func (m *MjSettlementDetail) String() string            { return proto.CompactTextString(m) }
func (*MjSettlementDetail) ProtoMessage()               {}
func (*MjSettlementDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *MjSettlementDetail) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *MjSettlementDetail) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// 结算信息
type MjSettlementInfo struct {
	Type             *MJ_SETTLEMENT_TYPE   `protobuf:"varint,1,req,name=Type,enum=rpc.MJ_SETTLEMENT_TYPE" json:"Type,omitempty"`
	Detail           []*MjSettlementDetail `protobuf:"bytes,2,rep,name=Detail" json:"Detail,omitempty"`
	HuType           *uint32               `protobuf:"varint,3,req,name=HuType" json:"HuType,omitempty"`
	Multiple         *uint32               `protobuf:"varint,4,req,name=Multiple" json:"Multiple,omitempty"`
	GenCount         *int32                `protobuf:"varint,5,req,name=GenCount" json:"GenCount,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *MjSettlementInfo) Reset()                    { *m = MjSettlementInfo{} }
func (m *MjSettlementInfo) String() string            { return proto.CompactTextString(m) }
func (*MjSettlementInfo) ProtoMessage()               {}
func (*MjSettlementInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *MjSettlementInfo) GetType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

func (m *MjSettlementInfo) GetDetail() []*MjSettlementDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *MjSettlementInfo) GetHuType() uint32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *MjSettlementInfo) GetMultiple() uint32 {
	if m != nil && m.Multiple != nil {
		return *m.Multiple
	}
	return 0
}

func (m *MjSettlementInfo) GetGenCount() int32 {
	if m != nil && m.GenCount != nil {
		return *m.GenCount
	}
	return 0
}

// 玩家操作通知
type CSUserMjOperateNotify struct {
	OperateMask      *MJ_OPERATE_MASK    `protobuf:"varint,1,req,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	OperateSeatId    *uint32             `protobuf:"varint,2,req,name=OperateSeatId" json:"OperateSeatId,omitempty"`
	TagMj            *uint32             `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	SettlementInfo   []*MjSettlementInfo `protobuf:"bytes,4,rep,name=SettlementInfo" json:"SettlementInfo,omitempty"`
	TagMj1           *uint32             `protobuf:"varint,5,opt,name=TagMj1" json:"TagMj1,omitempty"`
	TagMj2           *uint32             `protobuf:"varint,6,opt,name=TagMj2" json:"TagMj2,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserMjOperateNotify) Reset()                    { *m = CSUserMjOperateNotify{} }
func (m *CSUserMjOperateNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjOperateNotify) ProtoMessage()               {}
func (*CSUserMjOperateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CSUserMjOperateNotify) GetOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CSUserMjOperateNotify) GetOperateSeatId() uint32 {
	if m != nil && m.OperateSeatId != nil {
		return *m.OperateSeatId
	}
	return 0
}

func (m *CSUserMjOperateNotify) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSUserMjOperateNotify) GetSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.SettlementInfo
	}
	return nil
}

func (m *CSUserMjOperateNotify) GetTagMj1() uint32 {
	if m != nil && m.TagMj1 != nil {
		return *m.TagMj1
	}
	return 0
}

func (m *CSUserMjOperateNotify) GetTagMj2() uint32 {
	if m != nil && m.TagMj2 != nil {
		return *m.TagMj2
	}
	return 0
}

// 通知玩家等待其他人操作
type CSUserMjWaitForOperateNotify struct {
	OperateMask      []MJ_OPERATE_MASK `protobuf:"varint,1,rep,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	RelationSeatId   *uint32           `protobuf:"varint,2,req,name=RelationSeatId" json:"RelationSeatId,omitempty"`
	OperateTimeOut   *uint32           `protobuf:"varint,3,req,name=OperateTimeOut" json:"OperateTimeOut,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSUserMjWaitForOperateNotify) Reset()                    { *m = CSUserMjWaitForOperateNotify{} }
func (m *CSUserMjWaitForOperateNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjWaitForOperateNotify) ProtoMessage()               {}
func (*CSUserMjWaitForOperateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CSUserMjWaitForOperateNotify) GetOperateMask() []MJ_OPERATE_MASK {
	if m != nil {
		return m.OperateMask
	}
	return nil
}

func (m *CSUserMjWaitForOperateNotify) GetRelationSeatId() uint32 {
	if m != nil && m.RelationSeatId != nil {
		return *m.RelationSeatId
	}
	return 0
}

func (m *CSUserMjWaitForOperateNotify) GetOperateTimeOut() uint32 {
	if m != nil && m.OperateTimeOut != nil {
		return *m.OperateTimeOut
	}
	return 0
}

// 摸牌
type CSUserMjGetNotify struct {
	OperateMask      []MJ_OPERATE_MASK `protobuf:"varint,1,rep,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	RelationSeatId   *uint32           `protobuf:"varint,2,req,name=RelationSeatId" json:"RelationSeatId,omitempty"`
	TagMj            *uint32           `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	OperateTimeOut   *uint32           `protobuf:"varint,4,req,name=OperateTimeOut" json:"OperateTimeOut,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSUserMjGetNotify) Reset()                    { *m = CSUserMjGetNotify{} }
func (m *CSUserMjGetNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjGetNotify) ProtoMessage()               {}
func (*CSUserMjGetNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CSUserMjGetNotify) GetOperateMask() []MJ_OPERATE_MASK {
	if m != nil {
		return m.OperateMask
	}
	return nil
}

func (m *CSUserMjGetNotify) GetRelationSeatId() uint32 {
	if m != nil && m.RelationSeatId != nil {
		return *m.RelationSeatId
	}
	return 0
}

func (m *CSUserMjGetNotify) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSUserMjGetNotify) GetOperateTimeOut() uint32 {
	if m != nil && m.OperateTimeOut != nil {
		return *m.OperateTimeOut
	}
	return 0
}

// 结束时，推送每个人的手牌
type CSUserMjLastHandNotify struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	SeatId           *uint32    `protobuf:"varint,3,req,name=SeatId" json:"SeatId,omitempty"`
	Mjs              []uint32   `protobuf:"varint,4,rep,name=Mjs" json:"Mjs,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserMjLastHandNotify) Reset()                    { *m = CSUserMjLastHandNotify{} }
func (m *CSUserMjLastHandNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjLastHandNotify) ProtoMessage()               {}
func (*CSUserMjLastHandNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *CSUserMjLastHandNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserMjLastHandNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserMjLastHandNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserMjLastHandNotify) GetMjs() []uint32 {
	if m != nil {
		return m.Mjs
	}
	return nil
}

// 通知座子解散
type CSUserTableDIsmissNotify struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	SeatId           *uint32    `protobuf:"varint,3,req,name=SeatId" json:"SeatId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserTableDIsmissNotify) Reset()                    { *m = CSUserTableDIsmissNotify{} }
func (m *CSUserTableDIsmissNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableDIsmissNotify) ProtoMessage()               {}
func (*CSUserTableDIsmissNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *CSUserTableDIsmissNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserTableDIsmissNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserTableDIsmissNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

// 玩家基础信息改变通知
type CSUserBaseInfoChangeNotify struct {
	BaseInfo         *PlayerBaseInfo `protobuf:"bytes,1,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserBaseInfoChangeNotify) Reset()                    { *m = CSUserBaseInfoChangeNotify{} }
func (m *CSUserBaseInfoChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserBaseInfoChangeNotify) ProtoMessage()               {}
func (*CSUserBaseInfoChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *CSUserBaseInfoChangeNotify) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

type CSMjOperateRecord struct {
	SeatId           *uint32          `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	OperateMask      *MJ_OPERATE_MASK `protobuf:"varint,2,req,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	TagMj            *uint32          `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	TagMj1           *uint32          `protobuf:"varint,4,opt,name=TagMj1" json:"TagMj1,omitempty"`
	TagMj2           *uint32          `protobuf:"varint,5,opt,name=TagMj2" json:"TagMj2,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CSMjOperateRecord) Reset()                    { *m = CSMjOperateRecord{} }
func (m *CSMjOperateRecord) String() string            { return proto.CompactTextString(m) }
func (*CSMjOperateRecord) ProtoMessage()               {}
func (*CSMjOperateRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CSMjOperateRecord) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSMjOperateRecord) GetOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CSMjOperateRecord) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSMjOperateRecord) GetTagMj1() uint32 {
	if m != nil && m.TagMj1 != nil {
		return *m.TagMj1
	}
	return 0
}

func (m *CSMjOperateRecord) GetTagMj2() uint32 {
	if m != nil && m.TagMj2 != nil {
		return *m.TagMj2
	}
	return 0
}

// 桌子麻将信息
type CSUserTableCardInfoNotify struct {
	RoomType          *ROOM_TYPE          `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId            *uint32             `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	SeatId            *uint32             `protobuf:"varint,3,req,name=SeatId" json:"SeatId,omitempty"`
	TagSeatId         *uint32             `protobuf:"varint,4,req,name=TagSeatId" json:"TagSeatId,omitempty"`
	UserState         *MjUserState        `protobuf:"varint,5,req,name=UserState,enum=rpc.MjUserState" json:"UserState,omitempty"`
	RejectSuit        *uint32             `protobuf:"varint,6,req,name=RejectSuit" json:"RejectSuit,omitempty"`
	DealCards         []uint32            `protobuf:"varint,7,rep,name=DealCards" json:"DealCards,omitempty"`
	HandCards         []uint32            `protobuf:"varint,8,rep,name=HandCards" json:"HandCards,omitempty"`
	MingCards         []uint32            `protobuf:"varint,9,rep,name=MingCards" json:"MingCards,omitempty"`
	AnGangCards       []uint32            `protobuf:"varint,10,rep,name=AnGangCards" json:"AnGangCards,omitempty"`
	BuGangCards       []uint32            `protobuf:"varint,11,rep,name=BuGangCards" json:"BuGangCards,omitempty"`
	PengCards         []uint32            `protobuf:"varint,12,rep,name=PengCards" json:"PengCards,omitempty"`
	HuCards           *uint32             `protobuf:"varint,13,req,name=HuCards" json:"HuCards,omitempty"`
	LastOperateRecord *CSMjOperateRecord  `protobuf:"bytes,14,opt,name=LastOperateRecord" json:"LastOperateRecord,omitempty"`
	HuanCards         []uint32            `protobuf:"varint,15,rep,name=HuanCards" json:"HuanCards,omitempty"`
	HuanInCards       []uint32            `protobuf:"varint,16,rep,name=HuanInCards" json:"HuanInCards,omitempty"`
	SettlementType    *MJ_SETTLEMENT_TYPE `protobuf:"varint,17,req,name=SettlementType,enum=rpc.MJ_SETTLEMENT_TYPE" json:"SettlementType,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *CSUserTableCardInfoNotify) Reset()                    { *m = CSUserTableCardInfoNotify{} }
func (m *CSUserTableCardInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableCardInfoNotify) ProtoMessage()               {}
func (*CSUserTableCardInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *CSUserTableCardInfoNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserTableCardInfoNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetTagSeatId() uint32 {
	if m != nil && m.TagSeatId != nil {
		return *m.TagSeatId
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetUserState() MjUserState {
	if m != nil && m.UserState != nil {
		return *m.UserState
	}
	return MjUserState_Mj_User_State_Init
}

func (m *CSUserTableCardInfoNotify) GetRejectSuit() uint32 {
	if m != nil && m.RejectSuit != nil {
		return *m.RejectSuit
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetDealCards() []uint32 {
	if m != nil {
		return m.DealCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHandCards() []uint32 {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetMingCards() []uint32 {
	if m != nil {
		return m.MingCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetAnGangCards() []uint32 {
	if m != nil {
		return m.AnGangCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetBuGangCards() []uint32 {
	if m != nil {
		return m.BuGangCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetPengCards() []uint32 {
	if m != nil {
		return m.PengCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHuCards() uint32 {
	if m != nil && m.HuCards != nil {
		return *m.HuCards
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetLastOperateRecord() *CSMjOperateRecord {
	if m != nil {
		return m.LastOperateRecord
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHuanCards() []uint32 {
	if m != nil {
		return m.HuanCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHuanInCards() []uint32 {
	if m != nil {
		return m.HuanInCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetSettlementType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.SettlementType != nil {
		return *m.SettlementType
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

// 比赛结束结果明细
type CSUserMjSettlementInfoNotify struct {
	RoomType         *ROOM_TYPE          `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32             `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	SeatId           *uint32             `protobuf:"varint,3,req,name=SeatId" json:"SeatId,omitempty"`
	SettlementInfo   []*MjSettlementInfo `protobuf:"bytes,4,rep,name=SettlementInfo" json:"SettlementInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserMjSettlementInfoNotify) Reset()                    { *m = CSUserMjSettlementInfoNotify{} }
func (m *CSUserMjSettlementInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjSettlementInfoNotify) ProtoMessage()               {}
func (*CSUserMjSettlementInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *CSUserMjSettlementInfoNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserMjSettlementInfoNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserMjSettlementInfoNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserMjSettlementInfoNotify) GetSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.SettlementInfo
	}
	return nil
}

// 玩家对花信息通知
type CSUserSubFlowerNotify struct {
	RoomType           *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId             *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TotalPoints        *uint64    `protobuf:"varint,3,req,name=TotalPoints" json:"TotalPoints,omitempty"`
	SinglePoint        *uint64    `protobuf:"varint,4,req,name=SinglePoint" json:"SinglePoint,omitempty"`
	ChallengeCount     *uint32    `protobuf:"varint,5,req,name=ChallengeCount" json:"ChallengeCount,omitempty"`
	ChallengeTimes     *uint32    `protobuf:"varint,6,req,name=ChallengeTimes" json:"ChallengeTimes,omitempty"`
	TreasureCardCount  *uint32    `protobuf:"varint,7,req,name=TreasureCardCount" json:"TreasureCardCount,omitempty"`
	SubFlowerCard      *uint32    `protobuf:"varint,8,req,name=SubFlowerCard" json:"SubFlowerCard,omitempty"`
	SubFlowerCardCount *uint32    `protobuf:"varint,9,req,name=SubFlowerCardCount" json:"SubFlowerCardCount,omitempty"`
	GainPercentage     *uint32    `protobuf:"varint,10,req,name=GainPercentage" json:"GainPercentage,omitempty"`
	OldSinglePoint     *uint32    `protobuf:"varint,11,req,name=OldSinglePoint" json:"OldSinglePoint,omitempty"`
	XXX_unrecognized   []byte     `json:"-"`
}

func (m *CSUserSubFlowerNotify) Reset()                    { *m = CSUserSubFlowerNotify{} }
func (m *CSUserSubFlowerNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserSubFlowerNotify) ProtoMessage()               {}
func (*CSUserSubFlowerNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *CSUserSubFlowerNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserSubFlowerNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetTotalPoints() uint64 {
	if m != nil && m.TotalPoints != nil {
		return *m.TotalPoints
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetSinglePoint() uint64 {
	if m != nil && m.SinglePoint != nil {
		return *m.SinglePoint
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetChallengeCount() uint32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetChallengeTimes() uint32 {
	if m != nil && m.ChallengeTimes != nil {
		return *m.ChallengeTimes
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetTreasureCardCount() uint32 {
	if m != nil && m.TreasureCardCount != nil {
		return *m.TreasureCardCount
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetSubFlowerCard() uint32 {
	if m != nil && m.SubFlowerCard != nil {
		return *m.SubFlowerCard
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetSubFlowerCardCount() uint32 {
	if m != nil && m.SubFlowerCardCount != nil {
		return *m.SubFlowerCardCount
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetGainPercentage() uint32 {
	if m != nil && m.GainPercentage != nil {
		return *m.GainPercentage
	}
	return 0
}

func (m *CSUserSubFlowerNotify) GetOldSinglePoint() uint32 {
	if m != nil && m.OldSinglePoint != nil {
		return *m.OldSinglePoint
	}
	return 0
}

// 玩家挑战赛结果通知
type CSUserChallengeModeResultInfoNotify struct {
	RoomType           *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId             *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TotalPoints        *uint64    `protobuf:"varint,3,req,name=TotalPoints" json:"TotalPoints,omitempty"`
	HighestTotalPoints *uint64    `protobuf:"varint,4,req,name=HighestTotalPoints" json:"HighestTotalPoints,omitempty"`
	Ranking            *uint32    `protobuf:"varint,5,req,name=Ranking" json:"Ranking,omitempty"`
	AllRankingNum      *uint32    `protobuf:"varint,6,req,name=AllRankingNum" json:"AllRankingNum,omitempty"`
	ChallengeCount     *uint32    `protobuf:"varint,7,req,name=ChallengeCount" json:"ChallengeCount,omitempty"`
	ChallengeTimes     *uint32    `protobuf:"varint,8,req,name=ChallengeTimes" json:"ChallengeTimes,omitempty"`
	TreasureCard       *uint32    `protobuf:"varint,9,req,name=TreasureCard" json:"TreasureCard,omitempty"`
	TreasureCardCount  *uint32    `protobuf:"varint,10,req,name=TreasureCardCount" json:"TreasureCardCount,omitempty"`
	GainPercentage     *uint32    `protobuf:"varint,11,req,name=GainPercentage" json:"GainPercentage,omitempty"`
	OldTotalPoints     *uint64    `protobuf:"varint,12,req,name=OldTotalPoints" json:"OldTotalPoints,omitempty"`
	XXX_unrecognized   []byte     `json:"-"`
}

func (m *CSUserChallengeModeResultInfoNotify) Reset()         { *m = CSUserChallengeModeResultInfoNotify{} }
func (m *CSUserChallengeModeResultInfoNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserChallengeModeResultInfoNotify) ProtoMessage()    {}
func (*CSUserChallengeModeResultInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{52}
}

func (m *CSUserChallengeModeResultInfoNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserChallengeModeResultInfoNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetTotalPoints() uint64 {
	if m != nil && m.TotalPoints != nil {
		return *m.TotalPoints
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetHighestTotalPoints() uint64 {
	if m != nil && m.HighestTotalPoints != nil {
		return *m.HighestTotalPoints
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetRanking() uint32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetAllRankingNum() uint32 {
	if m != nil && m.AllRankingNum != nil {
		return *m.AllRankingNum
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetChallengeCount() uint32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetChallengeTimes() uint32 {
	if m != nil && m.ChallengeTimes != nil {
		return *m.ChallengeTimes
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetTreasureCard() uint32 {
	if m != nil && m.TreasureCard != nil {
		return *m.TreasureCard
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetTreasureCardCount() uint32 {
	if m != nil && m.TreasureCardCount != nil {
		return *m.TreasureCardCount
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetGainPercentage() uint32 {
	if m != nil && m.GainPercentage != nil {
		return *m.GainPercentage
	}
	return 0
}

func (m *CSUserChallengeModeResultInfoNotify) GetOldTotalPoints() uint64 {
	if m != nil && m.OldTotalPoints != nil {
		return *m.OldTotalPoints
	}
	return 0
}

// 玩家挑战赛排名奖励通知
type CSUserChallengeModeRankingRewardNotify struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	TotalPoints      *uint64    `protobuf:"varint,3,req,name=TotalPoints" json:"TotalPoints,omitempty"`
	Ranking          *uint32    `protobuf:"varint,4,req,name=Ranking" json:"Ranking,omitempty"`
	Gold             *int64     `protobuf:"varint,5,req,name=Gold" json:"Gold,omitempty"`
	Time             *uint64    `protobuf:"varint,6,req,name=Time" json:"Time,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserChallengeModeRankingRewardNotify) Reset() {
	*m = CSUserChallengeModeRankingRewardNotify{}
}
func (m *CSUserChallengeModeRankingRewardNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserChallengeModeRankingRewardNotify) ProtoMessage()    {}
func (*CSUserChallengeModeRankingRewardNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{53}
}

func (m *CSUserChallengeModeRankingRewardNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserChallengeModeRankingRewardNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserChallengeModeRankingRewardNotify) GetTotalPoints() uint64 {
	if m != nil && m.TotalPoints != nil {
		return *m.TotalPoints
	}
	return 0
}

func (m *CSUserChallengeModeRankingRewardNotify) GetRanking() uint32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *CSUserChallengeModeRankingRewardNotify) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CSUserChallengeModeRankingRewardNotify) GetTime() uint64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

// 请求玩家排名列表
type CSUserChallengeModeRankingListRqst struct {
	StartRank        *uint32 `protobuf:"varint,1,req,name=StartRank" json:"StartRank,omitempty"`
	RankNum          *uint32 `protobuf:"varint,2,req,name=RankNum" json:"RankNum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserChallengeModeRankingListRqst) Reset()         { *m = CSUserChallengeModeRankingListRqst{} }
func (m *CSUserChallengeModeRankingListRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserChallengeModeRankingListRqst) ProtoMessage()    {}
func (*CSUserChallengeModeRankingListRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{54}
}

func (m *CSUserChallengeModeRankingListRqst) GetStartRank() uint32 {
	if m != nil && m.StartRank != nil {
		return *m.StartRank
	}
	return 0
}

func (m *CSUserChallengeModeRankingListRqst) GetRankNum() uint32 {
	if m != nil && m.RankNum != nil {
		return *m.RankNum
	}
	return 0
}

type CSChallengModeRankingInfo struct {
	Ranking          *uint32         `protobuf:"varint,1,req,name=Ranking" json:"Ranking,omitempty"`
	Points           *uint32         `protobuf:"varint,2,req,name=Points" json:"Points,omitempty"`
	BaseInfo         *PlayerBaseInfo `protobuf:"bytes,3,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSChallengModeRankingInfo) Reset()                    { *m = CSChallengModeRankingInfo{} }
func (m *CSChallengModeRankingInfo) String() string            { return proto.CompactTextString(m) }
func (*CSChallengModeRankingInfo) ProtoMessage()               {}
func (*CSChallengModeRankingInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *CSChallengModeRankingInfo) GetRanking() uint32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *CSChallengModeRankingInfo) GetPoints() uint32 {
	if m != nil && m.Points != nil {
		return *m.Points
	}
	return 0
}

func (m *CSChallengModeRankingInfo) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

type CSUserChallengeModeRankingListRsp struct {
	StartRank          *uint32                      `protobuf:"varint,1,req,name=StartRank" json:"StartRank,omitempty"`
	RankNum            *uint32                      `protobuf:"varint,2,req,name=RankNum" json:"RankNum,omitempty"`
	TotalRankNum       *uint32                      `protobuf:"varint,3,req,name=TotalRankNum" json:"TotalRankNum,omitempty"`
	PlayerRanking      *uint32                      `protobuf:"varint,4,req,name=PlayerRanking" json:"PlayerRanking,omitempty"`
	PlayerRankingPoint *uint32                      `protobuf:"varint,5,req,name=PlayerRankingPoint" json:"PlayerRankingPoint,omitempty"`
	RankInfos          []*CSChallengModeRankingInfo `protobuf:"bytes,6,rep,name=RankInfos" json:"RankInfos,omitempty"`
	XXX_unrecognized   []byte                       `json:"-"`
}

func (m *CSUserChallengeModeRankingListRsp) Reset()         { *m = CSUserChallengeModeRankingListRsp{} }
func (m *CSUserChallengeModeRankingListRsp) String() string { return proto.CompactTextString(m) }
func (*CSUserChallengeModeRankingListRsp) ProtoMessage()    {}
func (*CSUserChallengeModeRankingListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56}
}

func (m *CSUserChallengeModeRankingListRsp) GetStartRank() uint32 {
	if m != nil && m.StartRank != nil {
		return *m.StartRank
	}
	return 0
}

func (m *CSUserChallengeModeRankingListRsp) GetRankNum() uint32 {
	if m != nil && m.RankNum != nil {
		return *m.RankNum
	}
	return 0
}

func (m *CSUserChallengeModeRankingListRsp) GetTotalRankNum() uint32 {
	if m != nil && m.TotalRankNum != nil {
		return *m.TotalRankNum
	}
	return 0
}

func (m *CSUserChallengeModeRankingListRsp) GetPlayerRanking() uint32 {
	if m != nil && m.PlayerRanking != nil {
		return *m.PlayerRanking
	}
	return 0
}

func (m *CSUserChallengeModeRankingListRsp) GetPlayerRankingPoint() uint32 {
	if m != nil && m.PlayerRankingPoint != nil {
		return *m.PlayerRankingPoint
	}
	return 0
}

func (m *CSUserChallengeModeRankingListRsp) GetRankInfos() []*CSChallengModeRankingInfo {
	if m != nil {
		return m.RankInfos
	}
	return nil
}

type RoomAdvanceParam struct {
	ZiMoJiaFan         *bool   `protobuf:"varint,1,req,name=ZiMoJiaFan" json:"ZiMoJiaFan,omitempty"`
	ZiMoMoreThanMaxFan *bool   `protobuf:"varint,2,req,name=ZiMoMoreThanMaxFan" json:"ZiMoMoreThanMaxFan,omitempty"`
	JinGouDiao         *bool   `protobuf:"varint,3,req,name=JinGouDiao" json:"JinGouDiao,omitempty"`
	HaiDiLaoYue        *bool   `protobuf:"varint,4,req,name=HaiDiLaoYue" json:"HaiDiLaoYue,omitempty"`
	DaXiaoYu           *bool   `protobuf:"varint,5,req,name=DaXiaoYu" json:"DaXiaoYu,omitempty"`
	DianGangHuaZiMo    *bool   `protobuf:"varint,6,req,name=DianGangHuaZiMo" json:"DianGangHuaZiMo,omitempty"`
	YaoJiu             *bool   `protobuf:"varint,7,req,name=YaoJiu" json:"YaoJiu,omitempty"`
	Jiang              *bool   `protobuf:"varint,8,req,name=Jiang" json:"Jiang,omitempty"`
	HuanSanZhangType   *uint32 `protobuf:"varint,9,req,name=HuanSanZhangType" json:"HuanSanZhangType,omitempty"`
	MenQing            *bool   `protobuf:"varint,10,req,name=MenQing" json:"MenQing,omitempty"`
	ZhongZhang         *bool   `protobuf:"varint,11,req,name=ZhongZhang" json:"ZhongZhang,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *RoomAdvanceParam) Reset()                    { *m = RoomAdvanceParam{} }
func (m *RoomAdvanceParam) String() string            { return proto.CompactTextString(m) }
func (*RoomAdvanceParam) ProtoMessage()               {}
func (*RoomAdvanceParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *RoomAdvanceParam) GetZiMoJiaFan() bool {
	if m != nil && m.ZiMoJiaFan != nil {
		return *m.ZiMoJiaFan
	}
	return false
}

func (m *RoomAdvanceParam) GetZiMoMoreThanMaxFan() bool {
	if m != nil && m.ZiMoMoreThanMaxFan != nil {
		return *m.ZiMoMoreThanMaxFan
	}
	return false
}

func (m *RoomAdvanceParam) GetJinGouDiao() bool {
	if m != nil && m.JinGouDiao != nil {
		return *m.JinGouDiao
	}
	return false
}

func (m *RoomAdvanceParam) GetHaiDiLaoYue() bool {
	if m != nil && m.HaiDiLaoYue != nil {
		return *m.HaiDiLaoYue
	}
	return false
}

func (m *RoomAdvanceParam) GetDaXiaoYu() bool {
	if m != nil && m.DaXiaoYu != nil {
		return *m.DaXiaoYu
	}
	return false
}

func (m *RoomAdvanceParam) GetDianGangHuaZiMo() bool {
	if m != nil && m.DianGangHuaZiMo != nil {
		return *m.DianGangHuaZiMo
	}
	return false
}

func (m *RoomAdvanceParam) GetYaoJiu() bool {
	if m != nil && m.YaoJiu != nil {
		return *m.YaoJiu
	}
	return false
}

func (m *RoomAdvanceParam) GetJiang() bool {
	if m != nil && m.Jiang != nil {
		return *m.Jiang
	}
	return false
}

func (m *RoomAdvanceParam) GetHuanSanZhangType() uint32 {
	if m != nil && m.HuanSanZhangType != nil {
		return *m.HuanSanZhangType
	}
	return 0
}

func (m *RoomAdvanceParam) GetMenQing() bool {
	if m != nil && m.MenQing != nil {
		return *m.MenQing
	}
	return false
}

func (m *RoomAdvanceParam) GetZhongZhang() bool {
	if m != nil && m.ZhongZhang != nil {
		return *m.ZhongZhang
	}
	return false
}

// CS_CMD_USER_CREATE_ROOM = 33; //创建房间
// 创建房间
type CSUserCreateRoomRqst struct {
	RoomType         *ROOM_TYPE        `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomMatchNum     *uint32           `protobuf:"varint,2,req,name=RoomMatchNum" json:"RoomMatchNum,omitempty"`
	RoomDiZhu        *uint32           `protobuf:"varint,3,req,name=RoomDiZhu" json:"RoomDiZhu,omitempty"`
	RoomMaxBeiShu    *uint32           `protobuf:"varint,4,req,name=RoomMaxBeiShu" json:"RoomMaxBeiShu,omitempty"`
	AdvanceParam     *RoomAdvanceParam `protobuf:"bytes,6,req,name=AdvanceParam" json:"AdvanceParam,omitempty"`
	MAppointRoomId   *uint32           `protobuf:"varint,7,opt,name=mAppointRoomId" json:"mAppointRoomId,omitempty"`
	Deposit          *uint32           `protobuf:"varint,8,req,name=Deposit" json:"Deposit,omitempty"`
	RoomPassword     *string           `protobuf:"bytes,9,req,name=RoomPassword" json:"RoomPassword,omitempty"`
	MinMatchUserNum  *uint32           `protobuf:"varint,10,req,name=MinMatchUserNum" json:"MinMatchUserNum,omitempty"`
	MinCurrencyValue *uint32           `protobuf:"varint,11,req,name=MinCurrencyValue" json:"MinCurrencyValue,omitempty"`
	ClubId           *uint32           `protobuf:"varint,12,req,name=ClubId" json:"ClubId,omitempty"`
	IsPrivateRoom    *bool             `protobuf:"varint,13,req,name=IsPrivateRoom" json:"IsPrivateRoom,omitempty"`
	InvitedUid       []uint64          `protobuf:"varint,14,rep,name=InvitedUid" json:"InvitedUid,omitempty"`
	RewardCoin       *uint64           `protobuf:"varint,15,req,name=RewardCoin" json:"RewardCoin,omitempty"`
	JoinMatchFee     *uint64           `protobuf:"varint,16,req,name=JoinMatchFee" json:"JoinMatchFee,omitempty"`
	MatchType        *uint32           `protobuf:"varint,17,req,name=MatchType" json:"MatchType,omitempty"`
	Uid              *uint64           `protobuf:"varint,18,req,name=Uid" json:"Uid,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSUserCreateRoomRqst) Reset()                    { *m = CSUserCreateRoomRqst{} }
func (m *CSUserCreateRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserCreateRoomRqst) ProtoMessage()               {}
func (*CSUserCreateRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *CSUserCreateRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserCreateRoomRqst) GetRoomMatchNum() uint32 {
	if m != nil && m.RoomMatchNum != nil {
		return *m.RoomMatchNum
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetRoomDiZhu() uint32 {
	if m != nil && m.RoomDiZhu != nil {
		return *m.RoomDiZhu
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetRoomMaxBeiShu() uint32 {
	if m != nil && m.RoomMaxBeiShu != nil {
		return *m.RoomMaxBeiShu
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetAdvanceParam() *RoomAdvanceParam {
	if m != nil {
		return m.AdvanceParam
	}
	return nil
}

func (m *CSUserCreateRoomRqst) GetMAppointRoomId() uint32 {
	if m != nil && m.MAppointRoomId != nil {
		return *m.MAppointRoomId
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetDeposit() uint32 {
	if m != nil && m.Deposit != nil {
		return *m.Deposit
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetRoomPassword() string {
	if m != nil && m.RoomPassword != nil {
		return *m.RoomPassword
	}
	return ""
}

func (m *CSUserCreateRoomRqst) GetMinMatchUserNum() uint32 {
	if m != nil && m.MinMatchUserNum != nil {
		return *m.MinMatchUserNum
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetMinCurrencyValue() uint32 {
	if m != nil && m.MinCurrencyValue != nil {
		return *m.MinCurrencyValue
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetClubId() uint32 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetIsPrivateRoom() bool {
	if m != nil && m.IsPrivateRoom != nil {
		return *m.IsPrivateRoom
	}
	return false
}

func (m *CSUserCreateRoomRqst) GetInvitedUid() []uint64 {
	if m != nil {
		return m.InvitedUid
	}
	return nil
}

func (m *CSUserCreateRoomRqst) GetRewardCoin() uint64 {
	if m != nil && m.RewardCoin != nil {
		return *m.RewardCoin
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetJoinMatchFee() uint64 {
	if m != nil && m.JoinMatchFee != nil {
		return *m.JoinMatchFee
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetMatchType() uint32 {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return 0
}

func (m *CSUserCreateRoomRqst) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type CSUserCreateRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserCreateRoomRsp) Reset()                    { *m = CSUserCreateRoomRsp{} }
func (m *CSUserCreateRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserCreateRoomRsp) ProtoMessage()               {}
func (*CSUserCreateRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *CSUserCreateRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserCreateRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// CS_CMD_USER_DISSOLVE_ROOM = 34; //解散房间，创建者可以解散房间
// 解散房间
type CSUserDissolveRoomRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserDissolveRoomRqst) Reset()                    { *m = CSUserDissolveRoomRqst{} }
func (m *CSUserDissolveRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserDissolveRoomRqst) ProtoMessage()               {}
func (*CSUserDissolveRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *CSUserDissolveRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserDissolveRoomRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

type CSUserDissolveRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserDissolveRoomRsp) Reset()                    { *m = CSUserDissolveRoomRsp{} }
func (m *CSUserDissolveRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserDissolveRoomRsp) ProtoMessage()               {}
func (*CSUserDissolveRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *CSUserDissolveRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserDissolveRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// CS_CMD_USER_DISSOLVE_ROOM_NOTIFY = 35; //解散房间，创建者可以解散房间
type CSUserDissolveRoomNotify struct {
	RoomId           *uint32 `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserDissolveRoomNotify) Reset()                    { *m = CSUserDissolveRoomNotify{} }
func (m *CSUserDissolveRoomNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserDissolveRoomNotify) ProtoMessage()               {}
func (*CSUserDissolveRoomNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *CSUserDissolveRoomNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// CS_CMD_USER_RENEW_ROOM = 36; //续约房间
// 续约房间
type CSUserRenewRoomRqst struct {
	RoomId           *uint32 `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserRenewRoomRqst) Reset()                    { *m = CSUserRenewRoomRqst{} }
func (m *CSUserRenewRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserRenewRoomRqst) ProtoMessage()               {}
func (*CSUserRenewRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *CSUserRenewRoomRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

type CSUserRenewRoomRsp struct {
	RoomId           *uint32 `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserRenewRoomRsp) Reset()                    { *m = CSUserRenewRoomRsp{} }
func (m *CSUserRenewRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserRenewRoomRsp) ProtoMessage()               {}
func (*CSUserRenewRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *CSUserRenewRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// CS_CMD_USER_CREATE_DISSOLVE_ROOM_COST_NOTIFY = 37; //房间创建解散费用通知
// 房间创建解散费用通知
type CSUserCreateDissolveRoomCostNotify struct {
	RoomId           *uint32    `protobuf:"varint,1,req,name=RoomId" json:"RoomId,omitempty"`
	RoomType         *ROOM_TYPE `protobuf:"varint,2,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	Cost             *int32     `protobuf:"varint,3,req,name=Cost" json:"Cost,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserCreateDissolveRoomCostNotify) Reset()         { *m = CSUserCreateDissolveRoomCostNotify{} }
func (m *CSUserCreateDissolveRoomCostNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserCreateDissolveRoomCostNotify) ProtoMessage()    {}
func (*CSUserCreateDissolveRoomCostNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{65}
}

func (m *CSUserCreateDissolveRoomCostNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserCreateDissolveRoomCostNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserCreateDissolveRoomCostNotify) GetCost() int32 {
	if m != nil && m.Cost != nil {
		return *m.Cost
	}
	return 0
}

// CS_CMD_USER_ROOM_INFO_CHANGE_NOTIFY = 38; //房间信息改变通知
// 房间信息改变通知
type CSUserRoomInfoChangeNotify struct {
	RoomType         *ROOM_TYPE        `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32           `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	RoomMatchNum     *uint32           `protobuf:"varint,3,req,name=RoomMatchNum" json:"RoomMatchNum,omitempty"`
	RoomDiZhu        *uint32           `protobuf:"varint,4,req,name=RoomDiZhu" json:"RoomDiZhu,omitempty"`
	RoomMaxBeiShu    *uint32           `protobuf:"varint,5,req,name=RoomMaxBeiShu" json:"RoomMaxBeiShu,omitempty"`
	RoomOwnerUid     *uint64           `protobuf:"varint,7,req,name=RoomOwnerUid" json:"RoomOwnerUid,omitempty"`
	RoomPlayerNum    *uint64           `protobuf:"varint,8,req,name=RoomPlayerNum" json:"RoomPlayerNum,omitempty"`
	RoomState        *RoomState        `protobuf:"varint,9,req,name=RoomState,enum=rpc.RoomState" json:"RoomState,omitempty"`
	AdvanceParam     *RoomAdvanceParam `protobuf:"bytes,10,req,name=AdvanceParam" json:"AdvanceParam,omitempty"`
	Deposit          *uint32           `protobuf:"varint,11,req,name=Deposit" json:"Deposit,omitempty"`
	ClubId           *uint64           `protobuf:"varint,12,req,name=ClubId" json:"ClubId,omitempty"`
	MinMatchUserNum  *uint32           `protobuf:"varint,13,req,name=MinMatchUserNum" json:"MinMatchUserNum,omitempty"`
	MinCurrencyValue *uint32           `protobuf:"varint,14,req,name=MinCurrencyValue" json:"MinCurrencyValue,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSUserRoomInfoChangeNotify) Reset()                    { *m = CSUserRoomInfoChangeNotify{} }
func (m *CSUserRoomInfoChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserRoomInfoChangeNotify) ProtoMessage()               {}
func (*CSUserRoomInfoChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CSUserRoomInfoChangeNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserRoomInfoChangeNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetRoomMatchNum() uint32 {
	if m != nil && m.RoomMatchNum != nil {
		return *m.RoomMatchNum
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetRoomDiZhu() uint32 {
	if m != nil && m.RoomDiZhu != nil {
		return *m.RoomDiZhu
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetRoomMaxBeiShu() uint32 {
	if m != nil && m.RoomMaxBeiShu != nil {
		return *m.RoomMaxBeiShu
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetRoomOwnerUid() uint64 {
	if m != nil && m.RoomOwnerUid != nil {
		return *m.RoomOwnerUid
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetRoomPlayerNum() uint64 {
	if m != nil && m.RoomPlayerNum != nil {
		return *m.RoomPlayerNum
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetRoomState() RoomState {
	if m != nil && m.RoomState != nil {
		return *m.RoomState
	}
	return RoomState_Room_State_Init
}

func (m *CSUserRoomInfoChangeNotify) GetAdvanceParam() *RoomAdvanceParam {
	if m != nil {
		return m.AdvanceParam
	}
	return nil
}

func (m *CSUserRoomInfoChangeNotify) GetDeposit() uint32 {
	if m != nil && m.Deposit != nil {
		return *m.Deposit
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetClubId() uint64 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetMinMatchUserNum() uint32 {
	if m != nil && m.MinMatchUserNum != nil {
		return *m.MinMatchUserNum
	}
	return 0
}

func (m *CSUserRoomInfoChangeNotify) GetMinCurrencyValue() uint32 {
	if m != nil && m.MinCurrencyValue != nil {
		return *m.MinCurrencyValue
	}
	return 0
}

// CS_CMD_USER_TABLE_CHAT = 49;//聊天
// 玩家操作
type CSUserTableChatRqst struct {
	OperateSeatId    *uint32 `protobuf:"varint,1,req,name=OperateSeatId" json:"OperateSeatId,omitempty"`
	TextContent      *string `protobuf:"bytes,2,opt,name=TextContent" json:"TextContent,omitempty"`
	BinaryContent    []byte  `protobuf:"bytes,3,opt,name=BinaryContent" json:"BinaryContent,omitempty"`
	ContentTime      *uint32 `protobuf:"varint,4,opt,name=ContentTime" json:"ContentTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserTableChatRqst) Reset()                    { *m = CSUserTableChatRqst{} }
func (m *CSUserTableChatRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableChatRqst) ProtoMessage()               {}
func (*CSUserTableChatRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *CSUserTableChatRqst) GetOperateSeatId() uint32 {
	if m != nil && m.OperateSeatId != nil {
		return *m.OperateSeatId
	}
	return 0
}

func (m *CSUserTableChatRqst) GetTextContent() string {
	if m != nil && m.TextContent != nil {
		return *m.TextContent
	}
	return ""
}

func (m *CSUserTableChatRqst) GetBinaryContent() []byte {
	if m != nil {
		return m.BinaryContent
	}
	return nil
}

func (m *CSUserTableChatRqst) GetContentTime() uint32 {
	if m != nil && m.ContentTime != nil {
		return *m.ContentTime
	}
	return 0
}

type CSUserTableChatNotify struct {
	OperateSeatId    *uint32 `protobuf:"varint,1,req,name=OperateSeatId" json:"OperateSeatId,omitempty"`
	TextContent      *string `protobuf:"bytes,2,opt,name=TextContent" json:"TextContent,omitempty"`
	BinaryContent    []byte  `protobuf:"bytes,3,opt,name=BinaryContent" json:"BinaryContent,omitempty"`
	ContentTime      *uint32 `protobuf:"varint,4,opt,name=ContentTime" json:"ContentTime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserTableChatNotify) Reset()                    { *m = CSUserTableChatNotify{} }
func (m *CSUserTableChatNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableChatNotify) ProtoMessage()               {}
func (*CSUserTableChatNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *CSUserTableChatNotify) GetOperateSeatId() uint32 {
	if m != nil && m.OperateSeatId != nil {
		return *m.OperateSeatId
	}
	return 0
}

func (m *CSUserTableChatNotify) GetTextContent() string {
	if m != nil && m.TextContent != nil {
		return *m.TextContent
	}
	return ""
}

func (m *CSUserTableChatNotify) GetBinaryContent() []byte {
	if m != nil {
		return m.BinaryContent
	}
	return nil
}

func (m *CSUserTableChatNotify) GetContentTime() uint32 {
	if m != nil && m.ContentTime != nil {
		return *m.ContentTime
	}
	return 0
}

// CS_CMD_USER_TABLE_DISSOLVE_APPLY = 51;//申请解散桌子
type CSUserTableDissolveApplyRqst struct {
	ApplySeatId      *uint32 `protobuf:"varint,1,req,name=ApplySeatId" json:"ApplySeatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserTableDissolveApplyRqst) Reset()                    { *m = CSUserTableDissolveApplyRqst{} }
func (m *CSUserTableDissolveApplyRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableDissolveApplyRqst) ProtoMessage()               {}
func (*CSUserTableDissolveApplyRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *CSUserTableDissolveApplyRqst) GetApplySeatId() uint32 {
	if m != nil && m.ApplySeatId != nil {
		return *m.ApplySeatId
	}
	return 0
}

// CS_CMD_USER_TABLE_ANSWER_DISSOLVE_APPLY = 52;//应答解散申请
type CSUserTableAnswerDissolveApplyRqst struct {
	AnswerApplySeatId *uint32 `protobuf:"varint,1,req,name=AnswerApplySeatId" json:"AnswerApplySeatId,omitempty"`
	Agree             *bool   `protobuf:"varint,2,req,name=Agree" json:"Agree,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSUserTableAnswerDissolveApplyRqst) Reset()         { *m = CSUserTableAnswerDissolveApplyRqst{} }
func (m *CSUserTableAnswerDissolveApplyRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserTableAnswerDissolveApplyRqst) ProtoMessage()    {}
func (*CSUserTableAnswerDissolveApplyRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{70}
}

func (m *CSUserTableAnswerDissolveApplyRqst) GetAnswerApplySeatId() uint32 {
	if m != nil && m.AnswerApplySeatId != nil {
		return *m.AnswerApplySeatId
	}
	return 0
}

func (m *CSUserTableAnswerDissolveApplyRqst) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

// CS_CMD_USER_TABLE_DISSOLVE_APPLY_NOTIFY = 53;//申请解散通知
type CSUserTableDissolveApplyNotify struct {
	ApplySeatId          *uint32             `protobuf:"varint,1,req,name=ApplySeatId" json:"ApplySeatId,omitempty"`
	AgreeApplySeatIds    []uint32            `protobuf:"varint,2,rep,name=AgreeApplySeatIds" json:"AgreeApplySeatIds,omitempty"`
	DisagreeApplySeatIds []uint32            `protobuf:"varint,3,rep,name=DisagreeApplySeatIds" json:"DisagreeApplySeatIds,omitempty"`
	FinalDecision        *TableFinalDecision `protobuf:"varint,4,req,name=FinalDecision,enum=rpc.TableFinalDecision" json:"FinalDecision,omitempty"`
	ApplyTimeOut         *uint32             `protobuf:"varint,5,req,name=ApplyTimeOut" json:"ApplyTimeOut,omitempty"`
	XXX_unrecognized     []byte              `json:"-"`
}

func (m *CSUserTableDissolveApplyNotify) Reset()                    { *m = CSUserTableDissolveApplyNotify{} }
func (m *CSUserTableDissolveApplyNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableDissolveApplyNotify) ProtoMessage()               {}
func (*CSUserTableDissolveApplyNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *CSUserTableDissolveApplyNotify) GetApplySeatId() uint32 {
	if m != nil && m.ApplySeatId != nil {
		return *m.ApplySeatId
	}
	return 0
}

func (m *CSUserTableDissolveApplyNotify) GetAgreeApplySeatIds() []uint32 {
	if m != nil {
		return m.AgreeApplySeatIds
	}
	return nil
}

func (m *CSUserTableDissolveApplyNotify) GetDisagreeApplySeatIds() []uint32 {
	if m != nil {
		return m.DisagreeApplySeatIds
	}
	return nil
}

func (m *CSUserTableDissolveApplyNotify) GetFinalDecision() TableFinalDecision {
	if m != nil && m.FinalDecision != nil {
		return *m.FinalDecision
	}
	return TableFinalDecision_Table_Decision_None
}

func (m *CSUserTableDissolveApplyNotify) GetApplyTimeOut() uint32 {
	if m != nil && m.ApplyTimeOut != nil {
		return *m.ApplyTimeOut
	}
	return 0
}

type CSMatchWinDetailInfo struct {
	SeatId           *uint32 `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	WinValue         *int32  `protobuf:"varint,2,req,name=WinValue" json:"WinValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSMatchWinDetailInfo) Reset()                    { *m = CSMatchWinDetailInfo{} }
func (m *CSMatchWinDetailInfo) String() string            { return proto.CompactTextString(m) }
func (*CSMatchWinDetailInfo) ProtoMessage()               {}
func (*CSMatchWinDetailInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *CSMatchWinDetailInfo) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSMatchWinDetailInfo) GetWinValue() int32 {
	if m != nil && m.WinValue != nil {
		return *m.WinValue
	}
	return 0
}

type CSMatchWinRecord struct {
	DetailInfo       []*CSMatchWinDetailInfo `protobuf:"bytes,1,rep,name=DetailInfo" json:"DetailInfo,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CSMatchWinRecord) Reset()                    { *m = CSMatchWinRecord{} }
func (m *CSMatchWinRecord) String() string            { return proto.CompactTextString(m) }
func (*CSMatchWinRecord) ProtoMessage()               {}
func (*CSMatchWinRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *CSMatchWinRecord) GetDetailInfo() []*CSMatchWinDetailInfo {
	if m != nil {
		return m.DetailInfo
	}
	return nil
}

type CSUserTableMatchWinRecordNotify struct {
	TableMatchWinRecord []*CSMatchWinRecord `protobuf:"bytes,1,rep,name=TableMatchWinRecord" json:"TableMatchWinRecord,omitempty"`
	WinRewardCoin       *uint64             `protobuf:"varint,2,req,name=WinRewardCoin" json:"WinRewardCoin,omitempty"`
	XXX_unrecognized    []byte              `json:"-"`
}

func (m *CSUserTableMatchWinRecordNotify) Reset()         { *m = CSUserTableMatchWinRecordNotify{} }
func (m *CSUserTableMatchWinRecordNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserTableMatchWinRecordNotify) ProtoMessage()    {}
func (*CSUserTableMatchWinRecordNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{74}
}

func (m *CSUserTableMatchWinRecordNotify) GetTableMatchWinRecord() []*CSMatchWinRecord {
	if m != nil {
		return m.TableMatchWinRecord
	}
	return nil
}

func (m *CSUserTableMatchWinRecordNotify) GetWinRewardCoin() uint64 {
	if m != nil && m.WinRewardCoin != nil {
		return *m.WinRewardCoin
	}
	return 0
}

type UserReward struct {
	Type             *CURRENCY_TYPE `protobuf:"varint,1,req,name=Type,enum=rpc.CURRENCY_TYPE" json:"Type,omitempty"`
	Count            *int32         `protobuf:"varint,2,req,name=Count" json:"Count,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UserReward) Reset()                    { *m = UserReward{} }
func (m *UserReward) String() string            { return proto.CompactTextString(m) }
func (*UserReward) ProtoMessage()               {}
func (*UserReward) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *UserReward) GetType() CURRENCY_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return CURRENCY_TYPE_CURRENCY_TYPE_NONE
}

func (m *UserReward) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type UserEmailInfo struct {
	Id               *uint32                 `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	Type             *GAME_EMAIL_TYPE        `protobuf:"varint,2,req,name=Type,enum=rpc.GAME_EMAIL_TYPE" json:"Type,omitempty"`
	NotifyType       *GAME_EMAIL_NOTIFY_TYPE `protobuf:"varint,3,req,name=NotifyType,enum=rpc.GAME_EMAIL_NOTIFY_TYPE" json:"NotifyType,omitempty"`
	Status           *GAME_EMAIL_STATUS      `protobuf:"varint,4,req,name=Status,enum=rpc.GAME_EMAIL_STATUS" json:"Status,omitempty"`
	SenderUid        *uint64                 `protobuf:"varint,5,req,name=SenderUid" json:"SenderUid,omitempty"`
	SenderName       *string                 `protobuf:"bytes,6,req,name=SenderName" json:"SenderName,omitempty"`
	Title            *string                 `protobuf:"bytes,7,req,name=Title" json:"Title,omitempty"`
	Text             *string                 `protobuf:"bytes,8,req,name=Text" json:"Text,omitempty"`
	Time             *int64                  `protobuf:"varint,9,req,name=Time" json:"Time,omitempty"`
	Rewards          []*UserReward           `protobuf:"bytes,10,rep,name=Rewards" json:"Rewards,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UserEmailInfo) Reset()                    { *m = UserEmailInfo{} }
func (m *UserEmailInfo) String() string            { return proto.CompactTextString(m) }
func (*UserEmailInfo) ProtoMessage()               {}
func (*UserEmailInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *UserEmailInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UserEmailInfo) GetType() GAME_EMAIL_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GAME_EMAIL_TYPE_GAME_EMAIL_TYPE_TEXT
}

func (m *UserEmailInfo) GetNotifyType() GAME_EMAIL_NOTIFY_TYPE {
	if m != nil && m.NotifyType != nil {
		return *m.NotifyType
	}
	return GAME_EMAIL_NOTIFY_TYPE_GAME_EMAIL_NOTIFY_TYPE_NONE
}

func (m *UserEmailInfo) GetStatus() GAME_EMAIL_STATUS {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return GAME_EMAIL_STATUS_GAME_EMAIL_STATUS_NONE
}

func (m *UserEmailInfo) GetSenderUid() uint64 {
	if m != nil && m.SenderUid != nil {
		return *m.SenderUid
	}
	return 0
}

func (m *UserEmailInfo) GetSenderName() string {
	if m != nil && m.SenderName != nil {
		return *m.SenderName
	}
	return ""
}

func (m *UserEmailInfo) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *UserEmailInfo) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *UserEmailInfo) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *UserEmailInfo) GetRewards() []*UserReward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

type CSUserGetEmailInfoRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetEmailInfoRqst) Reset()                    { *m = CSUserGetEmailInfoRqst{} }
func (m *CSUserGetEmailInfoRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetEmailInfoRqst) ProtoMessage()               {}
func (*CSUserGetEmailInfoRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *CSUserGetEmailInfoRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetEmailInfoRsp struct {
	EmailInfo        []*UserEmailInfo `protobuf:"bytes,1,rep,name=EmailInfo" json:"EmailInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CSUserGetEmailInfoRsp) Reset()                    { *m = CSUserGetEmailInfoRsp{} }
func (m *CSUserGetEmailInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetEmailInfoRsp) ProtoMessage()               {}
func (*CSUserGetEmailInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *CSUserGetEmailInfoRsp) GetEmailInfo() []*UserEmailInfo {
	if m != nil {
		return m.EmailInfo
	}
	return nil
}

type CSUserOpenEmailRqst struct {
	EmailId          *uint32 `protobuf:"varint,1,req,name=EmailId" json:"EmailId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserOpenEmailRqst) Reset()                    { *m = CSUserOpenEmailRqst{} }
func (m *CSUserOpenEmailRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserOpenEmailRqst) ProtoMessage()               {}
func (*CSUserOpenEmailRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *CSUserOpenEmailRqst) GetEmailId() uint32 {
	if m != nil && m.EmailId != nil {
		return *m.EmailId
	}
	return 0
}

type CSUserOpenEmailRsp struct {
	EmailInfo        *UserEmailInfo `protobuf:"bytes,1,req,name=EmailInfo" json:"EmailInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CSUserOpenEmailRsp) Reset()                    { *m = CSUserOpenEmailRsp{} }
func (m *CSUserOpenEmailRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserOpenEmailRsp) ProtoMessage()               {}
func (*CSUserOpenEmailRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *CSUserOpenEmailRsp) GetEmailInfo() *UserEmailInfo {
	if m != nil {
		return m.EmailInfo
	}
	return nil
}

type CSUserGetEmailRewardRqst struct {
	EmailId          *uint32 `protobuf:"varint,1,req,name=EmailId" json:"EmailId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserGetEmailRewardRqst) Reset()                    { *m = CSUserGetEmailRewardRqst{} }
func (m *CSUserGetEmailRewardRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetEmailRewardRqst) ProtoMessage()               {}
func (*CSUserGetEmailRewardRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *CSUserGetEmailRewardRqst) GetEmailId() uint32 {
	if m != nil && m.EmailId != nil {
		return *m.EmailId
	}
	return 0
}

type CSUserGetEmailRewardRsp struct {
	EmailId          *uint32 `protobuf:"varint,1,req,name=EmailId" json:"EmailId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserGetEmailRewardRsp) Reset()                    { *m = CSUserGetEmailRewardRsp{} }
func (m *CSUserGetEmailRewardRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetEmailRewardRsp) ProtoMessage()               {}
func (*CSUserGetEmailRewardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *CSUserGetEmailRewardRsp) GetEmailId() uint32 {
	if m != nil && m.EmailId != nil {
		return *m.EmailId
	}
	return 0
}

type CSUserDeleteEmailRqst struct {
	EmailId          *uint32 `protobuf:"varint,1,req,name=EmailId" json:"EmailId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserDeleteEmailRqst) Reset()                    { *m = CSUserDeleteEmailRqst{} }
func (m *CSUserDeleteEmailRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserDeleteEmailRqst) ProtoMessage()               {}
func (*CSUserDeleteEmailRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *CSUserDeleteEmailRqst) GetEmailId() uint32 {
	if m != nil && m.EmailId != nil {
		return *m.EmailId
	}
	return 0
}

type CSUserDeleteEmailRsp struct {
	EmailId          *uint32 `protobuf:"varint,1,req,name=EmailId" json:"EmailId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserDeleteEmailRsp) Reset()                    { *m = CSUserDeleteEmailRsp{} }
func (m *CSUserDeleteEmailRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserDeleteEmailRsp) ProtoMessage()               {}
func (*CSUserDeleteEmailRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *CSUserDeleteEmailRsp) GetEmailId() uint32 {
	if m != nil && m.EmailId != nil {
		return *m.EmailId
	}
	return 0
}

type CSUserNewEmailNotify struct {
	EmailInfo        *UserEmailInfo `protobuf:"bytes,1,req,name=EmailInfo" json:"EmailInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CSUserNewEmailNotify) Reset()                    { *m = CSUserNewEmailNotify{} }
func (m *CSUserNewEmailNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserNewEmailNotify) ProtoMessage()               {}
func (*CSUserNewEmailNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *CSUserNewEmailNotify) GetEmailInfo() *UserEmailInfo {
	if m != nil {
		return m.EmailInfo
	}
	return nil
}

type CSUserSignInRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserSignInRqst) Reset()                    { *m = CSUserSignInRqst{} }
func (m *CSUserSignInRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserSignInRqst) ProtoMessage()               {}
func (*CSUserSignInRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *CSUserSignInRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserSignInRsp struct {
	ConsecutiveSignInNumber *int32 `protobuf:"varint,1,req,name=ConsecutiveSignInNumber" json:"ConsecutiveSignInNumber,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *CSUserSignInRsp) Reset()                    { *m = CSUserSignInRsp{} }
func (m *CSUserSignInRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserSignInRsp) ProtoMessage()               {}
func (*CSUserSignInRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *CSUserSignInRsp) GetConsecutiveSignInNumber() int32 {
	if m != nil && m.ConsecutiveSignInNumber != nil {
		return *m.ConsecutiveSignInNumber
	}
	return 0
}

type CSUserGetConsecutiveSignInNumberRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetConsecutiveSignInNumberRqst) Reset()         { *m = CSUserGetConsecutiveSignInNumberRqst{} }
func (m *CSUserGetConsecutiveSignInNumberRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserGetConsecutiveSignInNumberRqst) ProtoMessage()    {}
func (*CSUserGetConsecutiveSignInNumberRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{88}
}

func (m *CSUserGetConsecutiveSignInNumberRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetConsecutiveSignInNumberRsp struct {
	ConsecutiveSignInNumber *int32 `protobuf:"varint,1,req,name=ConsecutiveSignInNumber" json:"ConsecutiveSignInNumber,omitempty"`
	HasSignIn               *bool  `protobuf:"varint,2,req,name=HasSignIn" json:"HasSignIn,omitempty"`
	XXX_unrecognized        []byte `json:"-"`
}

func (m *CSUserGetConsecutiveSignInNumberRsp) Reset()         { *m = CSUserGetConsecutiveSignInNumberRsp{} }
func (m *CSUserGetConsecutiveSignInNumberRsp) String() string { return proto.CompactTextString(m) }
func (*CSUserGetConsecutiveSignInNumberRsp) ProtoMessage()    {}
func (*CSUserGetConsecutiveSignInNumberRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89}
}

func (m *CSUserGetConsecutiveSignInNumberRsp) GetConsecutiveSignInNumber() int32 {
	if m != nil && m.ConsecutiveSignInNumber != nil {
		return *m.ConsecutiveSignInNumber
	}
	return 0
}

func (m *CSUserGetConsecutiveSignInNumberRsp) GetHasSignIn() bool {
	if m != nil && m.HasSignIn != nil {
		return *m.HasSignIn
	}
	return false
}

type SignInRewardCfg struct {
	DayNumber        *int32      `protobuf:"varint,1,req,name=DayNumber" json:"DayNumber,omitempty"`
	Reward           *UserReward `protobuf:"bytes,2,req,name=Reward" json:"Reward,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *SignInRewardCfg) Reset()                    { *m = SignInRewardCfg{} }
func (m *SignInRewardCfg) String() string            { return proto.CompactTextString(m) }
func (*SignInRewardCfg) ProtoMessage()               {}
func (*SignInRewardCfg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *SignInRewardCfg) GetDayNumber() int32 {
	if m != nil && m.DayNumber != nil {
		return *m.DayNumber
	}
	return 0
}

func (m *SignInRewardCfg) GetReward() *UserReward {
	if m != nil {
		return m.Reward
	}
	return nil
}

type CSUserGetSignInRewardCfgRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetSignInRewardCfgRqst) Reset()                    { *m = CSUserGetSignInRewardCfgRqst{} }
func (m *CSUserGetSignInRewardCfgRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetSignInRewardCfgRqst) ProtoMessage()               {}
func (*CSUserGetSignInRewardCfgRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *CSUserGetSignInRewardCfgRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetSignInRewardCfgRsp struct {
	SignInReward     []*SignInRewardCfg `protobuf:"bytes,1,rep,name=SignInReward" json:"SignInReward,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CSUserGetSignInRewardCfgRsp) Reset()                    { *m = CSUserGetSignInRewardCfgRsp{} }
func (m *CSUserGetSignInRewardCfgRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetSignInRewardCfgRsp) ProtoMessage()               {}
func (*CSUserGetSignInRewardCfgRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *CSUserGetSignInRewardCfgRsp) GetSignInReward() []*SignInRewardCfg {
	if m != nil {
		return m.SignInReward
	}
	return nil
}

//
// enum USER_RECHARGE_PLATFORM
// {
// RECHARGE_PLATFORM_IOS = 1;
// RECHARGE_PLATFORM_WEIXIN = 2;
// RECHARGE_PLATFORM_WINDOWS = 3;
// }
type CSUserGetOrderRqst struct {
	GoodId           *uint32                 `protobuf:"varint,1,req,name=GoodId" json:"GoodId,omitempty"`
	ProuctFileHash   *string                 `protobuf:"bytes,2,req,name=ProuctFileHash" json:"ProuctFileHash,omitempty"`
	RechargePlatForm *USER_RECHARGE_PLATFORM `protobuf:"varint,3,req,name=RechargePlatForm,enum=rpc.USER_RECHARGE_PLATFORM" json:"RechargePlatForm,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CSUserGetOrderRqst) Reset()                    { *m = CSUserGetOrderRqst{} }
func (m *CSUserGetOrderRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetOrderRqst) ProtoMessage()               {}
func (*CSUserGetOrderRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *CSUserGetOrderRqst) GetGoodId() uint32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

func (m *CSUserGetOrderRqst) GetProuctFileHash() string {
	if m != nil && m.ProuctFileHash != nil {
		return *m.ProuctFileHash
	}
	return ""
}

func (m *CSUserGetOrderRqst) GetRechargePlatForm() USER_RECHARGE_PLATFORM {
	if m != nil && m.RechargePlatForm != nil {
		return *m.RechargePlatForm
	}
	return USER_RECHARGE_PLATFORM_RECHARGE_PLATFORM_IOS
}

type CSUserGetOrderRsp struct {
	GoodId           *uint32 `protobuf:"varint,1,req,name=GoodId" json:"GoodId,omitempty"`
	ServerOrderId    *string `protobuf:"bytes,2,req,name=ServerOrderId" json:"ServerOrderId,omitempty"`
	GoodMoney        *string `protobuf:"bytes,3,req,name=GoodMoney" json:"GoodMoney,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserGetOrderRsp) Reset()                    { *m = CSUserGetOrderRsp{} }
func (m *CSUserGetOrderRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetOrderRsp) ProtoMessage()               {}
func (*CSUserGetOrderRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *CSUserGetOrderRsp) GetGoodId() uint32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

func (m *CSUserGetOrderRsp) GetServerOrderId() string {
	if m != nil && m.ServerOrderId != nil {
		return *m.ServerOrderId
	}
	return ""
}

func (m *CSUserGetOrderRsp) GetGoodMoney() string {
	if m != nil && m.GoodMoney != nil {
		return *m.GoodMoney
	}
	return ""
}

type CSUserAuthRedeiptRqst struct {
	GoodId           *int32                  `protobuf:"varint,1,req,name=GoodId" json:"GoodId,omitempty"`
	BuyResult        *int32                  `protobuf:"varint,2,req,name=BuyResult" json:"BuyResult,omitempty"`
	RechargePlatForm *USER_RECHARGE_PLATFORM `protobuf:"varint,3,req,name=RechargePlatForm,enum=rpc.USER_RECHARGE_PLATFORM" json:"RechargePlatForm,omitempty"`
	ServerOrderId    *string                 `protobuf:"bytes,4,req,name=ServerOrderId" json:"ServerOrderId,omitempty"`
	ThirdPartRedeipt *string                 `protobuf:"bytes,5,req,name=ThirdPartRedeipt" json:"ThirdPartRedeipt,omitempty"`
	GoodMoney        *string                 `protobuf:"bytes,6,req,name=GoodMoney" json:"GoodMoney,omitempty"`
	ProuctFileHash   *string                 `protobuf:"bytes,7,req,name=ProuctFileHash" json:"ProuctFileHash,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CSUserAuthRedeiptRqst) Reset()                    { *m = CSUserAuthRedeiptRqst{} }
func (m *CSUserAuthRedeiptRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserAuthRedeiptRqst) ProtoMessage()               {}
func (*CSUserAuthRedeiptRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *CSUserAuthRedeiptRqst) GetGoodId() int32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

func (m *CSUserAuthRedeiptRqst) GetBuyResult() int32 {
	if m != nil && m.BuyResult != nil {
		return *m.BuyResult
	}
	return 0
}

func (m *CSUserAuthRedeiptRqst) GetRechargePlatForm() USER_RECHARGE_PLATFORM {
	if m != nil && m.RechargePlatForm != nil {
		return *m.RechargePlatForm
	}
	return USER_RECHARGE_PLATFORM_RECHARGE_PLATFORM_IOS
}

func (m *CSUserAuthRedeiptRqst) GetServerOrderId() string {
	if m != nil && m.ServerOrderId != nil {
		return *m.ServerOrderId
	}
	return ""
}

func (m *CSUserAuthRedeiptRqst) GetThirdPartRedeipt() string {
	if m != nil && m.ThirdPartRedeipt != nil {
		return *m.ThirdPartRedeipt
	}
	return ""
}

func (m *CSUserAuthRedeiptRqst) GetGoodMoney() string {
	if m != nil && m.GoodMoney != nil {
		return *m.GoodMoney
	}
	return ""
}

func (m *CSUserAuthRedeiptRqst) GetProuctFileHash() string {
	if m != nil && m.ProuctFileHash != nil {
		return *m.ProuctFileHash
	}
	return ""
}

type CSUserAuthRedeiptRsp struct {
	GoodId           *int32                `protobuf:"varint,1,req,name=GoodId" json:"GoodId,omitempty"`
	ResultType       *USER_RECHARGE_RESULT `protobuf:"varint,2,req,name=ResultType,enum=rpc.USER_RECHARGE_RESULT" json:"ResultType,omitempty"`
	ServerOrderId    *string               `protobuf:"bytes,3,req,name=ServerOrderId" json:"ServerOrderId,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CSUserAuthRedeiptRsp) Reset()                    { *m = CSUserAuthRedeiptRsp{} }
func (m *CSUserAuthRedeiptRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserAuthRedeiptRsp) ProtoMessage()               {}
func (*CSUserAuthRedeiptRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *CSUserAuthRedeiptRsp) GetGoodId() int32 {
	if m != nil && m.GoodId != nil {
		return *m.GoodId
	}
	return 0
}

func (m *CSUserAuthRedeiptRsp) GetResultType() USER_RECHARGE_RESULT {
	if m != nil && m.ResultType != nil {
		return *m.ResultType
	}
	return USER_RECHARGE_RESULT_RECHARGE_RESULT_NONE
}

func (m *CSUserAuthRedeiptRsp) GetServerOrderId() string {
	if m != nil && m.ServerOrderId != nil {
		return *m.ServerOrderId
	}
	return ""
}

type UserGoldRank struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=Uid" json:"Uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	Gold             *int64  `protobuf:"varint,3,req,name=Gold" json:"Gold,omitempty"`
	Avatar           *string `protobuf:"bytes,4,req,name=Avatar" json:"Avatar,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserGoldRank) Reset()                    { *m = UserGoldRank{} }
func (m *UserGoldRank) String() string            { return proto.CompactTextString(m) }
func (*UserGoldRank) ProtoMessage()               {}
func (*UserGoldRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *UserGoldRank) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *UserGoldRank) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *UserGoldRank) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *UserGoldRank) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

type CSUserGetGoldRankListRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetGoldRankListRqst) Reset()                    { *m = CSUserGetGoldRankListRqst{} }
func (m *CSUserGetGoldRankListRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetGoldRankListRqst) ProtoMessage()               {}
func (*CSUserGetGoldRankListRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *CSUserGetGoldRankListRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetGoldRankListRsp struct {
	RankList         []*UserGoldRank `protobuf:"bytes,1,rep,name=RankList" json:"RankList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserGetGoldRankListRsp) Reset()                    { *m = CSUserGetGoldRankListRsp{} }
func (m *CSUserGetGoldRankListRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetGoldRankListRsp) ProtoMessage()               {}
func (*CSUserGetGoldRankListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *CSUserGetGoldRankListRsp) GetRankList() []*UserGoldRank {
	if m != nil {
		return m.RankList
	}
	return nil
}

type UserWinCountRank struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=Uid" json:"Uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	WinCount         *uint64 `protobuf:"varint,3,req,name=WinCount" json:"WinCount,omitempty"`
	Avatar           *string `protobuf:"bytes,4,req,name=Avatar" json:"Avatar,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserWinCountRank) Reset()                    { *m = UserWinCountRank{} }
func (m *UserWinCountRank) String() string            { return proto.CompactTextString(m) }
func (*UserWinCountRank) ProtoMessage()               {}
func (*UserWinCountRank) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{100} }

func (m *UserWinCountRank) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *UserWinCountRank) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *UserWinCountRank) GetWinCount() uint64 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

func (m *UserWinCountRank) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

type CSUserGetWinCountRankListRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetWinCountRankListRqst) Reset()                    { *m = CSUserGetWinCountRankListRqst{} }
func (m *CSUserGetWinCountRankListRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetWinCountRankListRqst) ProtoMessage()               {}
func (*CSUserGetWinCountRankListRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{101} }

func (m *CSUserGetWinCountRankListRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetWinCountRankListRsp struct {
	RankList         []*UserWinCountRank `protobuf:"bytes,1,rep,name=RankList" json:"RankList,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserGetWinCountRankListRsp) Reset()                    { *m = CSUserGetWinCountRankListRsp{} }
func (m *CSUserGetWinCountRankListRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetWinCountRankListRsp) ProtoMessage()               {}
func (*CSUserGetWinCountRankListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{102} }

func (m *CSUserGetWinCountRankListRsp) GetRankList() []*UserWinCountRank {
	if m != nil {
		return m.RankList
	}
	return nil
}

type UserTaskInfo struct {
	Type             *GAME_TASK_TYPE      `protobuf:"varint,1,req,name=Type,enum=rpc.GAME_TASK_TYPE" json:"Type,omitempty"`
	Id               *int32               `protobuf:"varint,2,req,name=Id" json:"Id,omitempty"`
	Title            *string              `protobuf:"bytes,3,req,name=Title" json:"Title,omitempty"`
	Explain          *string              `protobuf:"bytes,4,req,name=Explain" json:"Explain,omitempty"`
	ConditionType    *TASK_CONDITION_TYPE `protobuf:"varint,5,req,name=ConditionType,enum=rpc.TASK_CONDITION_TYPE" json:"ConditionType,omitempty"`
	ConditionDetail  *int32               `protobuf:"varint,6,req,name=ConditionDetail" json:"ConditionDetail,omitempty"`
	Rewards          []*UserReward        `protobuf:"bytes,7,rep,name=Rewards" json:"Rewards,omitempty"`
	Count            *int32               `protobuf:"varint,8,req,name=Count" json:"Count,omitempty"`
	IsFinished       *bool                `protobuf:"varint,9,req,name=IsFinished" json:"IsFinished,omitempty"`
	FinishedTime     *uint64              `protobuf:"varint,10,req,name=FinishedTime" json:"FinishedTime,omitempty"`
	IsReceived       *bool                `protobuf:"varint,11,req,name=IsReceived" json:"IsReceived,omitempty"`
	BeginTime        *uint64              `protobuf:"varint,12,req,name=BeginTime" json:"BeginTime,omitempty"`
	EndTime          *uint64              `protobuf:"varint,13,req,name=EndTime" json:"EndTime,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *UserTaskInfo) Reset()                    { *m = UserTaskInfo{} }
func (m *UserTaskInfo) String() string            { return proto.CompactTextString(m) }
func (*UserTaskInfo) ProtoMessage()               {}
func (*UserTaskInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{103} }

func (m *UserTaskInfo) GetType() GAME_TASK_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return GAME_TASK_TYPE_GAME_TASK_TYPE_NONE
}

func (m *UserTaskInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *UserTaskInfo) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *UserTaskInfo) GetExplain() string {
	if m != nil && m.Explain != nil {
		return *m.Explain
	}
	return ""
}

func (m *UserTaskInfo) GetConditionType() TASK_CONDITION_TYPE {
	if m != nil && m.ConditionType != nil {
		return *m.ConditionType
	}
	return TASK_CONDITION_TYPE_TASK_CONDITION_TYPE_NONE
}

func (m *UserTaskInfo) GetConditionDetail() int32 {
	if m != nil && m.ConditionDetail != nil {
		return *m.ConditionDetail
	}
	return 0
}

func (m *UserTaskInfo) GetRewards() []*UserReward {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *UserTaskInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *UserTaskInfo) GetIsFinished() bool {
	if m != nil && m.IsFinished != nil {
		return *m.IsFinished
	}
	return false
}

func (m *UserTaskInfo) GetFinishedTime() uint64 {
	if m != nil && m.FinishedTime != nil {
		return *m.FinishedTime
	}
	return 0
}

func (m *UserTaskInfo) GetIsReceived() bool {
	if m != nil && m.IsReceived != nil {
		return *m.IsReceived
	}
	return false
}

func (m *UserTaskInfo) GetBeginTime() uint64 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *UserTaskInfo) GetEndTime() uint64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type CSUserTasks struct {
	Tasks            []*UserTaskInfo `protobuf:"bytes,1,rep,name=Tasks" json:"Tasks,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserTasks) Reset()                    { *m = CSUserTasks{} }
func (m *CSUserTasks) String() string            { return proto.CompactTextString(m) }
func (*CSUserTasks) ProtoMessage()               {}
func (*CSUserTasks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *CSUserTasks) GetTasks() []*UserTaskInfo {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type CSUserGetAllDailyTasksRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetAllDailyTasksRqst) Reset()                    { *m = CSUserGetAllDailyTasksRqst{} }
func (m *CSUserGetAllDailyTasksRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetAllDailyTasksRqst) ProtoMessage()               {}
func (*CSUserGetAllDailyTasksRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *CSUserGetAllDailyTasksRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetAllAchievementTasksRqst struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserGetAllAchievementTasksRqst) Reset()         { *m = CSUserGetAllAchievementTasksRqst{} }
func (m *CSUserGetAllAchievementTasksRqst) String() string { return proto.CompactTextString(m) }
func (*CSUserGetAllAchievementTasksRqst) ProtoMessage()    {}
func (*CSUserGetAllAchievementTasksRqst) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{106}
}

func (m *CSUserGetAllAchievementTasksRqst) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetTaskRewardRqst struct {
	TaskType         *GAME_TASK_TYPE `protobuf:"varint,1,req,name=TaskType,enum=rpc.GAME_TASK_TYPE" json:"TaskType,omitempty"`
	TaskId           *int32          `protobuf:"varint,2,req,name=TaskId" json:"TaskId,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserGetTaskRewardRqst) Reset()                    { *m = CSUserGetTaskRewardRqst{} }
func (m *CSUserGetTaskRewardRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetTaskRewardRqst) ProtoMessage()               {}
func (*CSUserGetTaskRewardRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *CSUserGetTaskRewardRqst) GetTaskType() GAME_TASK_TYPE {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return GAME_TASK_TYPE_GAME_TASK_TYPE_NONE
}

func (m *CSUserGetTaskRewardRqst) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

type CSUserGetTaskRewardRsp struct {
	Task             *UserTaskInfo `protobuf:"bytes,1,req,name=Task" json:"Task,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CSUserGetTaskRewardRsp) Reset()                    { *m = CSUserGetTaskRewardRsp{} }
func (m *CSUserGetTaskRewardRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetTaskRewardRsp) ProtoMessage()               {}
func (*CSUserGetTaskRewardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *CSUserGetTaskRewardRsp) GetTask() *UserTaskInfo {
	if m != nil {
		return m.Task
	}
	return nil
}

// 注册请求
type CSUserRegAccountRqst struct {
	NickName         *string `protobuf:"bytes,1,req,name=NickName" json:"NickName,omitempty"`
	PassWordHash     []byte  `protobuf:"bytes,2,req,name=PassWordHash" json:"PassWordHash,omitempty"`
	PhoneNum         *string `protobuf:"bytes,3,req,name=PhoneNum" json:"PhoneNum,omitempty"`
	VerificationCode *string `protobuf:"bytes,4,req,name=VerificationCode" json:"VerificationCode,omitempty"`
	Sex              *uint32 `protobuf:"varint,5,req,name=Sex" json:"Sex,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserRegAccountRqst) Reset()                    { *m = CSUserRegAccountRqst{} }
func (m *CSUserRegAccountRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserRegAccountRqst) ProtoMessage()               {}
func (*CSUserRegAccountRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *CSUserRegAccountRqst) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *CSUserRegAccountRqst) GetPassWordHash() []byte {
	if m != nil {
		return m.PassWordHash
	}
	return nil
}

func (m *CSUserRegAccountRqst) GetPhoneNum() string {
	if m != nil && m.PhoneNum != nil {
		return *m.PhoneNum
	}
	return ""
}

func (m *CSUserRegAccountRqst) GetVerificationCode() string {
	if m != nil && m.VerificationCode != nil {
		return *m.VerificationCode
	}
	return ""
}

func (m *CSUserRegAccountRqst) GetSex() uint32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

// 注册响应
type CSUserRegAccountRsp struct {
	Result           *RESULT_TYPE `protobuf:"varint,1,req,name=Result,enum=rpc.RESULT_TYPE" json:"Result,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CSUserRegAccountRsp) Reset()                    { *m = CSUserRegAccountRsp{} }
func (m *CSUserRegAccountRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserRegAccountRsp) ProtoMessage()               {}
func (*CSUserRegAccountRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *CSUserRegAccountRsp) GetResult() RESULT_TYPE {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return RESULT_TYPE_RESULT_TYPE_SUCCESS
}

// 正常注册后的登录
type NormalAuthMsg struct {
	PhoneNum         *string `protobuf:"bytes,1,req,name=PhoneNum" json:"PhoneNum,omitempty"`
	PassWordHash     []byte  `protobuf:"bytes,2,req,name=PassWordHash" json:"PassWordHash,omitempty"`
	AppId            *uint32 `protobuf:"varint,3,req,name=AppId" json:"AppId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NormalAuthMsg) Reset()                    { *m = NormalAuthMsg{} }
func (m *NormalAuthMsg) String() string            { return proto.CompactTextString(m) }
func (*NormalAuthMsg) ProtoMessage()               {}
func (*NormalAuthMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *NormalAuthMsg) GetPhoneNum() string {
	if m != nil && m.PhoneNum != nil {
		return *m.PhoneNum
	}
	return ""
}

func (m *NormalAuthMsg) GetPassWordHash() []byte {
	if m != nil {
		return m.PassWordHash
	}
	return nil
}

func (m *NormalAuthMsg) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

// 腾讯登录
type TencentAuthMsg struct {
	TencentToken     *string `protobuf:"bytes,1,opt,name=TencentToken" json:"TencentToken,omitempty"`
	TencentOpenId    *string `protobuf:"bytes,2,opt,name=TencentOpenId" json:"TencentOpenId,omitempty"`
	TencentCodeId    *string `protobuf:"bytes,3,opt,name=TencentCodeId" json:"TencentCodeId,omitempty"`
	AppId            *uint32 `protobuf:"varint,4,req,name=AppId" json:"AppId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TencentAuthMsg) Reset()                    { *m = TencentAuthMsg{} }
func (m *TencentAuthMsg) String() string            { return proto.CompactTextString(m) }
func (*TencentAuthMsg) ProtoMessage()               {}
func (*TencentAuthMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *TencentAuthMsg) GetTencentToken() string {
	if m != nil && m.TencentToken != nil {
		return *m.TencentToken
	}
	return ""
}

func (m *TencentAuthMsg) GetTencentOpenId() string {
	if m != nil && m.TencentOpenId != nil {
		return *m.TencentOpenId
	}
	return ""
}

func (m *TencentAuthMsg) GetTencentCodeId() string {
	if m != nil && m.TencentCodeId != nil {
		return *m.TencentCodeId
	}
	return ""
}

func (m *TencentAuthMsg) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

// 游客登陆
type VisitorAuthMsg struct {
	MachineCode      *string `protobuf:"bytes,1,req,name=MachineCode" json:"MachineCode,omitempty"`
	AppId            *uint32 `protobuf:"varint,2,req,name=AppId" json:"AppId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *VisitorAuthMsg) Reset()                    { *m = VisitorAuthMsg{} }
func (m *VisitorAuthMsg) String() string            { return proto.CompactTextString(m) }
func (*VisitorAuthMsg) ProtoMessage()               {}
func (*VisitorAuthMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *VisitorAuthMsg) GetMachineCode() string {
	if m != nil && m.MachineCode != nil {
		return *m.MachineCode
	}
	return ""
}

func (m *VisitorAuthMsg) GetAppId() uint32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

// 认证请求
type CSUserAuthAccountRqst struct {
	Identity         *USER_IDENTITY_TYPE `protobuf:"varint,1,req,name=Identity,enum=rpc.USER_IDENTITY_TYPE" json:"Identity,omitempty"`
	UserNormalAuth   *NormalAuthMsg      `protobuf:"bytes,2,opt,name=UserNormalAuth" json:"UserNormalAuth,omitempty"`
	UserVisitorAuth  *VisitorAuthMsg     `protobuf:"bytes,3,opt,name=UserVisitorAuth" json:"UserVisitorAuth,omitempty"`
	UserTencentAuth  *TencentAuthMsg     `protobuf:"bytes,4,opt,name=UserTencentAuth" json:"UserTencentAuth,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserAuthAccountRqst) Reset()                    { *m = CSUserAuthAccountRqst{} }
func (m *CSUserAuthAccountRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserAuthAccountRqst) ProtoMessage()               {}
func (*CSUserAuthAccountRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *CSUserAuthAccountRqst) GetIdentity() USER_IDENTITY_TYPE {
	if m != nil && m.Identity != nil {
		return *m.Identity
	}
	return USER_IDENTITY_TYPE_IDENTITY_TYPE_NORMAL
}

func (m *CSUserAuthAccountRqst) GetUserNormalAuth() *NormalAuthMsg {
	if m != nil {
		return m.UserNormalAuth
	}
	return nil
}

func (m *CSUserAuthAccountRqst) GetUserVisitorAuth() *VisitorAuthMsg {
	if m != nil {
		return m.UserVisitorAuth
	}
	return nil
}

func (m *CSUserAuthAccountRqst) GetUserTencentAuth() *TencentAuthMsg {
	if m != nil {
		return m.UserTencentAuth
	}
	return nil
}

// 认证响应
type CSUserAuthAccountRsp struct {
	Result           *RESULT_TYPE    `protobuf:"varint,1,req,name=Result,enum=rpc.RESULT_TYPE" json:"Result,omitempty"`
	Token            []byte          `protobuf:"bytes,2,req,name=Token" json:"Token,omitempty"`
	UserId           *uint64         `protobuf:"varint,3,req,name=UserId" json:"UserId,omitempty"`
	TencentAuthRsp   *TencentAuthMsg `protobuf:"bytes,4,opt,name=TencentAuthRsp" json:"TencentAuthRsp,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserAuthAccountRsp) Reset()                    { *m = CSUserAuthAccountRsp{} }
func (m *CSUserAuthAccountRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserAuthAccountRsp) ProtoMessage()               {}
func (*CSUserAuthAccountRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *CSUserAuthAccountRsp) GetResult() RESULT_TYPE {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return RESULT_TYPE_RESULT_TYPE_SUCCESS
}

func (m *CSUserAuthAccountRsp) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CSUserAuthAccountRsp) GetUserId() uint64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CSUserAuthAccountRsp) GetTencentAuthRsp() *TencentAuthMsg {
	if m != nil {
		return m.TencentAuthRsp
	}
	return nil
}

// 修改密码请求
type CSUserChangePasswordRqst struct {
	PhoneNum         *string `protobuf:"bytes,1,req,name=PhoneNum" json:"PhoneNum,omitempty"`
	NewPassWordHash  []byte  `protobuf:"bytes,2,req,name=NewPassWordHash" json:"NewPassWordHash,omitempty"`
	VerificationCode *string `protobuf:"bytes,3,req,name=VerificationCode" json:"VerificationCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserChangePasswordRqst) Reset()                    { *m = CSUserChangePasswordRqst{} }
func (m *CSUserChangePasswordRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserChangePasswordRqst) ProtoMessage()               {}
func (*CSUserChangePasswordRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *CSUserChangePasswordRqst) GetPhoneNum() string {
	if m != nil && m.PhoneNum != nil {
		return *m.PhoneNum
	}
	return ""
}

func (m *CSUserChangePasswordRqst) GetNewPassWordHash() []byte {
	if m != nil {
		return m.NewPassWordHash
	}
	return nil
}

func (m *CSUserChangePasswordRqst) GetVerificationCode() string {
	if m != nil && m.VerificationCode != nil {
		return *m.VerificationCode
	}
	return ""
}

// 修改密码响应
type CSUserChangePasswordRsp struct {
	Result           *RESULT_TYPE `protobuf:"varint,1,req,name=Result,enum=rpc.RESULT_TYPE" json:"Result,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CSUserChangePasswordRsp) Reset()                    { *m = CSUserChangePasswordRsp{} }
func (m *CSUserChangePasswordRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserChangePasswordRsp) ProtoMessage()               {}
func (*CSUserChangePasswordRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *CSUserChangePasswordRsp) GetResult() RESULT_TYPE {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return RESULT_TYPE_RESULT_TYPE_SUCCESS
}

// CS_CMD_USER_CONNECT_SWITCH_NOTIFY = 64;//连接切换通知
type CSUserConnectSwitchNotify struct {
	NewConnectIp     *uint32 `protobuf:"varint,1,req,name=NewConnectIp" json:"NewConnectIp,omitempty"`
	NewPort          *uint32 `protobuf:"varint,2,req,name=NewPort" json:"NewPort,omitempty"`
	OldConnectIp     *uint32 `protobuf:"varint,3,req,name=OldConnectIp" json:"OldConnectIp,omitempty"`
	OldPort          *uint32 `protobuf:"varint,4,req,name=OldPort" json:"OldPort,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserConnectSwitchNotify) Reset()                    { *m = CSUserConnectSwitchNotify{} }
func (m *CSUserConnectSwitchNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserConnectSwitchNotify) ProtoMessage()               {}
func (*CSUserConnectSwitchNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *CSUserConnectSwitchNotify) GetNewConnectIp() uint32 {
	if m != nil && m.NewConnectIp != nil {
		return *m.NewConnectIp
	}
	return 0
}

func (m *CSUserConnectSwitchNotify) GetNewPort() uint32 {
	if m != nil && m.NewPort != nil {
		return *m.NewPort
	}
	return 0
}

func (m *CSUserConnectSwitchNotify) GetOldConnectIp() uint32 {
	if m != nil && m.OldConnectIp != nil {
		return *m.OldConnectIp
	}
	return 0
}

func (m *CSUserConnectSwitchNotify) GetOldPort() uint32 {
	if m != nil && m.OldPort != nil {
		return *m.OldPort
	}
	return 0
}

// CS_CMD_USER_MATCH_RECORD_LIST = 65;//请求比赛战绩列表
type CSUserMatchRecordListRqst struct {
	StartRecord      *uint32 `protobuf:"varint,1,req,name=StartRecord" json:"StartRecord,omitempty"`
	RecordNum        *uint32 `protobuf:"varint,2,req,name=RecordNum" json:"RecordNum,omitempty"`
	IsClubMatch      *bool   `protobuf:"varint,3,req,name=IsClubMatch" json:"IsClubMatch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserMatchRecordListRqst) Reset()                    { *m = CSUserMatchRecordListRqst{} }
func (m *CSUserMatchRecordListRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserMatchRecordListRqst) ProtoMessage()               {}
func (*CSUserMatchRecordListRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *CSUserMatchRecordListRqst) GetStartRecord() uint32 {
	if m != nil && m.StartRecord != nil {
		return *m.StartRecord
	}
	return 0
}

func (m *CSUserMatchRecordListRqst) GetRecordNum() uint32 {
	if m != nil && m.RecordNum != nil {
		return *m.RecordNum
	}
	return 0
}

func (m *CSUserMatchRecordListRqst) GetIsClubMatch() bool {
	if m != nil && m.IsClubMatch != nil {
		return *m.IsClubMatch
	}
	return false
}

type CSMatchRecordInfo struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	ClubId           *uint32    `protobuf:"varint,3,req,name=ClubId" json:"ClubId,omitempty"`
	MatchTime        *uint64    `protobuf:"varint,4,req,name=MatchTime" json:"MatchTime,omitempty"`
	UserNick         []string   `protobuf:"bytes,5,rep,name=UserNick" json:"UserNick,omitempty"`
	UserWinValue     []int32    `protobuf:"varint,6,rep,name=UserWinValue" json:"UserWinValue,omitempty"`
	SettlementId     *uint64    `protobuf:"varint,7,req,name=SettlementId" json:"SettlementId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSMatchRecordInfo) Reset()                    { *m = CSMatchRecordInfo{} }
func (m *CSMatchRecordInfo) String() string            { return proto.CompactTextString(m) }
func (*CSMatchRecordInfo) ProtoMessage()               {}
func (*CSMatchRecordInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *CSMatchRecordInfo) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSMatchRecordInfo) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSMatchRecordInfo) GetClubId() uint32 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

func (m *CSMatchRecordInfo) GetMatchTime() uint64 {
	if m != nil && m.MatchTime != nil {
		return *m.MatchTime
	}
	return 0
}

func (m *CSMatchRecordInfo) GetUserNick() []string {
	if m != nil {
		return m.UserNick
	}
	return nil
}

func (m *CSMatchRecordInfo) GetUserWinValue() []int32 {
	if m != nil {
		return m.UserWinValue
	}
	return nil
}

func (m *CSMatchRecordInfo) GetSettlementId() uint64 {
	if m != nil && m.SettlementId != nil {
		return *m.SettlementId
	}
	return 0
}

type CSUserMatchRecordListRsp struct {
	StartRecord      *uint32              `protobuf:"varint,1,req,name=StartRecord" json:"StartRecord,omitempty"`
	RecordNum        *uint32              `protobuf:"varint,2,req,name=RecordNum" json:"RecordNum,omitempty"`
	TotalRecordNum   *uint32              `protobuf:"varint,3,req,name=TotalRecordNum" json:"TotalRecordNum,omitempty"`
	MatchRecordInfos []*CSMatchRecordInfo `protobuf:"bytes,4,rep,name=MatchRecordInfos" json:"MatchRecordInfos,omitempty"`
	IsClubMatch      *bool                `protobuf:"varint,5,req,name=IsClubMatch" json:"IsClubMatch,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CSUserMatchRecordListRsp) Reset()                    { *m = CSUserMatchRecordListRsp{} }
func (m *CSUserMatchRecordListRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserMatchRecordListRsp) ProtoMessage()               {}
func (*CSUserMatchRecordListRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *CSUserMatchRecordListRsp) GetStartRecord() uint32 {
	if m != nil && m.StartRecord != nil {
		return *m.StartRecord
	}
	return 0
}

func (m *CSUserMatchRecordListRsp) GetRecordNum() uint32 {
	if m != nil && m.RecordNum != nil {
		return *m.RecordNum
	}
	return 0
}

func (m *CSUserMatchRecordListRsp) GetTotalRecordNum() uint32 {
	if m != nil && m.TotalRecordNum != nil {
		return *m.TotalRecordNum
	}
	return 0
}

func (m *CSUserMatchRecordListRsp) GetMatchRecordInfos() []*CSMatchRecordInfo {
	if m != nil {
		return m.MatchRecordInfos
	}
	return nil
}

func (m *CSUserMatchRecordListRsp) GetIsClubMatch() bool {
	if m != nil && m.IsClubMatch != nil {
		return *m.IsClubMatch
	}
	return false
}

type CSSystemMsgInfo struct {
	Id               *uint32 `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	MsgBody          *string `protobuf:"bytes,2,req,name=MsgBody" json:"MsgBody,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSSystemMsgInfo) Reset()                    { *m = CSSystemMsgInfo{} }
func (m *CSSystemMsgInfo) String() string            { return proto.CompactTextString(m) }
func (*CSSystemMsgInfo) ProtoMessage()               {}
func (*CSSystemMsgInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *CSSystemMsgInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CSSystemMsgInfo) GetMsgBody() string {
	if m != nil && m.MsgBody != nil {
		return *m.MsgBody
	}
	return ""
}

// CS_CMD_SYSTEM_MSG_NOTIFY = 66;//系统消息通知
type CSSystemMsgNotify struct {
	SystemMsgs       []*CSSystemMsgInfo `protobuf:"bytes,1,rep,name=SystemMsgs" json:"SystemMsgs,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CSSystemMsgNotify) Reset()                    { *m = CSSystemMsgNotify{} }
func (m *CSSystemMsgNotify) String() string            { return proto.CompactTextString(m) }
func (*CSSystemMsgNotify) ProtoMessage()               {}
func (*CSSystemMsgNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *CSSystemMsgNotify) GetSystemMsgs() []*CSSystemMsgInfo {
	if m != nil {
		return m.SystemMsgs
	}
	return nil
}

// CS_CMD_USER_DIAMOND_TO_GOLD = 67;//钻石转金币
type CSUserDiamondToGoldRqst struct {
	Id               *int32 `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserDiamondToGoldRqst) Reset()                    { *m = CSUserDiamondToGoldRqst{} }
func (m *CSUserDiamondToGoldRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserDiamondToGoldRqst) ProtoMessage()               {}
func (*CSUserDiamondToGoldRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *CSUserDiamondToGoldRqst) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// CS_CMD_USER_MJ_HUAN_SAN_ZHANG_NOTIFY = 69;//换三张结果通知
type CSUserMjHuanSanZhangNotify struct {
	HuanType         *TASK_HSZ_TYPE `protobuf:"varint,1,req,name=HuanType,enum=rpc.TASK_HSZ_TYPE" json:"HuanType,omitempty"`
	SeatId           *uint32        `protobuf:"varint,2,req,name=SeatId" json:"SeatId,omitempty"`
	HuanCards        []uint32       `protobuf:"varint,3,rep,name=HuanCards" json:"HuanCards,omitempty"`
	HuanInCards      []uint32       `protobuf:"varint,4,rep,name=HuanInCards" json:"HuanInCards,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CSUserMjHuanSanZhangNotify) Reset()                    { *m = CSUserMjHuanSanZhangNotify{} }
func (m *CSUserMjHuanSanZhangNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjHuanSanZhangNotify) ProtoMessage()               {}
func (*CSUserMjHuanSanZhangNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *CSUserMjHuanSanZhangNotify) GetHuanType() TASK_HSZ_TYPE {
	if m != nil && m.HuanType != nil {
		return *m.HuanType
	}
	return TASK_HSZ_TYPE_TASK_HSZ_TYPE_NONE
}

func (m *CSUserMjHuanSanZhangNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserMjHuanSanZhangNotify) GetHuanCards() []uint32 {
	if m != nil {
		return m.HuanCards
	}
	return nil
}

func (m *CSUserMjHuanSanZhangNotify) GetHuanInCards() []uint32 {
	if m != nil {
		return m.HuanInCards
	}
	return nil
}

type CSUserDiamondToGoldRsp struct {
	Reserved         *int32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSUserDiamondToGoldRsp) Reset()                    { *m = CSUserDiamondToGoldRsp{} }
func (m *CSUserDiamondToGoldRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserDiamondToGoldRsp) ProtoMessage()               {}
func (*CSUserDiamondToGoldRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *CSUserDiamondToGoldRsp) GetReserved() int32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

// CS_CMD_USER_RECONNECT_ENTER_ROOM = 70; //重连进入房间
// 进入房间
type CSUserReconnectEnterRoomRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	Longitude        *uint32    `protobuf:"varint,3,req,name=Longitude" json:"Longitude,omitempty"`
	Latitude         *uint32    `protobuf:"varint,4,req,name=Latitude" json:"Latitude,omitempty"`
	Uid              *uint64    `protobuf:"varint,5,req,name=Uid" json:"Uid,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserReconnectEnterRoomRqst) Reset()                    { *m = CSUserReconnectEnterRoomRqst{} }
func (m *CSUserReconnectEnterRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserReconnectEnterRoomRqst) ProtoMessage()               {}
func (*CSUserReconnectEnterRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *CSUserReconnectEnterRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserReconnectEnterRoomRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserReconnectEnterRoomRqst) GetLongitude() uint32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *CSUserReconnectEnterRoomRqst) GetLatitude() uint32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *CSUserReconnectEnterRoomRqst) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type CSUserReconnectEnterRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserReconnectEnterRoomRsp) Reset()                    { *m = CSUserReconnectEnterRoomRsp{} }
func (m *CSUserReconnectEnterRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserReconnectEnterRoomRsp) ProtoMessage()               {}
func (*CSUserReconnectEnterRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *CSUserReconnectEnterRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserReconnectEnterRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// CS_CMD_USER_LAST_GAME_INFO_NOTIFY
type UserLastGameInfo struct {
	SeatId           *uint32             `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	TotalRecord      *int32              `protobuf:"varint,2,req,name=TotalRecord" json:"TotalRecord,omitempty"`
	RejectSuit       *uint32             `protobuf:"varint,3,req,name=RejectSuit" json:"RejectSuit,omitempty"`
	HuCard           *uint32             `protobuf:"varint,4,req,name=HuCard" json:"HuCard,omitempty"`
	DealCards        []uint32            `protobuf:"varint,5,rep,name=DealCards" json:"DealCards,omitempty"`
	HandCards        []uint32            `protobuf:"varint,6,rep,name=HandCards" json:"HandCards,omitempty"`
	MingCards        []uint32            `protobuf:"varint,7,rep,name=MingCards" json:"MingCards,omitempty"`
	AnGangCards      []uint32            `protobuf:"varint,8,rep,name=AnGangCards" json:"AnGangCards,omitempty"`
	BuGangCards      []uint32            `protobuf:"varint,9,rep,name=BuGangCards" json:"BuGangCards,omitempty"`
	PengCards        []uint32            `protobuf:"varint,10,rep,name=PengCards" json:"PengCards,omitempty"`
	SettlementType   *MJ_SETTLEMENT_TYPE `protobuf:"varint,11,req,name=SettlementType,enum=rpc.MJ_SETTLEMENT_TYPE" json:"SettlementType,omitempty"`
	SettlementInfo   []*MjSettlementInfo `protobuf:"bytes,12,rep,name=SettlementInfo" json:"SettlementInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *UserLastGameInfo) Reset()                    { *m = UserLastGameInfo{} }
func (m *UserLastGameInfo) String() string            { return proto.CompactTextString(m) }
func (*UserLastGameInfo) ProtoMessage()               {}
func (*UserLastGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *UserLastGameInfo) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *UserLastGameInfo) GetTotalRecord() int32 {
	if m != nil && m.TotalRecord != nil {
		return *m.TotalRecord
	}
	return 0
}

func (m *UserLastGameInfo) GetRejectSuit() uint32 {
	if m != nil && m.RejectSuit != nil {
		return *m.RejectSuit
	}
	return 0
}

func (m *UserLastGameInfo) GetHuCard() uint32 {
	if m != nil && m.HuCard != nil {
		return *m.HuCard
	}
	return 0
}

func (m *UserLastGameInfo) GetDealCards() []uint32 {
	if m != nil {
		return m.DealCards
	}
	return nil
}

func (m *UserLastGameInfo) GetHandCards() []uint32 {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *UserLastGameInfo) GetMingCards() []uint32 {
	if m != nil {
		return m.MingCards
	}
	return nil
}

func (m *UserLastGameInfo) GetAnGangCards() []uint32 {
	if m != nil {
		return m.AnGangCards
	}
	return nil
}

func (m *UserLastGameInfo) GetBuGangCards() []uint32 {
	if m != nil {
		return m.BuGangCards
	}
	return nil
}

func (m *UserLastGameInfo) GetPengCards() []uint32 {
	if m != nil {
		return m.PengCards
	}
	return nil
}

func (m *UserLastGameInfo) GetSettlementType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.SettlementType != nil {
		return *m.SettlementType
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

func (m *UserLastGameInfo) GetSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.SettlementInfo
	}
	return nil
}

type CSUserLastGameInfoNotify struct {
	ZhuangSeatId     *uint32             `protobuf:"varint,1,req,name=ZhuangSeatId" json:"ZhuangSeatId,omitempty"`
	RemainCardNum    *uint32             `protobuf:"varint,2,req,name=RemainCardNum" json:"RemainCardNum,omitempty"`
	LastGameInfo     []*UserLastGameInfo `protobuf:"bytes,3,rep,name=LastGameInfo" json:"LastGameInfo,omitempty"`
	SettlementId     *uint64             `protobuf:"varint,4,req,name=SettlementId" json:"SettlementId,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserLastGameInfoNotify) Reset()                    { *m = CSUserLastGameInfoNotify{} }
func (m *CSUserLastGameInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserLastGameInfoNotify) ProtoMessage()               {}
func (*CSUserLastGameInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *CSUserLastGameInfoNotify) GetZhuangSeatId() uint32 {
	if m != nil && m.ZhuangSeatId != nil {
		return *m.ZhuangSeatId
	}
	return 0
}

func (m *CSUserLastGameInfoNotify) GetRemainCardNum() uint32 {
	if m != nil && m.RemainCardNum != nil {
		return *m.RemainCardNum
	}
	return 0
}

func (m *CSUserLastGameInfoNotify) GetLastGameInfo() []*UserLastGameInfo {
	if m != nil {
		return m.LastGameInfo
	}
	return nil
}

func (m *CSUserLastGameInfoNotify) GetSettlementId() uint64 {
	if m != nil && m.SettlementId != nil {
		return *m.SettlementId
	}
	return 0
}

type UserSingleBoardInfo struct {
	WinValue         *int32 `protobuf:"varint,1,req,name=WinValue" json:"WinValue,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UserSingleBoardInfo) Reset()                    { *m = UserSingleBoardInfo{} }
func (m *UserSingleBoardInfo) String() string            { return proto.CompactTextString(m) }
func (*UserSingleBoardInfo) ProtoMessage()               {}
func (*UserSingleBoardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *UserSingleBoardInfo) GetWinValue() int32 {
	if m != nil && m.WinValue != nil {
		return *m.WinValue
	}
	return 0
}

type CSUserAlreadyFinishGameInfoNotify struct {
	SingleBoardInfo  []*UserSingleBoardInfo `protobuf:"bytes,1,rep,name=SingleBoardInfo" json:"SingleBoardInfo,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CSUserAlreadyFinishGameInfoNotify) Reset()         { *m = CSUserAlreadyFinishGameInfoNotify{} }
func (m *CSUserAlreadyFinishGameInfoNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserAlreadyFinishGameInfoNotify) ProtoMessage()    {}
func (*CSUserAlreadyFinishGameInfoNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{132}
}

func (m *CSUserAlreadyFinishGameInfoNotify) GetSingleBoardInfo() []*UserSingleBoardInfo {
	if m != nil {
		return m.SingleBoardInfo
	}
	return nil
}

// CS_CMD_USER_TABLE_READY_SHUT_DOWN_NOTIFY = 72;// 通知准备维护信息
type CSUserTableReadyShutDownNotify struct {
	ReadyShutDown        *bool   `protobuf:"varint,1,req,name=ReadyShutDown" json:"ReadyShutDown,omitempty"`
	ReadyShutDwonTimeOut *uint32 `protobuf:"varint,2,req,name=ReadyShutDwonTimeOut" json:"ReadyShutDwonTimeOut,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *CSUserTableReadyShutDownNotify) Reset()         { *m = CSUserTableReadyShutDownNotify{} }
func (m *CSUserTableReadyShutDownNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserTableReadyShutDownNotify) ProtoMessage()    {}
func (*CSUserTableReadyShutDownNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{133}
}

func (m *CSUserTableReadyShutDownNotify) GetReadyShutDown() bool {
	if m != nil && m.ReadyShutDown != nil {
		return *m.ReadyShutDown
	}
	return false
}

func (m *CSUserTableReadyShutDownNotify) GetReadyShutDwonTimeOut() uint32 {
	if m != nil && m.ReadyShutDwonTimeOut != nil {
		return *m.ReadyShutDwonTimeOut
	}
	return 0
}

type BuyRecordContext struct {
	ProductCount     *uint64 `protobuf:"varint,1,req,name=ProductCount" json:"ProductCount,omitempty"`
	ProductPrice     *uint64 `protobuf:"varint,2,req,name=ProductPrice" json:"ProductPrice,omitempty"`
	ProductBuyTime   *uint64 `protobuf:"varint,3,req,name=ProductBuyTime" json:"ProductBuyTime,omitempty"`
	ServerOrderId    *string `protobuf:"bytes,4,req,name=ServerOrderId" json:"ServerOrderId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BuyRecordContext) Reset()                    { *m = BuyRecordContext{} }
func (m *BuyRecordContext) String() string            { return proto.CompactTextString(m) }
func (*BuyRecordContext) ProtoMessage()               {}
func (*BuyRecordContext) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *BuyRecordContext) GetProductCount() uint64 {
	if m != nil && m.ProductCount != nil {
		return *m.ProductCount
	}
	return 0
}

func (m *BuyRecordContext) GetProductPrice() uint64 {
	if m != nil && m.ProductPrice != nil {
		return *m.ProductPrice
	}
	return 0
}

func (m *BuyRecordContext) GetProductBuyTime() uint64 {
	if m != nil && m.ProductBuyTime != nil {
		return *m.ProductBuyTime
	}
	return 0
}

func (m *BuyRecordContext) GetServerOrderId() string {
	if m != nil && m.ServerOrderId != nil {
		return *m.ServerOrderId
	}
	return ""
}

// get buy Record
type CSUserGetBuyRecordRqst struct {
	BeginIndex       *uint32 `protobuf:"varint,1,req,name=BeginIndex" json:"BeginIndex,omitempty"`
	Size             *uint32 `protobuf:"varint,2,req,name=Size" json:"Size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserGetBuyRecordRqst) Reset()                    { *m = CSUserGetBuyRecordRqst{} }
func (m *CSUserGetBuyRecordRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetBuyRecordRqst) ProtoMessage()               {}
func (*CSUserGetBuyRecordRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *CSUserGetBuyRecordRqst) GetBeginIndex() uint32 {
	if m != nil && m.BeginIndex != nil {
		return *m.BeginIndex
	}
	return 0
}

func (m *CSUserGetBuyRecordRqst) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type CSUserGetBuyRecordRsp struct {
	BeginIndex       *uint32             `protobuf:"varint,1,req,name=BeginIndex" json:"BeginIndex,omitempty"`
	Size             *uint32             `protobuf:"varint,2,req,name=Size" json:"Size,omitempty"`
	BuyContext       []*BuyRecordContext `protobuf:"bytes,3,rep,name=BuyContext" json:"BuyContext,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserGetBuyRecordRsp) Reset()                    { *m = CSUserGetBuyRecordRsp{} }
func (m *CSUserGetBuyRecordRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetBuyRecordRsp) ProtoMessage()               {}
func (*CSUserGetBuyRecordRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *CSUserGetBuyRecordRsp) GetBeginIndex() uint32 {
	if m != nil && m.BeginIndex != nil {
		return *m.BeginIndex
	}
	return 0
}

func (m *CSUserGetBuyRecordRsp) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CSUserGetBuyRecordRsp) GetBuyContext() []*BuyRecordContext {
	if m != nil {
		return m.BuyContext
	}
	return nil
}

type UserGameInitInfo struct {
	SeatId           *uint32  `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	RejectSuit       *uint32  `protobuf:"varint,2,req,name=RejectSuit" json:"RejectSuit,omitempty"`
	InitHandCards    []uint32 `protobuf:"varint,3,rep,name=InitHandCards" json:"InitHandCards,omitempty"`
	HuanCards        []uint32 `protobuf:"varint,4,rep,name=HuanCards" json:"HuanCards,omitempty"`
	HuanInCards      []uint32 `protobuf:"varint,5,rep,name=HuanInCards" json:"HuanInCards,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UserGameInitInfo) Reset()                    { *m = UserGameInitInfo{} }
func (m *UserGameInitInfo) String() string            { return proto.CompactTextString(m) }
func (*UserGameInitInfo) ProtoMessage()               {}
func (*UserGameInitInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *UserGameInitInfo) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *UserGameInitInfo) GetRejectSuit() uint32 {
	if m != nil && m.RejectSuit != nil {
		return *m.RejectSuit
	}
	return 0
}

func (m *UserGameInitInfo) GetInitHandCards() []uint32 {
	if m != nil {
		return m.InitHandCards
	}
	return nil
}

func (m *UserGameInitInfo) GetHuanCards() []uint32 {
	if m != nil {
		return m.HuanCards
	}
	return nil
}

func (m *UserGameInitInfo) GetHuanInCards() []uint32 {
	if m != nil {
		return m.HuanInCards
	}
	return nil
}

type UserGameOperation struct {
	SeatId           *uint32 `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	OperateMask      *uint32 `protobuf:"varint,2,req,name=OperateMask" json:"OperateMask,omitempty"`
	TagMj            *uint32 `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserGameOperation) Reset()                    { *m = UserGameOperation{} }
func (m *UserGameOperation) String() string            { return proto.CompactTextString(m) }
func (*UserGameOperation) ProtoMessage()               {}
func (*UserGameOperation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *UserGameOperation) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *UserGameOperation) GetOperateMask() uint32 {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return 0
}

func (m *UserGameOperation) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

type CSUserGameAllOperationNotify struct {
	ZhuangSeatId     *uint32              `protobuf:"varint,1,req,name=ZhuangSeatId" json:"ZhuangSeatId,omitempty"`
	Dice1            *uint32              `protobuf:"varint,2,req,name=Dice1" json:"Dice1,omitempty"`
	Dice2            *uint32              `protobuf:"varint,3,req,name=Dice2" json:"Dice2,omitempty"`
	HSZType          *uint32              `protobuf:"varint,4,req,name=HSZType" json:"HSZType,omitempty"`
	TaskHSZType      *uint32              `protobuf:"varint,5,req,name=TaskHSZType" json:"TaskHSZType,omitempty"`
	FinishedMatchNum *uint32              `protobuf:"varint,6,req,name=FinishedMatchNum" json:"FinishedMatchNum,omitempty"`
	GameInitInfo     []*UserGameInitInfo  `protobuf:"bytes,7,rep,name=GameInitInfo" json:"GameInitInfo,omitempty"`
	GameOperation    []*UserGameOperation `protobuf:"bytes,8,rep,name=GameOperation" json:"GameOperation,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CSUserGameAllOperationNotify) Reset()                    { *m = CSUserGameAllOperationNotify{} }
func (m *CSUserGameAllOperationNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserGameAllOperationNotify) ProtoMessage()               {}
func (*CSUserGameAllOperationNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *CSUserGameAllOperationNotify) GetZhuangSeatId() uint32 {
	if m != nil && m.ZhuangSeatId != nil {
		return *m.ZhuangSeatId
	}
	return 0
}

func (m *CSUserGameAllOperationNotify) GetDice1() uint32 {
	if m != nil && m.Dice1 != nil {
		return *m.Dice1
	}
	return 0
}

func (m *CSUserGameAllOperationNotify) GetDice2() uint32 {
	if m != nil && m.Dice2 != nil {
		return *m.Dice2
	}
	return 0
}

func (m *CSUserGameAllOperationNotify) GetHSZType() uint32 {
	if m != nil && m.HSZType != nil {
		return *m.HSZType
	}
	return 0
}

func (m *CSUserGameAllOperationNotify) GetTaskHSZType() uint32 {
	if m != nil && m.TaskHSZType != nil {
		return *m.TaskHSZType
	}
	return 0
}

func (m *CSUserGameAllOperationNotify) GetFinishedMatchNum() uint32 {
	if m != nil && m.FinishedMatchNum != nil {
		return *m.FinishedMatchNum
	}
	return 0
}

func (m *CSUserGameAllOperationNotify) GetGameInitInfo() []*UserGameInitInfo {
	if m != nil {
		return m.GameInitInfo
	}
	return nil
}

func (m *CSUserGameAllOperationNotify) GetGameOperation() []*UserGameOperation {
	if m != nil {
		return m.GameOperation
	}
	return nil
}

type ClubMatchContext struct {
	RoomSize                *uint32           `protobuf:"varint,1,req,name=RoomSize" json:"RoomSize,omitempty"`
	MatchTotalCount         *uint32           `protobuf:"varint,2,req,name=MatchTotalCount" json:"MatchTotalCount,omitempty"`
	MatchAlreadyCount       *uint32           `protobuf:"varint,3,req,name=MatchAlreadyCount" json:"MatchAlreadyCount,omitempty"`
	MatchName               *string           `protobuf:"bytes,4,req,name=MatchName" json:"MatchName,omitempty"`
	RoomCode                *string           `protobuf:"bytes,5,opt,name=RoomCode" json:"RoomCode,omitempty"`
	MatchAlreadyPlayerCount *uint32           `protobuf:"varint,6,req,name=MatchAlreadyPlayerCount" json:"MatchAlreadyPlayerCount,omitempty"`
	RoomId                  *uint32           `protobuf:"varint,7,req,name=RoomId" json:"RoomId,omitempty"`
	RoomDiZhu               *uint32           `protobuf:"varint,8,req,name=RoomDiZhu" json:"RoomDiZhu,omitempty"`
	RoomMaxBeiShu           *uint32           `protobuf:"varint,9,req,name=RoomMaxBeiShu" json:"RoomMaxBeiShu,omitempty"`
	Deposit                 *uint32           `protobuf:"varint,10,req,name=Deposit" json:"Deposit,omitempty"`
	MinCurrencyValue        *uint32           `protobuf:"varint,11,req,name=MinCurrencyValue" json:"MinCurrencyValue,omitempty"`
	AdvanceParam            *RoomAdvanceParam `protobuf:"bytes,12,req,name=AdvanceParam" json:"AdvanceParam,omitempty"`
	RoomOwerUid             *uint64           `protobuf:"varint,13,req,name=RoomOwerUid" json:"RoomOwerUid,omitempty"`
	TableState              *TableState       `protobuf:"varint,14,req,name=tableState,enum=rpc.TableState" json:"tableState,omitempty"`
	ClubMatchOwnerId        *uint64           `protobuf:"varint,15,req,name=ClubMatchOwnerId" json:"ClubMatchOwnerId,omitempty"`
	RewardCoin              *uint64           `protobuf:"varint,16,req,name=RewardCoin" json:"RewardCoin,omitempty"`
	JoinMatchFee            *uint64           `protobuf:"varint,17,req,name=JoinMatchFee" json:"JoinMatchFee,omitempty"`
	IsPriviteRoom           *bool             `protobuf:"varint,18,req,name=IsPriviteRoom" json:"IsPriviteRoom,omitempty"`
	InvitedUid              []uint64          `protobuf:"varint,19,rep,name=InvitedUid" json:"InvitedUid,omitempty"`
	MatchType               *uint32           `protobuf:"varint,20,req,name=MatchType" json:"MatchType,omitempty"`
	XXX_unrecognized        []byte            `json:"-"`
}

func (m *ClubMatchContext) Reset()                    { *m = ClubMatchContext{} }
func (m *ClubMatchContext) String() string            { return proto.CompactTextString(m) }
func (*ClubMatchContext) ProtoMessage()               {}
func (*ClubMatchContext) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *ClubMatchContext) GetRoomSize() uint32 {
	if m != nil && m.RoomSize != nil {
		return *m.RoomSize
	}
	return 0
}

func (m *ClubMatchContext) GetMatchTotalCount() uint32 {
	if m != nil && m.MatchTotalCount != nil {
		return *m.MatchTotalCount
	}
	return 0
}

func (m *ClubMatchContext) GetMatchAlreadyCount() uint32 {
	if m != nil && m.MatchAlreadyCount != nil {
		return *m.MatchAlreadyCount
	}
	return 0
}

func (m *ClubMatchContext) GetMatchName() string {
	if m != nil && m.MatchName != nil {
		return *m.MatchName
	}
	return ""
}

func (m *ClubMatchContext) GetRoomCode() string {
	if m != nil && m.RoomCode != nil {
		return *m.RoomCode
	}
	return ""
}

func (m *ClubMatchContext) GetMatchAlreadyPlayerCount() uint32 {
	if m != nil && m.MatchAlreadyPlayerCount != nil {
		return *m.MatchAlreadyPlayerCount
	}
	return 0
}

func (m *ClubMatchContext) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *ClubMatchContext) GetRoomDiZhu() uint32 {
	if m != nil && m.RoomDiZhu != nil {
		return *m.RoomDiZhu
	}
	return 0
}

func (m *ClubMatchContext) GetRoomMaxBeiShu() uint32 {
	if m != nil && m.RoomMaxBeiShu != nil {
		return *m.RoomMaxBeiShu
	}
	return 0
}

func (m *ClubMatchContext) GetDeposit() uint32 {
	if m != nil && m.Deposit != nil {
		return *m.Deposit
	}
	return 0
}

func (m *ClubMatchContext) GetMinCurrencyValue() uint32 {
	if m != nil && m.MinCurrencyValue != nil {
		return *m.MinCurrencyValue
	}
	return 0
}

func (m *ClubMatchContext) GetAdvanceParam() *RoomAdvanceParam {
	if m != nil {
		return m.AdvanceParam
	}
	return nil
}

func (m *ClubMatchContext) GetRoomOwerUid() uint64 {
	if m != nil && m.RoomOwerUid != nil {
		return *m.RoomOwerUid
	}
	return 0
}

func (m *ClubMatchContext) GetTableState() TableState {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return TableState_Table_State_Init
}

func (m *ClubMatchContext) GetClubMatchOwnerId() uint64 {
	if m != nil && m.ClubMatchOwnerId != nil {
		return *m.ClubMatchOwnerId
	}
	return 0
}

func (m *ClubMatchContext) GetRewardCoin() uint64 {
	if m != nil && m.RewardCoin != nil {
		return *m.RewardCoin
	}
	return 0
}

func (m *ClubMatchContext) GetJoinMatchFee() uint64 {
	if m != nil && m.JoinMatchFee != nil {
		return *m.JoinMatchFee
	}
	return 0
}

func (m *ClubMatchContext) GetIsPriviteRoom() bool {
	if m != nil && m.IsPriviteRoom != nil {
		return *m.IsPriviteRoom
	}
	return false
}

func (m *ClubMatchContext) GetInvitedUid() []uint64 {
	if m != nil {
		return m.InvitedUid
	}
	return nil
}

func (m *ClubMatchContext) GetMatchType() uint32 {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return 0
}

type CSUserGetClubMatchInfoRqst struct {
	BeginIndex       *uint32 `protobuf:"varint,1,req,name=BeginIndex" json:"BeginIndex,omitempty"`
	Size             *uint32 `protobuf:"varint,2,req,name=Size" json:"Size,omitempty"`
	ClubId           *uint32 `protobuf:"varint,3,req,name=ClubId" json:"ClubId,omitempty"`
	IsOwn            *bool   `protobuf:"varint,4,req,name=IsOwn" json:"IsOwn,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserGetClubMatchInfoRqst) Reset()                    { *m = CSUserGetClubMatchInfoRqst{} }
func (m *CSUserGetClubMatchInfoRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetClubMatchInfoRqst) ProtoMessage()               {}
func (*CSUserGetClubMatchInfoRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *CSUserGetClubMatchInfoRqst) GetBeginIndex() uint32 {
	if m != nil && m.BeginIndex != nil {
		return *m.BeginIndex
	}
	return 0
}

func (m *CSUserGetClubMatchInfoRqst) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CSUserGetClubMatchInfoRqst) GetClubId() uint32 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

func (m *CSUserGetClubMatchInfoRqst) GetIsOwn() bool {
	if m != nil && m.IsOwn != nil {
		return *m.IsOwn
	}
	return false
}

type CSUserGetClubMatchInfoRsp struct {
	BeginIndex       *uint32             `protobuf:"varint,1,req,name=BeginIndex" json:"BeginIndex,omitempty"`
	Size             *uint32             `protobuf:"varint,2,req,name=Size" json:"Size,omitempty"`
	RoomInfo         []*ClubMatchContext `protobuf:"bytes,3,rep,name=RoomInfo" json:"RoomInfo,omitempty"`
	IsOwn            *bool               `protobuf:"varint,4,req,name=IsOwn" json:"IsOwn,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserGetClubMatchInfoRsp) Reset()                    { *m = CSUserGetClubMatchInfoRsp{} }
func (m *CSUserGetClubMatchInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetClubMatchInfoRsp) ProtoMessage()               {}
func (*CSUserGetClubMatchInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *CSUserGetClubMatchInfoRsp) GetBeginIndex() uint32 {
	if m != nil && m.BeginIndex != nil {
		return *m.BeginIndex
	}
	return 0
}

func (m *CSUserGetClubMatchInfoRsp) GetSize() uint32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CSUserGetClubMatchInfoRsp) GetRoomInfo() []*ClubMatchContext {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *CSUserGetClubMatchInfoRsp) GetIsOwn() bool {
	if m != nil && m.IsOwn != nil {
		return *m.IsOwn
	}
	return false
}

type ClubMemberBaseInfo struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=Uid" json:"Uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	Avatar           *string `protobuf:"bytes,3,req,name=Avatar" json:"Avatar,omitempty"`
	Sex              *int32  `protobuf:"varint,4,req,name=Sex" json:"Sex,omitempty"`
	GoldNum          *int64  `protobuf:"varint,5,req,name=GoldNum" json:"GoldNum,omitempty"`
	IP               *int32  `protobuf:"varint,6,req,name=IP" json:"IP,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClubMemberBaseInfo) Reset()                    { *m = ClubMemberBaseInfo{} }
func (m *ClubMemberBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubMemberBaseInfo) ProtoMessage()               {}
func (*ClubMemberBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *ClubMemberBaseInfo) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ClubMemberBaseInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *ClubMemberBaseInfo) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *ClubMemberBaseInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *ClubMemberBaseInfo) GetGoldNum() int64 {
	if m != nil && m.GoldNum != nil {
		return *m.GoldNum
	}
	return 0
}

func (m *ClubMemberBaseInfo) GetIP() int32 {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return 0
}

type ClubBaseInfo struct {
	Id               *uint64             `protobuf:"varint,1,req,name=Id" json:"Id,omitempty"`
	NickName         *string             `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	LogoIndex        *uint32             `protobuf:"varint,3,req,name=LogoIndex" json:"LogoIndex,omitempty"`
	MaxMember        *uint32             `protobuf:"varint,4,req,name=MaxMember" json:"MaxMember,omitempty"`
	Notice           *string             `protobuf:"bytes,5,req,name=Notice" json:"Notice,omitempty"`
	Captain          *ClubMemberBaseInfo `protobuf:"bytes,6,req,name=Captain" json:"Captain,omitempty"`
	MemberNumber     *uint32             `protobuf:"varint,7,req,name=MemberNumber" json:"MemberNumber,omitempty"`
	Status           *uint32             `protobuf:"varint,8,req,name=Status" json:"Status,omitempty"`
	CaptainReward    *uint64             `protobuf:"varint,9,req,name=CaptainReward" json:"CaptainReward,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ClubBaseInfo) Reset()                    { *m = ClubBaseInfo{} }
func (m *ClubBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubBaseInfo) ProtoMessage()               {}
func (*ClubBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *ClubBaseInfo) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ClubBaseInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *ClubBaseInfo) GetLogoIndex() uint32 {
	if m != nil && m.LogoIndex != nil {
		return *m.LogoIndex
	}
	return 0
}

func (m *ClubBaseInfo) GetMaxMember() uint32 {
	if m != nil && m.MaxMember != nil {
		return *m.MaxMember
	}
	return 0
}

func (m *ClubBaseInfo) GetNotice() string {
	if m != nil && m.Notice != nil {
		return *m.Notice
	}
	return ""
}

func (m *ClubBaseInfo) GetCaptain() *ClubMemberBaseInfo {
	if m != nil {
		return m.Captain
	}
	return nil
}

func (m *ClubBaseInfo) GetMemberNumber() uint32 {
	if m != nil && m.MemberNumber != nil {
		return *m.MemberNumber
	}
	return 0
}

func (m *ClubBaseInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *ClubBaseInfo) GetCaptainReward() uint64 {
	if m != nil && m.CaptainReward != nil {
		return *m.CaptainReward
	}
	return 0
}

// 队伍页面
type CSPlayerClubPageRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSPlayerClubPageRqst) Reset()                    { *m = CSPlayerClubPageRqst{} }
func (m *CSPlayerClubPageRqst) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerClubPageRqst) ProtoMessage()               {}
func (*CSPlayerClubPageRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *CSPlayerClubPageRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSPlayerClubPageRsp struct {
	MemberType       *uint32       `protobuf:"varint,1,req,name=MemberType" json:"MemberType,omitempty"`
	Club             *ClubBaseInfo `protobuf:"bytes,2,opt,name=Club" json:"Club,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CSPlayerClubPageRsp) Reset()                    { *m = CSPlayerClubPageRsp{} }
func (m *CSPlayerClubPageRsp) String() string            { return proto.CompactTextString(m) }
func (*CSPlayerClubPageRsp) ProtoMessage()               {}
func (*CSPlayerClubPageRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *CSPlayerClubPageRsp) GetMemberType() uint32 {
	if m != nil && m.MemberType != nil {
		return *m.MemberType
	}
	return 0
}

func (m *CSPlayerClubPageRsp) GetClub() *ClubBaseInfo {
	if m != nil {
		return m.Club
	}
	return nil
}

// 查找队伍
type CSSearchClubRqst struct {
	ClubString       *string `protobuf:"bytes,1,req,name=ClubString" json:"ClubString,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSSearchClubRqst) Reset()                    { *m = CSSearchClubRqst{} }
func (m *CSSearchClubRqst) String() string            { return proto.CompactTextString(m) }
func (*CSSearchClubRqst) ProtoMessage()               {}
func (*CSSearchClubRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *CSSearchClubRqst) GetClubString() string {
	if m != nil && m.ClubString != nil {
		return *m.ClubString
	}
	return ""
}

type CSSearchClubRsp struct {
	Clubs            []*ClubBaseInfo `protobuf:"bytes,1,rep,name=Clubs" json:"Clubs,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSSearchClubRsp) Reset()                    { *m = CSSearchClubRsp{} }
func (m *CSSearchClubRsp) String() string            { return proto.CompactTextString(m) }
func (*CSSearchClubRsp) ProtoMessage()               {}
func (*CSSearchClubRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *CSSearchClubRsp) GetClubs() []*ClubBaseInfo {
	if m != nil {
		return m.Clubs
	}
	return nil
}

// 入队申请
type CSJoinClubRqst struct {
	ClubId           *uint64 `protobuf:"varint,1,req,name=ClubId" json:"ClubId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSJoinClubRqst) Reset()                    { *m = CSJoinClubRqst{} }
func (m *CSJoinClubRqst) String() string            { return proto.CompactTextString(m) }
func (*CSJoinClubRqst) ProtoMessage()               {}
func (*CSJoinClubRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *CSJoinClubRqst) GetClubId() uint64 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

type CSJoinClubRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSJoinClubRsp) Reset()                    { *m = CSJoinClubRsp{} }
func (m *CSJoinClubRsp) String() string            { return proto.CompactTextString(m) }
func (*CSJoinClubRsp) ProtoMessage()               {}
func (*CSJoinClubRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *CSJoinClubRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSClubApplicationNotify struct {
	ApplicationNumber *uint32 `protobuf:"varint,1,req,name=ApplicationNumber" json:"ApplicationNumber,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSClubApplicationNotify) Reset()                    { *m = CSClubApplicationNotify{} }
func (m *CSClubApplicationNotify) String() string            { return proto.CompactTextString(m) }
func (*CSClubApplicationNotify) ProtoMessage()               {}
func (*CSClubApplicationNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

func (m *CSClubApplicationNotify) GetApplicationNumber() uint32 {
	if m != nil && m.ApplicationNumber != nil {
		return *m.ApplicationNumber
	}
	return 0
}

// 退队
type CSQuitClubRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSQuitClubRqst) Reset()                    { *m = CSQuitClubRqst{} }
func (m *CSQuitClubRqst) String() string            { return proto.CompactTextString(m) }
func (*CSQuitClubRqst) ProtoMessage()               {}
func (*CSQuitClubRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

func (m *CSQuitClubRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSQuitClubRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSQuitClubRsp) Reset()                    { *m = CSQuitClubRsp{} }
func (m *CSQuitClubRsp) String() string            { return proto.CompactTextString(m) }
func (*CSQuitClubRsp) ProtoMessage()               {}
func (*CSQuitClubRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{153} }

func (m *CSQuitClubRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSQuitClubNotify struct {
	Member           *uint64 `protobuf:"varint,1,req,name=Member" json:"Member,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSQuitClubNotify) Reset()                    { *m = CSQuitClubNotify{} }
func (m *CSQuitClubNotify) String() string            { return proto.CompactTextString(m) }
func (*CSQuitClubNotify) ProtoMessage()               {}
func (*CSQuitClubNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{154} }

func (m *CSQuitClubNotify) GetMember() uint64 {
	if m != nil && m.Member != nil {
		return *m.Member
	}
	return 0
}

// 通知队伍信息变化
type CSClubInfoChangeNotify struct {
	MemberType       *uint32       `protobuf:"varint,1,req,name=MemberType" json:"MemberType,omitempty"`
	Club             *ClubBaseInfo `protobuf:"bytes,2,opt,name=Club" json:"Club,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CSClubInfoChangeNotify) Reset()                    { *m = CSClubInfoChangeNotify{} }
func (m *CSClubInfoChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*CSClubInfoChangeNotify) ProtoMessage()               {}
func (*CSClubInfoChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{155} }

func (m *CSClubInfoChangeNotify) GetMemberType() uint32 {
	if m != nil && m.MemberType != nil {
		return *m.MemberType
	}
	return 0
}

func (m *CSClubInfoChangeNotify) GetClub() *ClubBaseInfo {
	if m != nil {
		return m.Club
	}
	return nil
}

// 设置队伍信息
type CSSetClubInfoRqst struct {
	LogoIndex        *uint32 `protobuf:"varint,1,req,name=LogoIndex" json:"LogoIndex,omitempty"`
	NickName         *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	Notice           *string `protobuf:"bytes,3,req,name=Notice" json:"Notice,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSSetClubInfoRqst) Reset()                    { *m = CSSetClubInfoRqst{} }
func (m *CSSetClubInfoRqst) String() string            { return proto.CompactTextString(m) }
func (*CSSetClubInfoRqst) ProtoMessage()               {}
func (*CSSetClubInfoRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{156} }

func (m *CSSetClubInfoRqst) GetLogoIndex() uint32 {
	if m != nil && m.LogoIndex != nil {
		return *m.LogoIndex
	}
	return 0
}

func (m *CSSetClubInfoRqst) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *CSSetClubInfoRqst) GetNotice() string {
	if m != nil && m.Notice != nil {
		return *m.Notice
	}
	return ""
}

type CSSetClubInfoRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSSetClubInfoRsp) Reset()                    { *m = CSSetClubInfoRsp{} }
func (m *CSSetClubInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*CSSetClubInfoRsp) ProtoMessage()               {}
func (*CSSetClubInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *CSSetClubInfoRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

// 获取申请人
type CSGetApplicantsRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSGetApplicantsRqst) Reset()                    { *m = CSGetApplicantsRqst{} }
func (m *CSGetApplicantsRqst) String() string            { return proto.CompactTextString(m) }
func (*CSGetApplicantsRqst) ProtoMessage()               {}
func (*CSGetApplicantsRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{158} }

func (m *CSGetApplicantsRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSGetApplicantsRsp struct {
	Applicants       []*ClubMemberBaseInfo `protobuf:"bytes,1,rep,name=Applicants" json:"Applicants,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CSGetApplicantsRsp) Reset()                    { *m = CSGetApplicantsRsp{} }
func (m *CSGetApplicantsRsp) String() string            { return proto.CompactTextString(m) }
func (*CSGetApplicantsRsp) ProtoMessage()               {}
func (*CSGetApplicantsRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{159} }

func (m *CSGetApplicantsRsp) GetApplicants() []*ClubMemberBaseInfo {
	if m != nil {
		return m.Applicants
	}
	return nil
}

// 拒绝申请
type CSRefuseApplicantRqst struct {
	Applicant        *uint64 `protobuf:"varint,1,req,name=Applicant" json:"Applicant,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSRefuseApplicantRqst) Reset()                    { *m = CSRefuseApplicantRqst{} }
func (m *CSRefuseApplicantRqst) String() string            { return proto.CompactTextString(m) }
func (*CSRefuseApplicantRqst) ProtoMessage()               {}
func (*CSRefuseApplicantRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{160} }

func (m *CSRefuseApplicantRqst) GetApplicant() uint64 {
	if m != nil && m.Applicant != nil {
		return *m.Applicant
	}
	return 0
}

type CSRefuseApplicantRsp struct {
	Applicant        *uint64 `protobuf:"varint,1,req,name=Applicant" json:"Applicant,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSRefuseApplicantRsp) Reset()                    { *m = CSRefuseApplicantRsp{} }
func (m *CSRefuseApplicantRsp) String() string            { return proto.CompactTextString(m) }
func (*CSRefuseApplicantRsp) ProtoMessage()               {}
func (*CSRefuseApplicantRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{161} }

func (m *CSRefuseApplicantRsp) GetApplicant() uint64 {
	if m != nil && m.Applicant != nil {
		return *m.Applicant
	}
	return 0
}

// 批准申请
type CSAcceptApplicantRqst struct {
	Applicant        *uint64 `protobuf:"varint,1,req,name=Applicant" json:"Applicant,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSAcceptApplicantRqst) Reset()                    { *m = CSAcceptApplicantRqst{} }
func (m *CSAcceptApplicantRqst) String() string            { return proto.CompactTextString(m) }
func (*CSAcceptApplicantRqst) ProtoMessage()               {}
func (*CSAcceptApplicantRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

func (m *CSAcceptApplicantRqst) GetApplicant() uint64 {
	if m != nil && m.Applicant != nil {
		return *m.Applicant
	}
	return 0
}

type CSAcceptApplicantRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSAcceptApplicantRsp) Reset()                    { *m = CSAcceptApplicantRsp{} }
func (m *CSAcceptApplicantRsp) String() string            { return proto.CompactTextString(m) }
func (*CSAcceptApplicantRsp) ProtoMessage()               {}
func (*CSAcceptApplicantRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{163} }

func (m *CSAcceptApplicantRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSAddClubMemberNotify struct {
	NewMember        *ClubMemberBaseInfo `protobuf:"bytes,1,req,name=NewMember" json:"NewMember,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSAddClubMemberNotify) Reset()                    { *m = CSAddClubMemberNotify{} }
func (m *CSAddClubMemberNotify) String() string            { return proto.CompactTextString(m) }
func (*CSAddClubMemberNotify) ProtoMessage()               {}
func (*CSAddClubMemberNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{164} }

func (m *CSAddClubMemberNotify) GetNewMember() *ClubMemberBaseInfo {
	if m != nil {
		return m.NewMember
	}
	return nil
}

// 获取所有玩家
type CSGetMembersRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSGetMembersRqst) Reset()                    { *m = CSGetMembersRqst{} }
func (m *CSGetMembersRqst) String() string            { return proto.CompactTextString(m) }
func (*CSGetMembersRqst) ProtoMessage()               {}
func (*CSGetMembersRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *CSGetMembersRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSGetMembersRsp struct {
	Members          []*ClubMemberBaseInfo `protobuf:"bytes,1,rep,name=Members" json:"Members,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CSGetMembersRsp) Reset()                    { *m = CSGetMembersRsp{} }
func (m *CSGetMembersRsp) String() string            { return proto.CompactTextString(m) }
func (*CSGetMembersRsp) ProtoMessage()               {}
func (*CSGetMembersRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{166} }

func (m *CSGetMembersRsp) GetMembers() []*ClubMemberBaseInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

// 踢出玩家
type CSRemoveMemberRqst struct {
	Member           *uint64 `protobuf:"varint,1,req,name=Member" json:"Member,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSRemoveMemberRqst) Reset()                    { *m = CSRemoveMemberRqst{} }
func (m *CSRemoveMemberRqst) String() string            { return proto.CompactTextString(m) }
func (*CSRemoveMemberRqst) ProtoMessage()               {}
func (*CSRemoveMemberRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{167} }

func (m *CSRemoveMemberRqst) GetMember() uint64 {
	if m != nil && m.Member != nil {
		return *m.Member
	}
	return 0
}

type CSRemoveMemberRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSRemoveMemberRsp) Reset()                    { *m = CSRemoveMemberRsp{} }
func (m *CSRemoveMemberRsp) String() string            { return proto.CompactTextString(m) }
func (*CSRemoveMemberRsp) ProtoMessage()               {}
func (*CSRemoveMemberRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *CSRemoveMemberRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSRemoveClubMemberNotify struct {
	Member           *uint64 `protobuf:"varint,1,req,name=Member" json:"Member,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSRemoveClubMemberNotify) Reset()                    { *m = CSRemoveClubMemberNotify{} }
func (m *CSRemoveClubMemberNotify) String() string            { return proto.CompactTextString(m) }
func (*CSRemoveClubMemberNotify) ProtoMessage()               {}
func (*CSRemoveClubMemberNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{169} }

func (m *CSRemoveClubMemberNotify) GetMember() uint64 {
	if m != nil && m.Member != nil {
		return *m.Member
	}
	return 0
}

// 解散队伍
type CSDissolveClubRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSDissolveClubRqst) Reset()                    { *m = CSDissolveClubRqst{} }
func (m *CSDissolveClubRqst) String() string            { return proto.CompactTextString(m) }
func (*CSDissolveClubRqst) ProtoMessage()               {}
func (*CSDissolveClubRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{170} }

func (m *CSDissolveClubRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSDissolveClubRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSDissolveClubRsp) Reset()                    { *m = CSDissolveClubRsp{} }
func (m *CSDissolveClubRsp) String() string            { return proto.CompactTextString(m) }
func (*CSDissolveClubRsp) ProtoMessage()               {}
func (*CSDissolveClubRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *CSDissolveClubRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type Contribution struct {
	Uid               *uint64 `protobuf:"varint,1,req,name=Uid" json:"Uid,omitempty"`
	NickName          *string `protobuf:"bytes,2,req,name=NickName" json:"NickName,omitempty"`
	StageContribution *uint64 `protobuf:"varint,3,req,name=StageContribution" json:"StageContribution,omitempty"`
	TotalContribution *uint64 `protobuf:"varint,4,req,name=TotalContribution" json:"TotalContribution,omitempty"`
	StageMatchNumber  *uint64 `protobuf:"varint,5,req,name=StageMatchNumber" json:"StageMatchNumber,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *Contribution) Reset()                    { *m = Contribution{} }
func (m *Contribution) String() string            { return proto.CompactTextString(m) }
func (*Contribution) ProtoMessage()               {}
func (*Contribution) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

func (m *Contribution) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Contribution) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *Contribution) GetStageContribution() uint64 {
	if m != nil && m.StageContribution != nil {
		return *m.StageContribution
	}
	return 0
}

func (m *Contribution) GetTotalContribution() uint64 {
	if m != nil && m.TotalContribution != nil {
		return *m.TotalContribution
	}
	return 0
}

func (m *Contribution) GetStageMatchNumber() uint64 {
	if m != nil && m.StageMatchNumber != nil {
		return *m.StageMatchNumber
	}
	return 0
}

// 获取贡献度
type CSGetContributionRqst struct {
	ClubId           *uint64 `protobuf:"varint,1,req,name=ClubId" json:"ClubId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSGetContributionRqst) Reset()                    { *m = CSGetContributionRqst{} }
func (m *CSGetContributionRqst) String() string            { return proto.CompactTextString(m) }
func (*CSGetContributionRqst) ProtoMessage()               {}
func (*CSGetContributionRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *CSGetContributionRqst) GetClubId() uint64 {
	if m != nil && m.ClubId != nil {
		return *m.ClubId
	}
	return 0
}

type CSGetContributionRsp struct {
	Contributions    []*Contribution `protobuf:"bytes,1,rep,name=contributions" json:"contributions,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSGetContributionRsp) Reset()                    { *m = CSGetContributionRsp{} }
func (m *CSGetContributionRsp) String() string            { return proto.CompactTextString(m) }
func (*CSGetContributionRsp) ProtoMessage()               {}
func (*CSGetContributionRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *CSGetContributionRsp) GetContributions() []*Contribution {
	if m != nil {
		return m.Contributions
	}
	return nil
}

type CSGetCaptainRewardRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSGetCaptainRewardRqst) Reset()                    { *m = CSGetCaptainRewardRqst{} }
func (m *CSGetCaptainRewardRqst) String() string            { return proto.CompactTextString(m) }
func (*CSGetCaptainRewardRqst) ProtoMessage()               {}
func (*CSGetCaptainRewardRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{175} }

func (m *CSGetCaptainRewardRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSGetCaptainRewardRsp struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSGetCaptainRewardRsp) Reset()                    { *m = CSGetCaptainRewardRsp{} }
func (m *CSGetCaptainRewardRsp) String() string            { return proto.CompactTextString(m) }
func (*CSGetCaptainRewardRsp) ProtoMessage()               {}
func (*CSGetCaptainRewardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{176} }

func (m *CSGetCaptainRewardRsp) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type UserClubInfo struct {
	ClubOperator     *uint32 `protobuf:"varint,1,req,name=ClubOperator" json:"ClubOperator,omitempty"`
	Time             *int64  `protobuf:"varint,2,req,name=Time" json:"Time,omitempty"`
	Info1            *string `protobuf:"bytes,3,req,name=Info1" json:"Info1,omitempty"`
	Info2            *string `protobuf:"bytes,4,req,name=Info2" json:"Info2,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserClubInfo) Reset()                    { *m = UserClubInfo{} }
func (m *UserClubInfo) String() string            { return proto.CompactTextString(m) }
func (*UserClubInfo) ProtoMessage()               {}
func (*UserClubInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{177} }

func (m *UserClubInfo) GetClubOperator() uint32 {
	if m != nil && m.ClubOperator != nil {
		return *m.ClubOperator
	}
	return 0
}

func (m *UserClubInfo) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *UserClubInfo) GetInfo1() string {
	if m != nil && m.Info1 != nil {
		return *m.Info1
	}
	return ""
}

func (m *UserClubInfo) GetInfo2() string {
	if m != nil && m.Info2 != nil {
		return *m.Info2
	}
	return ""
}

type CSUserGetClubInfoRqst struct {
	Reserved         *uint32 `protobuf:"varint,1,req,name=Reserved" json:"Reserved,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserGetClubInfoRqst) Reset()                    { *m = CSUserGetClubInfoRqst{} }
func (m *CSUserGetClubInfoRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetClubInfoRqst) ProtoMessage()               {}
func (*CSUserGetClubInfoRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{178} }

func (m *CSUserGetClubInfoRqst) GetReserved() uint32 {
	if m != nil && m.Reserved != nil {
		return *m.Reserved
	}
	return 0
}

type CSUserGetClubInfoRsp struct {
	ClubInfos        []*UserClubInfo `protobuf:"bytes,1,rep,name=ClubInfos" json:"ClubInfos,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserGetClubInfoRsp) Reset()                    { *m = CSUserGetClubInfoRsp{} }
func (m *CSUserGetClubInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserGetClubInfoRsp) ProtoMessage()               {}
func (*CSUserGetClubInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{179} }

func (m *CSUserGetClubInfoRsp) GetClubInfos() []*UserClubInfo {
	if m != nil {
		return m.ClubInfos
	}
	return nil
}

type CSUserNewClubInfoNotify struct {
	ClubInfo         *UserClubInfo `protobuf:"bytes,1,req,name=ClubInfo" json:"ClubInfo,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CSUserNewClubInfoNotify) Reset()                    { *m = CSUserNewClubInfoNotify{} }
func (m *CSUserNewClubInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserNewClubInfoNotify) ProtoMessage()               {}
func (*CSUserNewClubInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{180} }

func (m *CSUserNewClubInfoNotify) GetClubInfo() *UserClubInfo {
	if m != nil {
		return m.ClubInfo
	}
	return nil
}

type CSClubMemberOnlineNotify struct {
	Member           *ClubMemberBaseInfo `protobuf:"bytes,1,req,name=Member" json:"Member,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSClubMemberOnlineNotify) Reset()                    { *m = CSClubMemberOnlineNotify{} }
func (m *CSClubMemberOnlineNotify) String() string            { return proto.CompactTextString(m) }
func (*CSClubMemberOnlineNotify) ProtoMessage()               {}
func (*CSClubMemberOnlineNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{181} }

func (m *CSClubMemberOnlineNotify) GetMember() *ClubMemberBaseInfo {
	if m != nil {
		return m.Member
	}
	return nil
}

type CSUserInviteInPriviteRoomNotify struct {
	InviteUid        *uint64 `protobuf:"varint,1,req,name=InviteUid" json:"InviteUid,omitempty"`
	RoomId           *uint32 `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	RewardCoin       *uint64 `protobuf:"varint,3,req,name=RewardCoin" json:"RewardCoin,omitempty"`
	JoinMatchFee     *uint64 `protobuf:"varint,4,req,name=JoinMatchFee" json:"JoinMatchFee,omitempty"`
	IsPriviteRoom    *bool   `protobuf:"varint,5,req,name=IsPriviteRoom" json:"IsPriviteRoom,omitempty"`
	MatchType        *uint32 `protobuf:"varint,6,req,name=MatchType" json:"MatchType,omitempty"`
	InviteCount      *uint32 `protobuf:"varint,7,req,name=InviteCount" json:"InviteCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserInviteInPriviteRoomNotify) Reset()         { *m = CSUserInviteInPriviteRoomNotify{} }
func (m *CSUserInviteInPriviteRoomNotify) String() string { return proto.CompactTextString(m) }
func (*CSUserInviteInPriviteRoomNotify) ProtoMessage()    {}
func (*CSUserInviteInPriviteRoomNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{182}
}

func (m *CSUserInviteInPriviteRoomNotify) GetInviteUid() uint64 {
	if m != nil && m.InviteUid != nil {
		return *m.InviteUid
	}
	return 0
}

func (m *CSUserInviteInPriviteRoomNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserInviteInPriviteRoomNotify) GetRewardCoin() uint64 {
	if m != nil && m.RewardCoin != nil {
		return *m.RewardCoin
	}
	return 0
}

func (m *CSUserInviteInPriviteRoomNotify) GetJoinMatchFee() uint64 {
	if m != nil && m.JoinMatchFee != nil {
		return *m.JoinMatchFee
	}
	return 0
}

func (m *CSUserInviteInPriviteRoomNotify) GetIsPriviteRoom() bool {
	if m != nil && m.IsPriviteRoom != nil {
		return *m.IsPriviteRoom
	}
	return false
}

func (m *CSUserInviteInPriviteRoomNotify) GetMatchType() uint32 {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return 0
}

func (m *CSUserInviteInPriviteRoomNotify) GetInviteCount() uint32 {
	if m != nil && m.InviteCount != nil {
		return *m.InviteCount
	}
	return 0
}

type CSUserEnterZfbTableRqst struct {
	TableType        *ZFB_TABLE_TYPE `protobuf:"varint,1,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserEnterZfbTableRqst) Reset()                    { *m = CSUserEnterZfbTableRqst{} }
func (m *CSUserEnterZfbTableRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserEnterZfbTableRqst) ProtoMessage()               {}
func (*CSUserEnterZfbTableRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{183} }

func (m *CSUserEnterZfbTableRqst) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

type CSUserEnterZfbTableRsp struct {
	EnterRoomSuccess *bool           `protobuf:"varint,1,req,name=EnterRoomSuccess" json:"EnterRoomSuccess,omitempty"`
	MinCurrencyValue *uint64         `protobuf:"varint,2,req,name=MinCurrencyValue" json:"MinCurrencyValue,omitempty"`
	TableType        *ZFB_TABLE_TYPE `protobuf:"varint,3,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	TimeNow          *uint64         `protobuf:"varint,4,req,name=TimeNow" json:"TimeNow,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserEnterZfbTableRsp) Reset()                    { *m = CSUserEnterZfbTableRsp{} }
func (m *CSUserEnterZfbTableRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserEnterZfbTableRsp) ProtoMessage()               {}
func (*CSUserEnterZfbTableRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{184} }

func (m *CSUserEnterZfbTableRsp) GetEnterRoomSuccess() bool {
	if m != nil && m.EnterRoomSuccess != nil {
		return *m.EnterRoomSuccess
	}
	return false
}

func (m *CSUserEnterZfbTableRsp) GetMinCurrencyValue() uint64 {
	if m != nil && m.MinCurrencyValue != nil {
		return *m.MinCurrencyValue
	}
	return 0
}

func (m *CSUserEnterZfbTableRsp) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

func (m *CSUserEnterZfbTableRsp) GetTimeNow() uint64 {
	if m != nil && m.TimeNow != nil {
		return *m.TimeNow
	}
	return 0
}

type CSUserZfbTableChangeInfoNotity struct {
	FirstDice        *uint32         `protobuf:"varint,1,req,name=FirstDice" json:"FirstDice,omitempty"`
	SecondDice       *uint32         `protobuf:"varint,2,req,name=SecondDice" json:"SecondDice,omitempty"`
	SettlementId     *uint64         `protobuf:"varint,3,req,name=SettlementId" json:"SettlementId,omitempty"`
	NextMatchEndTime *uint64         `protobuf:"varint,4,req,name=NextMatchEndTime" json:"NextMatchEndTime,omitempty"`
	TableState       *TableState     `protobuf:"varint,5,req,name=tableState,enum=rpc.TableState" json:"tableState,omitempty"`
	OwnYaZhuangCoin  *uint32         `protobuf:"varint,6,req,name=OwnYaZhuangCoin" json:"OwnYaZhuangCoin,omitempty"`
	OwnYaIdleCoin    *uint32         `protobuf:"varint,7,req,name=OwnYaIdleCoin" json:"OwnYaIdleCoin,omitempty"`
	OwnYaHeCoin      *uint32         `protobuf:"varint,8,req,name=OwnYaHeCoin" json:"OwnYaHeCoin,omitempty"`
	OwnYaLeoparCoin  *uint32         `protobuf:"varint,9,req,name=OwnYaLeoparCoin" json:"OwnYaLeoparCoin,omitempty"`
	OwnYaTianBarCoin *uint32         `protobuf:"varint,10,req,name=OwnYaTianBarCoin" json:"OwnYaTianBarCoin,omitempty"`
	ZhuangCoinValue  *uint32         `protobuf:"varint,11,req,name=ZhuangCoinValue" json:"ZhuangCoinValue,omitempty"`
	IdleCoinValue    *uint32         `protobuf:"varint,12,req,name=IdleCoinValue" json:"IdleCoinValue,omitempty"`
	HeCoinValue      *uint32         `protobuf:"varint,13,req,name=HeCoinValue" json:"HeCoinValue,omitempty"`
	LeoparCoinValue  *uint32         `protobuf:"varint,14,req,name=LeoparCoinValue" json:"LeoparCoinValue,omitempty"`
	TianBarValue     *uint32         `protobuf:"varint,15,req,name=TianBarValue" json:"TianBarValue,omitempty"`
	TableType        *ZFB_TABLE_TYPE `protobuf:"varint,16,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	Mjs              []uint32        `protobuf:"varint,17,rep,name=Mjs" json:"Mjs,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserZfbTableChangeInfoNotity) Reset()         { *m = CSUserZfbTableChangeInfoNotity{} }
func (m *CSUserZfbTableChangeInfoNotity) String() string { return proto.CompactTextString(m) }
func (*CSUserZfbTableChangeInfoNotity) ProtoMessage()    {}
func (*CSUserZfbTableChangeInfoNotity) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{185}
}

func (m *CSUserZfbTableChangeInfoNotity) GetFirstDice() uint32 {
	if m != nil && m.FirstDice != nil {
		return *m.FirstDice
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetSecondDice() uint32 {
	if m != nil && m.SecondDice != nil {
		return *m.SecondDice
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetSettlementId() uint64 {
	if m != nil && m.SettlementId != nil {
		return *m.SettlementId
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetNextMatchEndTime() uint64 {
	if m != nil && m.NextMatchEndTime != nil {
		return *m.NextMatchEndTime
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetTableState() TableState {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return TableState_Table_State_Init
}

func (m *CSUserZfbTableChangeInfoNotity) GetOwnYaZhuangCoin() uint32 {
	if m != nil && m.OwnYaZhuangCoin != nil {
		return *m.OwnYaZhuangCoin
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetOwnYaIdleCoin() uint32 {
	if m != nil && m.OwnYaIdleCoin != nil {
		return *m.OwnYaIdleCoin
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetOwnYaHeCoin() uint32 {
	if m != nil && m.OwnYaHeCoin != nil {
		return *m.OwnYaHeCoin
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetOwnYaLeoparCoin() uint32 {
	if m != nil && m.OwnYaLeoparCoin != nil {
		return *m.OwnYaLeoparCoin
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetOwnYaTianBarCoin() uint32 {
	if m != nil && m.OwnYaTianBarCoin != nil {
		return *m.OwnYaTianBarCoin
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetZhuangCoinValue() uint32 {
	if m != nil && m.ZhuangCoinValue != nil {
		return *m.ZhuangCoinValue
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetIdleCoinValue() uint32 {
	if m != nil && m.IdleCoinValue != nil {
		return *m.IdleCoinValue
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetHeCoinValue() uint32 {
	if m != nil && m.HeCoinValue != nil {
		return *m.HeCoinValue
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetLeoparCoinValue() uint32 {
	if m != nil && m.LeoparCoinValue != nil {
		return *m.LeoparCoinValue
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetTianBarValue() uint32 {
	if m != nil && m.TianBarValue != nil {
		return *m.TianBarValue
	}
	return 0
}

func (m *CSUserZfbTableChangeInfoNotity) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

func (m *CSUserZfbTableChangeInfoNotity) GetMjs() []uint32 {
	if m != nil {
		return m.Mjs
	}
	return nil
}

type CSUserZfbSettleInfoNotity struct {
	Mjs                []uint32        `protobuf:"varint,1,rep,name=Mjs" json:"Mjs,omitempty"`
	NextMatchBeginTime *uint64         `protobuf:"varint,2,req,name=NextMatchBeginTime" json:"NextMatchBeginTime,omitempty"`
	WinCoin            *int64          `protobuf:"varint,3,req,name=WinCoin" json:"WinCoin,omitempty"`
	TableType          *ZFB_TABLE_TYPE `protobuf:"varint,4,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	XXX_unrecognized   []byte          `json:"-"`
}

func (m *CSUserZfbSettleInfoNotity) Reset()                    { *m = CSUserZfbSettleInfoNotity{} }
func (m *CSUserZfbSettleInfoNotity) String() string            { return proto.CompactTextString(m) }
func (*CSUserZfbSettleInfoNotity) ProtoMessage()               {}
func (*CSUserZfbSettleInfoNotity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{186} }

func (m *CSUserZfbSettleInfoNotity) GetMjs() []uint32 {
	if m != nil {
		return m.Mjs
	}
	return nil
}

func (m *CSUserZfbSettleInfoNotity) GetNextMatchBeginTime() uint64 {
	if m != nil && m.NextMatchBeginTime != nil {
		return *m.NextMatchBeginTime
	}
	return 0
}

func (m *CSUserZfbSettleInfoNotity) GetWinCoin() int64 {
	if m != nil && m.WinCoin != nil {
		return *m.WinCoin
	}
	return 0
}

func (m *CSUserZfbSettleInfoNotity) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

type ZfbRecordInfo struct {
	MatchId          *uint32               `protobuf:"varint,1,req,name=MatchId" json:"MatchId,omitempty"`
	ResuleType       *ZFB_TABLE_RULES_TYPE `protobuf:"varint,2,req,name=ResuleType,enum=rpc.ZFB_TABLE_RULES_TYPE" json:"ResuleType,omitempty"`
	TianBarCount     *uint32               `protobuf:"varint,3,req,name=TianBarCount" json:"TianBarCount,omitempty"`
	LeoparCount      *uint32               `protobuf:"varint,4,req,name=LeoparCount" json:"LeoparCount,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ZfbRecordInfo) Reset()                    { *m = ZfbRecordInfo{} }
func (m *ZfbRecordInfo) String() string            { return proto.CompactTextString(m) }
func (*ZfbRecordInfo) ProtoMessage()               {}
func (*ZfbRecordInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{187} }

func (m *ZfbRecordInfo) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *ZfbRecordInfo) GetResuleType() ZFB_TABLE_RULES_TYPE {
	if m != nil && m.ResuleType != nil {
		return *m.ResuleType
	}
	return ZFB_TABLE_RULES_TYPE_ZFB_RULES_NONE
}

func (m *ZfbRecordInfo) GetTianBarCount() uint32 {
	if m != nil && m.TianBarCount != nil {
		return *m.TianBarCount
	}
	return 0
}

func (m *ZfbRecordInfo) GetLeoparCount() uint32 {
	if m != nil && m.LeoparCount != nil {
		return *m.LeoparCount
	}
	return 0
}

type CSUserZfbRecordNotity struct {
	TableType        *ZFB_TABLE_TYPE  `protobuf:"varint,1,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	RecordInfo       []*ZfbRecordInfo `protobuf:"bytes,2,rep,name=RecordInfo" json:"RecordInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CSUserZfbRecordNotity) Reset()                    { *m = CSUserZfbRecordNotity{} }
func (m *CSUserZfbRecordNotity) String() string            { return proto.CompactTextString(m) }
func (*CSUserZfbRecordNotity) ProtoMessage()               {}
func (*CSUserZfbRecordNotity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{188} }

func (m *CSUserZfbRecordNotity) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

func (m *CSUserZfbRecordNotity) GetRecordInfo() []*ZfbRecordInfo {
	if m != nil {
		return m.RecordInfo
	}
	return nil
}

type CSUserLeaveZfbTableRqst struct {
	TableType        *ZFB_TABLE_TYPE `protobuf:"varint,1,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserLeaveZfbTableRqst) Reset()                    { *m = CSUserLeaveZfbTableRqst{} }
func (m *CSUserLeaveZfbTableRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserLeaveZfbTableRqst) ProtoMessage()               {}
func (*CSUserLeaveZfbTableRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{189} }

func (m *CSUserLeaveZfbTableRqst) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

type CSUserLeaveZfbTableRsp struct {
	TableType        *ZFB_TABLE_TYPE `protobuf:"varint,1,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CSUserLeaveZfbTableRsp) Reset()                    { *m = CSUserLeaveZfbTableRsp{} }
func (m *CSUserLeaveZfbTableRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserLeaveZfbTableRsp) ProtoMessage()               {}
func (*CSUserLeaveZfbTableRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{190} }

func (m *CSUserLeaveZfbTableRsp) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

type CSUserYaZhuInZfbRqst struct {
	TableType        *ZFB_TABLE_TYPE       `protobuf:"varint,1,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	DiZhu            *uint64               `protobuf:"varint,2,req,name=DiZhu" json:"DiZhu,omitempty"`
	YaZhuType        *ZFB_TABLE_RULES_TYPE `protobuf:"varint,3,req,name=YaZhuType,enum=rpc.ZFB_TABLE_RULES_TYPE" json:"YaZhuType,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CSUserYaZhuInZfbRqst) Reset()                    { *m = CSUserYaZhuInZfbRqst{} }
func (m *CSUserYaZhuInZfbRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserYaZhuInZfbRqst) ProtoMessage()               {}
func (*CSUserYaZhuInZfbRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{191} }

func (m *CSUserYaZhuInZfbRqst) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

func (m *CSUserYaZhuInZfbRqst) GetDiZhu() uint64 {
	if m != nil && m.DiZhu != nil {
		return *m.DiZhu
	}
	return 0
}

func (m *CSUserYaZhuInZfbRqst) GetYaZhuType() ZFB_TABLE_RULES_TYPE {
	if m != nil && m.YaZhuType != nil {
		return *m.YaZhuType
	}
	return ZFB_TABLE_RULES_TYPE_ZFB_RULES_NONE
}

type CSUserYaZhuInZfbRsp struct {
	TableType        *ZFB_TABLE_TYPE       `protobuf:"varint,1,req,name=TableType,enum=rpc.ZFB_TABLE_TYPE" json:"TableType,omitempty"`
	DiZhu            *uint64               `protobuf:"varint,2,req,name=DiZhu" json:"DiZhu,omitempty"`
	YaZhuType        *ZFB_TABLE_RULES_TYPE `protobuf:"varint,3,req,name=YaZhuType,enum=rpc.ZFB_TABLE_RULES_TYPE" json:"YaZhuType,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CSUserYaZhuInZfbRsp) Reset()                    { *m = CSUserYaZhuInZfbRsp{} }
func (m *CSUserYaZhuInZfbRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserYaZhuInZfbRsp) ProtoMessage()               {}
func (*CSUserYaZhuInZfbRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{192} }

func (m *CSUserYaZhuInZfbRsp) GetTableType() ZFB_TABLE_TYPE {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return ZFB_TABLE_TYPE_TALE_LEVE_NONE
}

func (m *CSUserYaZhuInZfbRsp) GetDiZhu() uint64 {
	if m != nil && m.DiZhu != nil {
		return *m.DiZhu
	}
	return 0
}

func (m *CSUserYaZhuInZfbRsp) GetYaZhuType() ZFB_TABLE_RULES_TYPE {
	if m != nil && m.YaZhuType != nil {
		return *m.YaZhuType
	}
	return ZFB_TABLE_RULES_TYPE_ZFB_RULES_NONE
}

func init() {
	proto.RegisterType((*Rpc)(nil), "rpc.Rpc")
	proto.RegisterType((*Request)(nil), "rpc.Request")
	proto.RegisterType((*Msg)(nil), "rpc.Msg")
	proto.RegisterType((*ThirdPartLogin)(nil), "rpc.ThirdPartLogin")
	proto.RegisterType((*SyncError)(nil), "rpc.SyncError")
	proto.RegisterType((*RpcErrorResponse)(nil), "rpc.RpcErrorResponse")
	proto.RegisterType((*Login)(nil), "rpc.Login")
	proto.RegisterType((*LoginRsp)(nil), "rpc.LoginRsp")
	proto.RegisterType((*CSHeartBeatRqst)(nil), "rpc.CSHeartBeatRqst")
	proto.RegisterType((*CSHeartBeatRsp)(nil), "rpc.CSHeartBeatRsp")
	proto.RegisterType((*CSCommonErrMsg)(nil), "rpc.CSCommonErrMsg")
	proto.RegisterType((*CSUserLoginRqst)(nil), "rpc.CSUserLoginRqst")
	proto.RegisterType((*PlayerBaseInfo)(nil), "rpc.PlayerBaseInfo")
	proto.RegisterType((*PlayerInfo)(nil), "rpc.PlayerInfo")
	proto.RegisterType((*CSUserLoginRsp)(nil), "rpc.CSUserLoginRsp")
	proto.RegisterType((*CSUserLogoutRqst)(nil), "rpc.CSUserLogoutRqst")
	proto.RegisterType((*CSUserLogoutRsp)(nil), "rpc.CSUserLogoutRsp")
	proto.RegisterType((*CSUserSetNickRqst)(nil), "rpc.CSUserSetNickRqst")
	proto.RegisterType((*CSUserSetNickRsp)(nil), "rpc.CSUserSetNickRsp")
	proto.RegisterType((*CSUserSetSexRqst)(nil), "rpc.CSUserSetSexRqst")
	proto.RegisterType((*CSUserSetSexRsp)(nil), "rpc.CSUserSetSexRsp")
	proto.RegisterType((*CSUserAddGoldRqst)(nil), "rpc.CSUserAddGoldRqst")
	proto.RegisterType((*CSUserAddGoldRsp)(nil), "rpc.CSUserAddGoldRsp")
	proto.RegisterType((*CSUserEnterRoomRqst)(nil), "rpc.CSUserEnterRoomRqst")
	proto.RegisterType((*CSUserEnterRoomRsp)(nil), "rpc.CSUserEnterRoomRsp")
	proto.RegisterType((*CSUserLeaveRoomRqst)(nil), "rpc.CSUserLeaveRoomRqst")
	proto.RegisterType((*CSUserLeaveRoomRsp)(nil), "rpc.CSUserLeaveRoomRsp")
	proto.RegisterType((*CSUserChallengeModeInfo)(nil), "rpc.CSUserChallengeModeInfo")
	proto.RegisterType((*CSUserChallengeModeInfoNotify)(nil), "rpc.CSUserChallengeModeInfoNotify")
	proto.RegisterType((*SeatInfo)(nil), "rpc.SeatInfo")
	proto.RegisterType((*ViewSeatInfo)(nil), "rpc.ViewSeatInfo")
	proto.RegisterType((*TableInfo)(nil), "rpc.TableInfo")
	proto.RegisterType((*CSUserStartGameRqst)(nil), "rpc.CSUserStartGameRqst")
	proto.RegisterType((*CSUserStartGameRsp)(nil), "rpc.CSUserStartGameRsp")
	proto.RegisterType((*CSUserTableInfoChangeNotify)(nil), "rpc.CSUserTableInfoChangeNotify")
	proto.RegisterType((*CSUserReadyGameRqst)(nil), "rpc.CSUserReadyGameRqst")
	proto.RegisterType((*CSUserTableRechargeGiveUpRqst)(nil), "rpc.CSUserTableRechargeGiveUpRqst")
	proto.RegisterType((*CSUserReadyGameNotify)(nil), "rpc.CSUserReadyGameNotify")
	proto.RegisterType((*CSUserMjAssignNotify)(nil), "rpc.CSUserMjAssignNotify")
	proto.RegisterType((*CSUserMjOperateRqst)(nil), "rpc.CSUserMjOperateRqst")
	proto.RegisterType((*MjSettlementDetail)(nil), "rpc.MjSettlementDetail")
	proto.RegisterType((*MjSettlementInfo)(nil), "rpc.MjSettlementInfo")
	proto.RegisterType((*CSUserMjOperateNotify)(nil), "rpc.CSUserMjOperateNotify")
	proto.RegisterType((*CSUserMjWaitForOperateNotify)(nil), "rpc.CSUserMjWaitForOperateNotify")
	proto.RegisterType((*CSUserMjGetNotify)(nil), "rpc.CSUserMjGetNotify")
	proto.RegisterType((*CSUserMjLastHandNotify)(nil), "rpc.CSUserMjLastHandNotify")
	proto.RegisterType((*CSUserTableDIsmissNotify)(nil), "rpc.CSUserTableDIsmissNotify")
	proto.RegisterType((*CSUserBaseInfoChangeNotify)(nil), "rpc.CSUserBaseInfoChangeNotify")
	proto.RegisterType((*CSMjOperateRecord)(nil), "rpc.CSMjOperateRecord")
	proto.RegisterType((*CSUserTableCardInfoNotify)(nil), "rpc.CSUserTableCardInfoNotify")
	proto.RegisterType((*CSUserMjSettlementInfoNotify)(nil), "rpc.CSUserMjSettlementInfoNotify")
	proto.RegisterType((*CSUserSubFlowerNotify)(nil), "rpc.CSUserSubFlowerNotify")
	proto.RegisterType((*CSUserChallengeModeResultInfoNotify)(nil), "rpc.CSUserChallengeModeResultInfoNotify")
	proto.RegisterType((*CSUserChallengeModeRankingRewardNotify)(nil), "rpc.CSUserChallengeModeRankingRewardNotify")
	proto.RegisterType((*CSUserChallengeModeRankingListRqst)(nil), "rpc.CSUserChallengeModeRankingListRqst")
	proto.RegisterType((*CSChallengModeRankingInfo)(nil), "rpc.CSChallengModeRankingInfo")
	proto.RegisterType((*CSUserChallengeModeRankingListRsp)(nil), "rpc.CSUserChallengeModeRankingListRsp")
	proto.RegisterType((*RoomAdvanceParam)(nil), "rpc.RoomAdvanceParam")
	proto.RegisterType((*CSUserCreateRoomRqst)(nil), "rpc.CSUserCreateRoomRqst")
	proto.RegisterType((*CSUserCreateRoomRsp)(nil), "rpc.CSUserCreateRoomRsp")
	proto.RegisterType((*CSUserDissolveRoomRqst)(nil), "rpc.CSUserDissolveRoomRqst")
	proto.RegisterType((*CSUserDissolveRoomRsp)(nil), "rpc.CSUserDissolveRoomRsp")
	proto.RegisterType((*CSUserDissolveRoomNotify)(nil), "rpc.CSUserDissolveRoomNotify")
	proto.RegisterType((*CSUserRenewRoomRqst)(nil), "rpc.CSUserRenewRoomRqst")
	proto.RegisterType((*CSUserRenewRoomRsp)(nil), "rpc.CSUserRenewRoomRsp")
	proto.RegisterType((*CSUserCreateDissolveRoomCostNotify)(nil), "rpc.CSUserCreateDissolveRoomCostNotify")
	proto.RegisterType((*CSUserRoomInfoChangeNotify)(nil), "rpc.CSUserRoomInfoChangeNotify")
	proto.RegisterType((*CSUserTableChatRqst)(nil), "rpc.CSUserTableChatRqst")
	proto.RegisterType((*CSUserTableChatNotify)(nil), "rpc.CSUserTableChatNotify")
	proto.RegisterType((*CSUserTableDissolveApplyRqst)(nil), "rpc.CSUserTableDissolveApplyRqst")
	proto.RegisterType((*CSUserTableAnswerDissolveApplyRqst)(nil), "rpc.CSUserTableAnswerDissolveApplyRqst")
	proto.RegisterType((*CSUserTableDissolveApplyNotify)(nil), "rpc.CSUserTableDissolveApplyNotify")
	proto.RegisterType((*CSMatchWinDetailInfo)(nil), "rpc.CSMatchWinDetailInfo")
	proto.RegisterType((*CSMatchWinRecord)(nil), "rpc.CSMatchWinRecord")
	proto.RegisterType((*CSUserTableMatchWinRecordNotify)(nil), "rpc.CSUserTableMatchWinRecordNotify")
	proto.RegisterType((*UserReward)(nil), "rpc.UserReward")
	proto.RegisterType((*UserEmailInfo)(nil), "rpc.UserEmailInfo")
	proto.RegisterType((*CSUserGetEmailInfoRqst)(nil), "rpc.CSUserGetEmailInfoRqst")
	proto.RegisterType((*CSUserGetEmailInfoRsp)(nil), "rpc.CSUserGetEmailInfoRsp")
	proto.RegisterType((*CSUserOpenEmailRqst)(nil), "rpc.CSUserOpenEmailRqst")
	proto.RegisterType((*CSUserOpenEmailRsp)(nil), "rpc.CSUserOpenEmailRsp")
	proto.RegisterType((*CSUserGetEmailRewardRqst)(nil), "rpc.CSUserGetEmailRewardRqst")
	proto.RegisterType((*CSUserGetEmailRewardRsp)(nil), "rpc.CSUserGetEmailRewardRsp")
	proto.RegisterType((*CSUserDeleteEmailRqst)(nil), "rpc.CSUserDeleteEmailRqst")
	proto.RegisterType((*CSUserDeleteEmailRsp)(nil), "rpc.CSUserDeleteEmailRsp")
	proto.RegisterType((*CSUserNewEmailNotify)(nil), "rpc.CSUserNewEmailNotify")
	proto.RegisterType((*CSUserSignInRqst)(nil), "rpc.CSUserSignInRqst")
	proto.RegisterType((*CSUserSignInRsp)(nil), "rpc.CSUserSignInRsp")
	proto.RegisterType((*CSUserGetConsecutiveSignInNumberRqst)(nil), "rpc.CSUserGetConsecutiveSignInNumberRqst")
	proto.RegisterType((*CSUserGetConsecutiveSignInNumberRsp)(nil), "rpc.CSUserGetConsecutiveSignInNumberRsp")
	proto.RegisterType((*SignInRewardCfg)(nil), "rpc.SignInRewardCfg")
	proto.RegisterType((*CSUserGetSignInRewardCfgRqst)(nil), "rpc.CSUserGetSignInRewardCfgRqst")
	proto.RegisterType((*CSUserGetSignInRewardCfgRsp)(nil), "rpc.CSUserGetSignInRewardCfgRsp")
	proto.RegisterType((*CSUserGetOrderRqst)(nil), "rpc.CSUserGetOrderRqst")
	proto.RegisterType((*CSUserGetOrderRsp)(nil), "rpc.CSUserGetOrderRsp")
	proto.RegisterType((*CSUserAuthRedeiptRqst)(nil), "rpc.CSUserAuthRedeiptRqst")
	proto.RegisterType((*CSUserAuthRedeiptRsp)(nil), "rpc.CSUserAuthRedeiptRsp")
	proto.RegisterType((*UserGoldRank)(nil), "rpc.UserGoldRank")
	proto.RegisterType((*CSUserGetGoldRankListRqst)(nil), "rpc.CSUserGetGoldRankListRqst")
	proto.RegisterType((*CSUserGetGoldRankListRsp)(nil), "rpc.CSUserGetGoldRankListRsp")
	proto.RegisterType((*UserWinCountRank)(nil), "rpc.UserWinCountRank")
	proto.RegisterType((*CSUserGetWinCountRankListRqst)(nil), "rpc.CSUserGetWinCountRankListRqst")
	proto.RegisterType((*CSUserGetWinCountRankListRsp)(nil), "rpc.CSUserGetWinCountRankListRsp")
	proto.RegisterType((*UserTaskInfo)(nil), "rpc.UserTaskInfo")
	proto.RegisterType((*CSUserTasks)(nil), "rpc.CSUserTasks")
	proto.RegisterType((*CSUserGetAllDailyTasksRqst)(nil), "rpc.CSUserGetAllDailyTasksRqst")
	proto.RegisterType((*CSUserGetAllAchievementTasksRqst)(nil), "rpc.CSUserGetAllAchievementTasksRqst")
	proto.RegisterType((*CSUserGetTaskRewardRqst)(nil), "rpc.CSUserGetTaskRewardRqst")
	proto.RegisterType((*CSUserGetTaskRewardRsp)(nil), "rpc.CSUserGetTaskRewardRsp")
	proto.RegisterType((*CSUserRegAccountRqst)(nil), "rpc.CSUserRegAccountRqst")
	proto.RegisterType((*CSUserRegAccountRsp)(nil), "rpc.CSUserRegAccountRsp")
	proto.RegisterType((*NormalAuthMsg)(nil), "rpc.NormalAuthMsg")
	proto.RegisterType((*TencentAuthMsg)(nil), "rpc.TencentAuthMsg")
	proto.RegisterType((*VisitorAuthMsg)(nil), "rpc.VisitorAuthMsg")
	proto.RegisterType((*CSUserAuthAccountRqst)(nil), "rpc.CSUserAuthAccountRqst")
	proto.RegisterType((*CSUserAuthAccountRsp)(nil), "rpc.CSUserAuthAccountRsp")
	proto.RegisterType((*CSUserChangePasswordRqst)(nil), "rpc.CSUserChangePasswordRqst")
	proto.RegisterType((*CSUserChangePasswordRsp)(nil), "rpc.CSUserChangePasswordRsp")
	proto.RegisterType((*CSUserConnectSwitchNotify)(nil), "rpc.CSUserConnectSwitchNotify")
	proto.RegisterType((*CSUserMatchRecordListRqst)(nil), "rpc.CSUserMatchRecordListRqst")
	proto.RegisterType((*CSMatchRecordInfo)(nil), "rpc.CSMatchRecordInfo")
	proto.RegisterType((*CSUserMatchRecordListRsp)(nil), "rpc.CSUserMatchRecordListRsp")
	proto.RegisterType((*CSSystemMsgInfo)(nil), "rpc.CSSystemMsgInfo")
	proto.RegisterType((*CSSystemMsgNotify)(nil), "rpc.CSSystemMsgNotify")
	proto.RegisterType((*CSUserDiamondToGoldRqst)(nil), "rpc.CSUserDiamondToGoldRqst")
	proto.RegisterType((*CSUserMjHuanSanZhangNotify)(nil), "rpc.CSUserMjHuanSanZhangNotify")
	proto.RegisterType((*CSUserDiamondToGoldRsp)(nil), "rpc.CSUserDiamondToGoldRsp")
	proto.RegisterType((*CSUserReconnectEnterRoomRqst)(nil), "rpc.CSUserReconnectEnterRoomRqst")
	proto.RegisterType((*CSUserReconnectEnterRoomRsp)(nil), "rpc.CSUserReconnectEnterRoomRsp")
	proto.RegisterType((*UserLastGameInfo)(nil), "rpc.UserLastGameInfo")
	proto.RegisterType((*CSUserLastGameInfoNotify)(nil), "rpc.CSUserLastGameInfoNotify")
	proto.RegisterType((*UserSingleBoardInfo)(nil), "rpc.UserSingleBoardInfo")
	proto.RegisterType((*CSUserAlreadyFinishGameInfoNotify)(nil), "rpc.CSUserAlreadyFinishGameInfoNotify")
	proto.RegisterType((*CSUserTableReadyShutDownNotify)(nil), "rpc.CSUserTableReadyShutDownNotify")
	proto.RegisterType((*BuyRecordContext)(nil), "rpc.BuyRecordContext")
	proto.RegisterType((*CSUserGetBuyRecordRqst)(nil), "rpc.CSUserGetBuyRecordRqst")
	proto.RegisterType((*CSUserGetBuyRecordRsp)(nil), "rpc.CSUserGetBuyRecordRsp")
	proto.RegisterType((*UserGameInitInfo)(nil), "rpc.UserGameInitInfo")
	proto.RegisterType((*UserGameOperation)(nil), "rpc.UserGameOperation")
	proto.RegisterType((*CSUserGameAllOperationNotify)(nil), "rpc.CSUserGameAllOperationNotify")
	proto.RegisterType((*ClubMatchContext)(nil), "rpc.ClubMatchContext")
	proto.RegisterType((*CSUserGetClubMatchInfoRqst)(nil), "rpc.CSUserGetClubMatchInfoRqst")
	proto.RegisterType((*CSUserGetClubMatchInfoRsp)(nil), "rpc.CSUserGetClubMatchInfoRsp")
	proto.RegisterType((*ClubMemberBaseInfo)(nil), "rpc.ClubMemberBaseInfo")
	proto.RegisterType((*ClubBaseInfo)(nil), "rpc.ClubBaseInfo")
	proto.RegisterType((*CSPlayerClubPageRqst)(nil), "rpc.CSPlayerClubPageRqst")
	proto.RegisterType((*CSPlayerClubPageRsp)(nil), "rpc.CSPlayerClubPageRsp")
	proto.RegisterType((*CSSearchClubRqst)(nil), "rpc.CSSearchClubRqst")
	proto.RegisterType((*CSSearchClubRsp)(nil), "rpc.CSSearchClubRsp")
	proto.RegisterType((*CSJoinClubRqst)(nil), "rpc.CSJoinClubRqst")
	proto.RegisterType((*CSJoinClubRsp)(nil), "rpc.CSJoinClubRsp")
	proto.RegisterType((*CSClubApplicationNotify)(nil), "rpc.CSClubApplicationNotify")
	proto.RegisterType((*CSQuitClubRqst)(nil), "rpc.CSQuitClubRqst")
	proto.RegisterType((*CSQuitClubRsp)(nil), "rpc.CSQuitClubRsp")
	proto.RegisterType((*CSQuitClubNotify)(nil), "rpc.CSQuitClubNotify")
	proto.RegisterType((*CSClubInfoChangeNotify)(nil), "rpc.CSClubInfoChangeNotify")
	proto.RegisterType((*CSSetClubInfoRqst)(nil), "rpc.CSSetClubInfoRqst")
	proto.RegisterType((*CSSetClubInfoRsp)(nil), "rpc.CSSetClubInfoRsp")
	proto.RegisterType((*CSGetApplicantsRqst)(nil), "rpc.CSGetApplicantsRqst")
	proto.RegisterType((*CSGetApplicantsRsp)(nil), "rpc.CSGetApplicantsRsp")
	proto.RegisterType((*CSRefuseApplicantRqst)(nil), "rpc.CSRefuseApplicantRqst")
	proto.RegisterType((*CSRefuseApplicantRsp)(nil), "rpc.CSRefuseApplicantRsp")
	proto.RegisterType((*CSAcceptApplicantRqst)(nil), "rpc.CSAcceptApplicantRqst")
	proto.RegisterType((*CSAcceptApplicantRsp)(nil), "rpc.CSAcceptApplicantRsp")
	proto.RegisterType((*CSAddClubMemberNotify)(nil), "rpc.CSAddClubMemberNotify")
	proto.RegisterType((*CSGetMembersRqst)(nil), "rpc.CSGetMembersRqst")
	proto.RegisterType((*CSGetMembersRsp)(nil), "rpc.CSGetMembersRsp")
	proto.RegisterType((*CSRemoveMemberRqst)(nil), "rpc.CSRemoveMemberRqst")
	proto.RegisterType((*CSRemoveMemberRsp)(nil), "rpc.CSRemoveMemberRsp")
	proto.RegisterType((*CSRemoveClubMemberNotify)(nil), "rpc.CSRemoveClubMemberNotify")
	proto.RegisterType((*CSDissolveClubRqst)(nil), "rpc.CSDissolveClubRqst")
	proto.RegisterType((*CSDissolveClubRsp)(nil), "rpc.CSDissolveClubRsp")
	proto.RegisterType((*Contribution)(nil), "rpc.Contribution")
	proto.RegisterType((*CSGetContributionRqst)(nil), "rpc.CSGetContributionRqst")
	proto.RegisterType((*CSGetContributionRsp)(nil), "rpc.CSGetContributionRsp")
	proto.RegisterType((*CSGetCaptainRewardRqst)(nil), "rpc.CSGetCaptainRewardRqst")
	proto.RegisterType((*CSGetCaptainRewardRsp)(nil), "rpc.CSGetCaptainRewardRsp")
	proto.RegisterType((*UserClubInfo)(nil), "rpc.UserClubInfo")
	proto.RegisterType((*CSUserGetClubInfoRqst)(nil), "rpc.CSUserGetClubInfoRqst")
	proto.RegisterType((*CSUserGetClubInfoRsp)(nil), "rpc.CSUserGetClubInfoRsp")
	proto.RegisterType((*CSUserNewClubInfoNotify)(nil), "rpc.CSUserNewClubInfoNotify")
	proto.RegisterType((*CSClubMemberOnlineNotify)(nil), "rpc.CSClubMemberOnlineNotify")
	proto.RegisterType((*CSUserInviteInPriviteRoomNotify)(nil), "rpc.CSUserInviteInPriviteRoomNotify")
	proto.RegisterType((*CSUserEnterZfbTableRqst)(nil), "rpc.CSUserEnterZfbTableRqst")
	proto.RegisterType((*CSUserEnterZfbTableRsp)(nil), "rpc.CSUserEnterZfbTableRsp")
	proto.RegisterType((*CSUserZfbTableChangeInfoNotity)(nil), "rpc.CSUserZfbTableChangeInfoNotity")
	proto.RegisterType((*CSUserZfbSettleInfoNotity)(nil), "rpc.CSUserZfbSettleInfoNotity")
	proto.RegisterType((*ZfbRecordInfo)(nil), "rpc.ZfbRecordInfo")
	proto.RegisterType((*CSUserZfbRecordNotity)(nil), "rpc.CSUserZfbRecordNotity")
	proto.RegisterType((*CSUserLeaveZfbTableRqst)(nil), "rpc.CSUserLeaveZfbTableRqst")
	proto.RegisterType((*CSUserLeaveZfbTableRsp)(nil), "rpc.CSUserLeaveZfbTableRsp")
	proto.RegisterType((*CSUserYaZhuInZfbRqst)(nil), "rpc.CSUserYaZhuInZfbRqst")
	proto.RegisterType((*CSUserYaZhuInZfbRsp)(nil), "rpc.CSUserYaZhuInZfbRsp")
	proto.RegisterEnum("rpc.USER_RECHARGE_PLATFORM", USER_RECHARGE_PLATFORM_name, USER_RECHARGE_PLATFORM_value)
	proto.RegisterEnum("rpc.USER_IDENTITY_TYPE", USER_IDENTITY_TYPE_name, USER_IDENTITY_TYPE_value)
	proto.RegisterEnum("rpc.RESULT_TYPE", RESULT_TYPE_name, RESULT_TYPE_value)
	proto.RegisterEnum("rpc.USER_RECHARGE_RESULT", USER_RECHARGE_RESULT_name, USER_RECHARGE_RESULT_value)
	proto.RegisterEnum("rpc.CURRENCY_TYPE", CURRENCY_TYPE_name, CURRENCY_TYPE_value)
	proto.RegisterEnum("rpc.ROOM_TYPE", ROOM_TYPE_name, ROOM_TYPE_value)
	proto.RegisterEnum("rpc.ZFB_TABLE_TYPE", ZFB_TABLE_TYPE_name, ZFB_TABLE_TYPE_value)
	proto.RegisterEnum("rpc.ZFB_TABLE_RULES_TYPE", ZFB_TABLE_RULES_TYPE_name, ZFB_TABLE_RULES_TYPE_value)
	proto.RegisterEnum("rpc.RoomState", RoomState_name, RoomState_value)
	proto.RegisterEnum("rpc.TableDefine", TableDefine_name, TableDefine_value)
	proto.RegisterEnum("rpc.TableState", TableState_name, TableState_value)
	proto.RegisterEnum("rpc.MjUserState", MjUserState_name, MjUserState_value)
	proto.RegisterEnum("rpc.PlayerDefine", PlayerDefine_name, PlayerDefine_value)
	proto.RegisterEnum("rpc.MJ_OPERATE_MASK", MJ_OPERATE_MASK_name, MJ_OPERATE_MASK_value)
	proto.RegisterEnum("rpc.MJ_SETTLEMENT_TYPE", MJ_SETTLEMENT_TYPE_name, MJ_SETTLEMENT_TYPE_value)
	proto.RegisterEnum("rpc.FINAL_CARD_TYPE", FINAL_CARD_TYPE_name, FINAL_CARD_TYPE_value)
	proto.RegisterEnum("rpc.HUAN_SAN_ZHANG_TYPE", HUAN_SAN_ZHANG_TYPE_name, HUAN_SAN_ZHANG_TYPE_value)
	proto.RegisterEnum("rpc.TableFinalDecision", TableFinalDecision_name, TableFinalDecision_value)
	proto.RegisterEnum("rpc.GAME_EMAIL_TYPE", GAME_EMAIL_TYPE_name, GAME_EMAIL_TYPE_value)
	proto.RegisterEnum("rpc.GAME_EMAIL_NOTIFY_TYPE", GAME_EMAIL_NOTIFY_TYPE_name, GAME_EMAIL_NOTIFY_TYPE_value)
	proto.RegisterEnum("rpc.GAME_EMAIL_STATUS", GAME_EMAIL_STATUS_name, GAME_EMAIL_STATUS_value)
	proto.RegisterEnum("rpc.GAME_TASK_TYPE", GAME_TASK_TYPE_name, GAME_TASK_TYPE_value)
	proto.RegisterEnum("rpc.TASK_CONDITION_TYPE", TASK_CONDITION_TYPE_name, TASK_CONDITION_TYPE_value)
	proto.RegisterEnum("rpc.TASK_HSZ_TYPE", TASK_HSZ_TYPE_name, TASK_HSZ_TYPE_value)
	proto.RegisterEnum("rpc.CLUB_MEMBER_TYPE", CLUB_MEMBER_TYPE_name, CLUB_MEMBER_TYPE_value)
	proto.RegisterEnum("rpc.CLUB_STATUS", CLUB_STATUS_name, CLUB_STATUS_value)
	proto.RegisterEnum("rpc.PLAYER_CLUB_OPERATOR", PLAYER_CLUB_OPERATOR_name, PLAYER_CLUB_OPERATOR_value)
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 8550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xcc, 0x7c, 0x4d, 0x6c, 0x24, 0x49,
	0x76, 0xde, 0xd6, 0x1f, 0xc9, 0x7a, 0x64, 0x91, 0xc9, 0x6c, 0x4e, 0x37, 0x67, 0xa6, 0x67, 0x86,
	0x93, 0xd3, 0xea, 0xe1, 0x72, 0x67, 0xba, 0xa7, 0xb9, 0xb3, 0x9a, 0x99, 0x5d, 0xed, 0xae, 0x92,
	0x55, 0xc5, 0x62, 0xf6, 0xd4, 0x0f, 0x27, 0xab, 0xd8, 0x7f, 0x5e, 0xa0, 0x90, 0x5d, 0x15, 0x4d,
	0x66, 0x77, 0x31, 0xb3, 0x54, 0x99, 0xd5, 0x6c, 0x2e, 0xbc, 0x8b, 0x95, 0x0c, 0xc8, 0x17, 0x1b,
	0x32, 0x6c, 0x40, 0x12, 0x0c, 0xf8, 0x62, 0xf9, 0x4f, 0xb2, 0x21, 0xc8, 0x07, 0x1f, 0x7c, 0xb0,
	0x21, 0xc0, 0x3e, 0x18, 0xf0, 0xc1, 0x36, 0xec, 0xab, 0x21, 0x08, 0x06, 0x0c, 0x5f, 0x0c, 0xc3,
	0xf0, 0x1f, 0xa0, 0x83, 0x60, 0xc4, 0x8b, 0x88, 0xcc, 0x88, 0xcc, 0x2c, 0x16, 0xbb, 0xb7, 0x77,
	0xb5, 0xb7, 0x8c, 0xef, 0xbd, 0x88, 0x78, 0xf1, 0x22, 0xe2, 0x45, 0xc4, 0x8b, 0x17, 0x09, 0xe5,
	0xd3, 0xe0, 0xf8, 0xd6, 0x78, 0xe2, 0x87, 0xbe, 0x5e, 0x98, 0x8c, 0x07, 0xc6, 0xc7, 0x50, 0xb0,
	0xc7, 0x03, 0xfd, 0x26, 0x2c, 0x4e, 0xc8, 0xaf, 0x4d, 0x49, 0x10, 0x6e, 0xe6, 0xb6, 0x0a, 0xdb,
	0xcb, 0xbb, 0x2b, 0xb7, 0x26, 0xe3, 0xc1, 0x2d, 0x9b, 0x61, 0xb6, 0x20, 0x1a, 0x87, 0xb0, 0xc8,
	0x31, 0xfd, 0x2a, 0x2c, 0x9c, 0x92, 0xf0, 0xc4, 0x1f, 0x6e, 0xe6, 0xb6, 0xf2, 0xdb, 0x65, 0x9b,
	0xa7, 0xf4, 0x8f, 0x41, 0x0f, 0xc8, 0xc4, 0x75, 0x46, 0xee, 0x0f, 0xc9, 0xb0, 0x2f, 0x4a, 0xcd,
	0x6f, 0xe5, 0xb6, 0x57, 0xec, 0xf5, 0x98, 0xc2, 0x8b, 0xa1, 0x02, 0xb4, 0x82, 0x63, 0x5d, 0x87,
	0xe2, 0xc0, 0x1f, 0x92, 0xcd, 0xdc, 0x56, 0x6e, 0xbb, 0x6c, 0xe3, 0x37, 0xc5, 0x42, 0xf2, 0x82,
	0xe5, 0x2d, 0xdb, 0xf8, 0x6d, 0x7c, 0x0e, 0xab, 0xbd, 0x13, 0x77, 0x32, 0x3c, 0x74, 0x26, 0x61,
	0xd3, 0x3f, 0x76, 0x3d, 0xfd, 0x26, 0xac, 0xde, 0x27, 0xee, 0x03, 0xd7, 0xdb, 0x73, 0x02, 0x62,
	0x79, 0x4f, 0x7c, 0x94, 0x67, 0xc5, 0x4e, 0xa0, 0xc6, 0x7b, 0x50, 0xee, 0x9e, 0x7b, 0x83, 0xfa,
	0x64, 0xe2, 0x4f, 0xa2, 0xa2, 0x73, 0x52, 0xd1, 0xdf, 0x03, 0xcd, 0x1e, 0x33, 0xba, 0x4d, 0x82,
	0xb1, 0xef, 0x05, 0x64, 0x66, 0x23, 0x63, 0xd1, 0xf2, 0x51, 0xfe, 0x37, 0xa1, 0xc4, 0x24, 0xd2,
	0xa0, 0x30, 0x75, 0x59, 0x8e, 0xa2, 0x4d, 0x3f, 0x8d, 0xeb, 0xb0, 0x84, 0x24, 0x3b, 0x18, 0x67,
	0x50, 0x3f, 0x86, 0xb5, 0x6a, 0xf7, 0x80, 0x38, 0x93, 0x70, 0x8f, 0x38, 0xa1, 0xfd, 0x6b, 0x41,
	0xa8, 0xbf, 0x05, 0x4b, 0x36, 0x09, 0xc8, 0xe4, 0x39, 0x61, 0x9c, 0x15, 0x3b, 0x4a, 0x1b, 0x9f,
	0xc0, 0xaa, 0xcc, 0x1e, 0x8c, 0xf5, 0x77, 0x01, 0xba, 0x94, 0x36, 0xe9, 0xb9, 0xa7, 0x84, 0x97,
	0x2c, 0x21, 0x46, 0x48, 0x73, 0x54, 0xfd, 0xd3, 0x53, 0xdf, 0xab, 0x4f, 0x26, 0x54, 0xdd, 0xd7,
	0xa1, 0x4c, 0xeb, 0xa9, 0x9e, 0x0e, 0xad, 0x1a, 0xaf, 0x20, 0x06, 0x28, 0x15, 0xd5, 0x50, 0xa5,
	0x3d, 0x92, 0x67, 0xd4, 0x08, 0xa0, 0x6d, 0xf7, 0xc7, 0xe1, 0x9d, 0xcd, 0xc2, 0x56, 0x6e, 0xbb,
	0x64, 0xe3, 0x37, 0xc7, 0x76, 0x37, 0x8b, 0x11, 0xb6, 0x6b, 0xec, 0xd3, 0x66, 0x1d, 0x05, 0x64,
	0xc2, 0x9a, 0x4e, 0x9b, 0xf5, 0x4d, 0x58, 0xb2, 0x86, 0xc4, 0x0b, 0xdd, 0xf0, 0x1c, 0x6b, 0x5d,
	0xdd, 0xbd, 0x86, 0xe3, 0xec, 0xa8, 0x5b, 0xb7, 0xfb, 0x56, 0xad, 0xde, 0xee, 0x59, 0xbd, 0x87,
	0xfd, 0xde, 0xc3, 0xc3, 0xba, 0x1d, 0x31, 0x1a, 0xff, 0x25, 0x0f, 0xab, 0x87, 0x23, 0xe7, 0x9c,
	0x4c, 0x44, 0x5f, 0x52, 0x1d, 0x1e, 0xc5, 0x3a, 0x3c, 0x72, 0x87, 0x54, 0x61, 0x6d, 0x77, 0xf0,
	0xac, 0xed, 0x9c, 0x12, 0xde, 0x29, 0x51, 0x9a, 0x72, 0x77, 0xc9, 0x8b, 0xcd, 0xc2, 0x56, 0x7e,
	0xbb, 0x64, 0xd3, 0x4f, 0xca, 0x4d, 0x05, 0x6b, 0xf8, 0xa3, 0xe1, 0x66, 0x71, 0x2b, 0xbf, 0x5d,
	0xb0, 0xa3, 0xb4, 0xbe, 0x0d, 0x6b, 0xd5, 0x69, 0x10, 0xfa, 0xa7, 0xb6, 0xef, 0x9f, 0x1e, 0xfa,
	0xae, 0x17, 0x6e, 0x96, 0x90, 0x25, 0x09, 0x53, 0x35, 0x1d, 0x10, 0x67, 0x68, 0x9d, 0x3a, 0xc7,
	0x64, 0x73, 0x01, 0x2b, 0x8d, 0x01, 0xa5, 0xad, 0x8b, 0x97, 0x6c, 0xab, 0xbe, 0x05, 0xcb, 0x54,
	0x90, 0x9a, 0xeb, 0x9c, 0xfa, 0xde, 0x70, 0x73, 0x09, 0x2b, 0x96, 0x21, 0x5a, 0x69, 0xd5, 0xf7,
	0x3c, 0x32, 0x08, 0xad, 0xf1, 0x66, 0x99, 0xf5, 0x4d, 0x04, 0x50, 0x6a, 0xd3, 0xf7, 0x8e, 0xdd,
	0x70, 0x3a, 0x24, 0x9b, 0xc0, 0xa8, 0x11, 0x40, 0x9b, 0xdd, 0x74, 0x42, 0x46, 0x5c, 0x66, 0xa3,
	0x4a, 0xa4, 0x8d, 0xef, 0x02, 0x30, 0x25, 0xa3, 0x82, 0x6f, 0xc3, 0x92, 0x32, 0x9d, 0x96, 0x77,
	0xaf, 0xa0, 0xf0, 0x6a, 0x3f, 0xd8, 0x11, 0x93, 0xf1, 0x7b, 0x39, 0x3a, 0xc6, 0xe2, 0xde, 0x0e,
	0x50, 0x16, 0x2b, 0x68, 0x93, 0x33, 0x0a, 0x62, 0x21, 0x25, 0x3b, 0x06, 0xf4, 0x0f, 0xa0, 0x88,
	0xa5, 0xe7, 0xb1, 0xf4, 0x35, 0xa9, 0x74, 0x2c, 0x19, 0x89, 0xfa, 0x27, 0xb0, 0x5c, 0x9d, 0x4e,
	0xa8, 0xc6, 0x7b, 0xe7, 0x63, 0x82, 0x3d, 0xb8, 0xba, 0xbb, 0xca, 0x4c, 0x53, 0xa7, 0xd3, 0x62,
	0xda, 0x93, 0x59, 0x50, 0x3d, 0x2c, 0x69, 0xb1, 0xae, 0xa5, 0xea, 0x11, 0x80, 0x71, 0x0b, 0xb4,
	0x48, 0x48, 0x7f, 0x1a, 0x4d, 0x35, 0x8a, 0xe0, 0xc8, 0x61, 0x93, 0x3c, 0x4a, 0xb3, 0x99, 0x29,
	0xf1, 0x07, 0xe3, 0x0b, 0xd9, 0xbf, 0x05, 0xeb, 0x8c, 0xbd, 0x4b, 0x42, 0x3a, 0xfa, 0xb0, 0xfc,
	0x2d, 0x58, 0x6e, 0x93, 0xb3, 0x68, 0x70, 0xb2, 0x3c, 0x32, 0x64, 0x7c, 0x2a, 0xa4, 0x12, 0xd9,
	0x82, 0x31, 0xcd, 0xd5, 0x19, 0x0d, 0x93, 0xb9, 0x24, 0xc8, 0xd8, 0x91, 0x72, 0x75, 0xc9, 0x0b,
	0xac, 0xeb, 0x2a, 0x2c, 0xb4, 0xc9, 0x19, 0x1d, 0xec, 0x4c, 0xdf, 0x3c, 0x65, 0x7c, 0x5d, 0xb4,
	0x83, 0xf3, 0x06, 0x63, 0xca, 0xda, 0x19, 0x0d, 0x25, 0x56, 0x96, 0x32, 0xee, 0x88, 0x36, 0x98,
	0xc3, 0x21, 0x9d, 0x0f, 0x58, 0xee, 0x75, 0x28, 0xd3, 0xef, 0x7b, 0xce, 0x68, 0x4a, 0x84, 0xb9,
	0x88, 0x00, 0xe3, 0x73, 0x21, 0x89, 0xc8, 0x12, 0x8c, 0xf5, 0x1b, 0x50, 0x11, 0x33, 0x2a, 0xce,
	0x55, 0xb4, 0x55, 0xd0, 0xf8, 0xd3, 0x1c, 0x5c, 0x61, 0x59, 0xeb, 0x5e, 0x48, 0xb0, 0x97, 0xb0,
	0xbe, 0x1d, 0x58, 0x8a, 0x3a, 0x3d, 0x97, 0xd9, 0xe9, 0x11, 0x9d, 0x36, 0x84, 0x77, 0x37, 0xb3,
	0x54, 0x3c, 0xa5, 0x4e, 0x85, 0xc2, 0x45, 0x53, 0xa1, 0xa8, 0x4e, 0x05, 0x5a, 0x62, 0x75, 0x34,
	0x7d, 0x6c, 0x0d, 0x71, 0xe2, 0x17, 0x6d, 0x9e, 0xd2, 0x0d, 0x58, 0xc1, 0xc9, 0xef, 0x04, 0xc1,
	0x99, 0x3f, 0x19, 0xf2, 0x29, 0xaf, 0x60, 0xc2, 0x32, 0x2d, 0x46, 0x96, 0xc9, 0xf8, 0xa3, 0x1c,
	0xe8, 0xc9, 0x36, 0x06, 0xe3, 0xd7, 0xd2, 0xc4, 0x1d, 0xd0, 0xa2, 0x32, 0xbb, 0xd3, 0xc1, 0x80,
	0x04, 0x01, 0xb6, 0x74, 0xc9, 0x4e, 0xe1, 0x94, 0xb7, 0xe5, 0x7a, 0xd5, 0xe9, 0x64, 0x42, 0xbc,
	0xc1, 0x39, 0xeb, 0x93, 0x22, 0x4a, 0x99, 0xc2, 0x8d, 0x67, 0xa2, 0x57, 0x9a, 0xc4, 0x79, 0x4e,
	0x5e, 0x6b, 0xaf, 0x70, 0xfd, 0x14, 0x62, 0xfd, 0x3c, 0x10, 0xea, 0x89, 0x2b, 0x7b, 0x3d, 0xea,
	0x31, 0xfe, 0x63, 0x0e, 0xae, 0xb1, 0xa2, 0xab, 0x27, 0xce, 0x68, 0x44, 0xbc, 0x63, 0xd2, 0xf2,
	0x87, 0x6c, 0x05, 0x31, 0x60, 0xa5, 0x37, 0x21, 0x4e, 0x30, 0x9d, 0x90, 0xaa, 0x33, 0x11, 0x8b,
	0xac, 0x82, 0xe9, 0x1f, 0xc1, 0xba, 0x9c, 0xae, 0xfa, 0x53, 0x2f, 0xe4, 0x55, 0xa4, 0x09, 0x54,
	0x0a, 0x5c, 0x16, 0x02, 0x3e, 0xd8, 0x78, 0x8a, 0xee, 0x4f, 0xa2, 0xea, 0x59, 0x11, 0x6c, 0xbc,
	0x25, 0x50, 0x85, 0x8f, 0xae, 0xda, 0x01, 0x8e, 0x3e, 0x99, 0x0f, 0x51, 0xe3, 0x19, 0xbc, 0x33,
	0xa3, 0x51, 0x6d, 0x3f, 0x74, 0x9f, 0x9c, 0xeb, 0x77, 0x61, 0x3d, 0x45, 0xe2, 0x46, 0xfc, 0x3a,
	0xea, 0x70, 0x46, 0x76, 0x3b, 0x9d, 0xcd, 0xf8, 0x93, 0x1c, 0x2c, 0x75, 0x89, 0x13, 0xa2, 0xce,
	0xae, 0xc2, 0x02, 0x7e, 0x0b, 0x6d, 0xf1, 0x94, 0x7e, 0x0b, 0xca, 0x68, 0x5b, 0x42, 0x27, 0x64,
	0x8b, 0xef, 0xea, 0xae, 0x86, 0x15, 0xb5, 0x9e, 0x46, 0xb8, 0x1d, 0xb3, 0xa0, 0x6d, 0x7b, 0xf2,
	0xa4, 0xe9, 0x7a, 0x64, 0x7f, 0xe4, 0x1c, 0xf3, 0x11, 0x2b, 0x43, 0xca, 0xf2, 0x53, 0xbc, 0xc4,
	0xf2, 0xa3, 0x7f, 0x0e, 0xd7, 0xba, 0xa1, 0x33, 0x09, 0x5b, 0x4e, 0x38, 0x38, 0x51, 0x07, 0x79,
	0x69, 0x2b, 0xb7, 0x5d, 0xb0, 0x67, 0x91, 0x8d, 0xef, 0xc3, 0xca, 0x3d, 0x97, 0x5a, 0x49, 0xde,
	0xc8, 0x97, 0x5e, 0xf9, 0xfe, 0xac, 0x00, 0xe5, 0x9e, 0xf3, 0x78, 0x14, 0x8d, 0xab, 0x3d, 0xc7,
	0x7b, 0x46, 0x2d, 0xad, 0xa4, 0x29, 0x05, 0xa3, 0x96, 0x69, 0xdf, 0x9d, 0x04, 0x61, 0xcd, 0x1d,
	0x44, 0xdb, 0xab, 0x08, 0x60, 0x9b, 0xb9, 0x81, 0xef, 0x0d, 0x91, 0xcc, 0xc6, 0x92, 0x84, 0xe8,
	0x9b, 0xb0, 0x48, 0x07, 0x5d, 0x7b, 0x7a, 0xca, 0x07, 0x92, 0x48, 0xea, 0xb7, 0x01, 0x42, 0x2a,
	0x08, 0xeb, 0x88, 0x12, 0x76, 0x04, 0x5b, 0x58, 0x7b, 0x11, 0x6c, 0x4b, 0x2c, 0xfa, 0x37, 0xa0,
	0x2c, 0xda, 0x1d, 0x6c, 0x2e, 0xe0, 0xbe, 0xbf, 0x82, 0xfc, 0x02, 0xb5, 0x63, 0xba, 0xfe, 0x19,
	0x54, 0x64, 0x45, 0x05, 0x9b, 0x8b, 0x98, 0x61, 0x1d, 0x33, 0xc8, 0x14, 0x5b, 0xe5, 0xd3, 0x77,
	0x61, 0xe3, 0xbe, 0xe3, 0x86, 0x36, 0xf1, 0xc8, 0x19, 0xce, 0x59, 0xf7, 0x94, 0x74, 0xa6, 0x21,
	0x6e, 0x6e, 0x2a, 0x76, 0x26, 0x8d, 0xaa, 0xb1, 0x4b, 0xc2, 0x70, 0x44, 0x4e, 0x89, 0x47, 0xd5,
	0x58, 0x46, 0x7b, 0xa1, 0x60, 0xd4, 0xa2, 0xed, 0xbb, 0x9e, 0x1b, 0x9c, 0x90, 0x21, 0xf6, 0x2b,
	0xd5, 0x08, 0x30, 0x8b, 0x96, 0xc4, 0xe9, 0x72, 0xd4, 0xf3, 0x43, 0x67, 0x14, 0x31, 0xb2, 0xed,
	0x8f, 0x0a, 0xea, 0x9f, 0xc0, 0x15, 0x26, 0xcd, 0xe0, 0xc4, 0x99, 0xb0, 0xf9, 0x46, 0x05, 0x5d,
	0x41, 0xde, 0x2c, 0x92, 0xf1, 0x50, 0x58, 0x4a, 0x1c, 0x5e, 0x0d, 0xe7, 0x94, 0xbc, 0x2e, 0x4b,
	0x19, 0xdb, 0xc5, 0xb8, 0xe8, 0xd7, 0x64, 0x17, 0x7f, 0x3f, 0x07, 0x6f, 0xb3, 0xa2, 0xa3, 0x71,
	0x5b, 0x3d, 0x71, 0xbc, 0x63, 0xc2, 0x0d, 0xc8, 0xeb, 0xb0, 0xf3, 0x06, 0xdf, 0xde, 0x15, 0x70,
	0x0a, 0xad, 0xc6, 0xa3, 0x50, 0xda, 0xdd, 0xf1, 0xf5, 0xb4, 0x73, 0xe6, 0x91, 0x09, 0x5d, 0x14,
	0xd8, 0x72, 0xa4, 0x60, 0xc6, 0x67, 0x42, 0xc1, 0x36, 0x71, 0x86, 0xe7, 0x91, 0x82, 0xb7, 0x60,
	0x19, 0x01, 0x65, 0x96, 0xc9, 0x90, 0x51, 0x15, 0x66, 0x12, 0x6b, 0x15, 0xfd, 0xd6, 0x70, 0x9f,
	0x93, 0xa3, 0x31, 0x16, 0x61, 0xc0, 0x0a, 0x4b, 0xa9, 0x33, 0x55, 0xc6, 0x8c, 0x2f, 0xe0, 0x8d,
	0x44, 0xed, 0x5c, 0x45, 0xf3, 0xeb, 0xff, 0xbb, 0x39, 0xd8, 0x60, 0x79, 0x5b, 0x4f, 0xcd, 0x20,
	0x70, 0x8f, 0x3d, 0x9e, 0x75, 0x96, 0x15, 0x4d, 0x5a, 0x8e, 0xfc, 0x3c, 0xcb, 0x51, 0xb8, 0xd8,
	0x72, 0x14, 0x53, 0x96, 0x43, 0x83, 0x42, 0xeb, 0x29, 0x5d, 0x56, 0x0a, 0xdb, 0x15, 0x9b, 0x7e,
	0x1a, 0xff, 0x36, 0xda, 0x7f, 0xb5, 0x9e, 0x76, 0xc6, 0x64, 0x42, 0x0d, 0x04, 0xd5, 0xcd, 0x0d,
	0xa8, 0xf0, 0xa4, 0x22, 0xaa, 0x0a, 0xea, 0xbf, 0x0c, 0xcb, 0x1c, 0x68, 0x39, 0xc1, 0x33, 0x6e,
	0xf9, 0x37, 0x98, 0xe5, 0xbf, 0xdb, 0xef, 0x1c, 0xd6, 0x6d, 0xb3, 0x57, 0xef, 0xb7, 0xcc, 0xee,
	0x97, 0xb6, 0xcc, 0xa8, 0x6f, 0x40, 0xa9, 0xe7, 0x1c, 0xb7, 0x9e, 0xf2, 0x16, 0xb0, 0x04, 0xd5,
	0x0b, 0x7e, 0xdc, 0xc1, 0x43, 0x64, 0xc5, 0xe6, 0xa9, 0x08, 0xdf, 0x45, 0x4b, 0x2e, 0xf0, 0x5d,
	0xb1, 0x93, 0x58, 0x88, 0x77, 0x12, 0x7b, 0xa0, 0xb7, 0x9e, 0xc6, 0x26, 0xa2, 0x46, 0x42, 0xc7,
	0x1d, 0xcd, 0xd4, 0xf7, 0x06, 0x94, 0xd8, 0x02, 0x91, 0xc7, 0xfd, 0x2f, 0x4b, 0x18, 0x7f, 0x9c,
	0x03, 0x4d, 0x2e, 0x04, 0x07, 0xea, 0x37, 0xa0, 0x28, 0x4d, 0x86, 0x6b, 0xa2, 0x85, 0xdd, 0x7a,
	0xaf, 0xd7, 0xac, 0xb7, 0xea, 0xed, 0x1e, 0x9b, 0x15, 0xc8, 0xa4, 0xdf, 0x86, 0x05, 0x56, 0xf3,
	0x66, 0x1e, 0x0d, 0x24, 0x67, 0x4f, 0x09, 0x66, 0x2f, 0xc4, 0x02, 0x1e, 0x4c, 0xa3, 0xf3, 0x4d,
	0xc5, 0xe6, 0x29, 0xba, 0x45, 0x6d, 0x4d, 0x47, 0xa1, 0x3b, 0x1e, 0x45, 0x5b, 0x54, 0x91, 0xa6,
	0xb4, 0x06, 0xf1, 0xd8, 0x76, 0xa2, 0x84, 0xf2, 0x47, 0x69, 0xe3, 0xcf, 0x72, 0x62, 0xd4, 0x46,
	0x9d, 0xca, 0x87, 0x5e, 0xa2, 0xc3, 0x72, 0x97, 0xed, 0xb0, 0xd4, 0x70, 0xc8, 0x67, 0x0d, 0x87,
	0xec, 0x6e, 0xfd, 0x2e, 0xac, 0xaa, 0xda, 0xdc, 0x2c, 0xa2, 0x5a, 0xde, 0x48, 0xa9, 0x05, 0x2d,
	0x43, 0x82, 0x59, 0x1a, 0x15, 0xa5, 0x19, 0xa3, 0x62, 0x41, 0x1e, 0x15, 0xc6, 0x3f, 0xc8, 0xc1,
	0x75, 0xd1, 0x78, 0x6a, 0xb0, 0xf7, 0xfd, 0xc9, 0x1c, 0x1d, 0x14, 0x2e, 0xa7, 0x83, 0x9b, 0xb0,
	0x6a, 0x93, 0x91, 0x13, 0xba, 0xbe, 0xa7, 0x28, 0x21, 0x81, 0x52, 0x3e, 0x9e, 0x4d, 0x2c, 0x1f,
	0x4c, 0x1d, 0x09, 0xd4, 0xf8, 0xa7, 0x39, 0x71, 0xd0, 0x6a, 0x3d, 0x6d, 0x90, 0xf0, 0xe7, 0x24,
	0x5d, 0x76, 0x1f, 0xa5, 0x65, 0x2e, 0x66, 0xca, 0xfc, 0x9b, 0x39, 0xb8, 0x2a, 0x64, 0x6e, 0x3a,
	0x41, 0x78, 0xe0, 0x78, 0xc3, 0xd7, 0xb8, 0x66, 0xc4, 0x33, 0xb5, 0xa0, 0xcc, 0x54, 0x6e, 0xb7,
	0x8a, 0xb1, 0xdd, 0x7a, 0x0e, 0x9b, 0x92, 0x71, 0xaf, 0x59, 0xc1, 0xa9, 0x1b, 0x04, 0x3f, 0x7b,
	0x49, 0x8c, 0x16, 0xbc, 0xc5, 0xea, 0x15, 0xbb, 0x3f, 0x65, 0xdd, 0x7c, 0xe9, 0xad, 0xe3, 0xef,
	0xe3, 0x18, 0x88, 0x4d, 0x2f, 0x19, 0xd0, 0x23, 0xe4, 0x2c, 0x83, 0xf5, 0x17, 0x6a, 0x6e, 0x8d,
	0xdf, 0x28, 0xc1, 0x9b, 0x92, 0xce, 0xe9, 0x9e, 0x53, 0x3a, 0x73, 0xfc, 0x2c, 0xbb, 0xff, 0x3a,
	0xdd, 0x5f, 0x1f, 0x73, 0x12, 0x77, 0xe9, 0x44, 0x80, 0x7a, 0xf8, 0x28, 0xcd, 0x3f, 0x7c, 0xbc,
	0x0b, 0x60, 0x93, 0xa7, 0x64, 0x10, 0x76, 0xa7, 0x6e, 0x88, 0xab, 0x47, 0xc5, 0x96, 0x10, 0x5a,
	0x5b, 0x8d, 0x38, 0x23, 0xda, 0x3e, 0xb6, 0xc5, 0xad, 0xd8, 0x31, 0x80, 0x2e, 0x3f, 0xc7, 0x1b,
	0x32, 0xea, 0x12, 0xa3, 0x46, 0x00, 0xa5, 0xb6, 0x5c, 0xef, 0x98, 0x51, 0xcb, 0x8c, 0x1a, 0x01,
	0x74, 0xcf, 0x60, 0x7a, 0x0d, 0x47, 0xd0, 0x01, 0xe9, 0x32, 0x44, 0x39, 0xf6, 0xa6, 0x31, 0xc7,
	0x32, 0xe3, 0x90, 0x20, 0x5a, 0xc3, 0x21, 0x11, 0xf4, 0x15, 0x56, 0x43, 0x04, 0xd0, 0xa3, 0xc1,
	0xc1, 0x94, 0xd1, 0x2a, 0xec, 0x68, 0xc0, 0x93, 0x7a, 0x0d, 0xd6, 0xe9, 0x84, 0x55, 0x06, 0xda,
	0xe6, 0xea, 0x56, 0x6e, 0x7b, 0x79, 0xf7, 0x2a, 0x3f, 0x13, 0x26, 0x86, 0xa1, 0x9d, 0xce, 0x80,
	0xad, 0x9f, 0x3a, 0x1e, 0xab, 0x61, 0x8d, 0xb7, 0x5e, 0x00, 0x54, 0x7a, 0x9a, 0xb0, 0x38, 0x5d,
	0x63, 0xd2, 0x4b, 0x90, 0xfe, 0x7d, 0x79, 0x2d, 0xc0, 0xb1, 0xb2, 0x7e, 0xf1, 0x8a, 0x9a, 0x60,
	0x37, 0xfe, 0xb9, 0x64, 0xdd, 0xd5, 0x85, 0xe2, 0xe7, 0x30, 0x0e, 0x7f, 0xba, 0x95, 0xcc, 0xf8,
	0x57, 0x05, 0xb1, 0x2c, 0x77, 0xa7, 0x8f, 0xf7, 0x47, 0xfe, 0x19, 0x99, 0xbc, 0x46, 0xa1, 0xb7,
	0x60, 0x19, 0xcf, 0x32, 0x92, 0x0b, 0xa2, 0x68, 0xcb, 0x10, 0xe5, 0xe8, 0xba, 0xde, 0xf1, 0x88,
	0x30, 0x9f, 0x36, 0xdb, 0x6c, 0xcb, 0x50, 0x86, 0xa7, 0xa2, 0x74, 0x49, 0x4f, 0xc5, 0x42, 0x96,
	0xa7, 0x22, 0xdb, 0x7f, 0xb2, 0x38, 0xcb, 0x7f, 0x72, 0x03, 0x2a, 0x91, 0x62, 0xd0, 0x25, 0xc3,
	0xce, 0x87, 0x2a, 0xa8, 0xdf, 0x02, 0x5d, 0x01, 0x58, 0xa1, 0xcc, 0x0f, 0x9e, 0x41, 0xa1, 0xb2,
	0x36, 0x1c, 0xd7, 0x3b, 0x24, 0x93, 0x01, 0xf1, 0x42, 0xe7, 0x58, 0x78, 0xc5, 0x13, 0x28, 0x2e,
	0x81, 0xa3, 0xa1, 0xac, 0xa0, 0x65, 0xbe, 0x04, 0x2a, 0xa8, 0xf1, 0xdf, 0x0b, 0xf0, 0x41, 0x86,
	0xff, 0xc4, 0x26, 0xc1, 0x74, 0xf4, 0xba, 0x07, 0xe2, 0xfc, 0x3e, 0xbd, 0x05, 0xfa, 0x81, 0x7b,
	0x7c, 0x42, 0x82, 0x50, 0x66, 0x64, 0x5d, 0x9b, 0x41, 0xa1, 0x06, 0xc2, 0x76, 0xbc, 0x67, 0xae,
	0x77, 0xcc, 0xbb, 0x56, 0x24, 0xa9, 0xf6, 0xcd, 0xd1, 0x88, 0xa7, 0xe8, 0x01, 0x99, 0x75, 0xa9,
	0x0a, 0x66, 0x8c, 0x90, 0xc5, 0x4b, 0x8e, 0x90, 0xa5, 0xcc, 0x11, 0x92, 0xf4, 0xc2, 0x95, 0x2f,
	0xeb, 0x85, 0x83, 0x59, 0xa3, 0x28, 0xdd, 0xdf, 0xcb, 0x17, 0xf4, 0xb7, 0xac, 0xb5, 0x15, 0xd4,
	0x5a, 0x02, 0x35, 0xfe, 0x7d, 0x0e, 0x6e, 0x66, 0xf5, 0x37, 0xd3, 0x89, 0x4d, 0xce, 0x9c, 0xc9,
	0xf0, 0xe7, 0xda, 0xe5, 0x52, 0x17, 0x16, 0xd5, 0x2e, 0xd4, 0xa1, 0x88, 0x17, 0x5a, 0xec, 0xb6,
	0x0a, 0xbf, 0x29, 0x86, 0x77, 0x82, 0xec, 0x94, 0x84, 0xdf, 0xc6, 0x0f, 0xc0, 0x98, 0xdd, 0xa2,
	0xa6, 0x1b, 0x84, 0xc2, 0xe5, 0x8f, 0x8e, 0x07, 0x8a, 0x0b, 0x97, 0x7f, 0x04, 0x08, 0x29, 0xe8,
	0x40, 0xc9, 0xc7, 0x52, 0xb4, 0xa7, 0xa7, 0xc6, 0x8f, 0xe9, 0x36, 0x41, 0x94, 0x2c, 0x15, 0x8c,
	0xbb, 0x79, 0x49, 0xf8, 0x9c, 0x2a, 0x7c, 0xec, 0x3d, 0xcd, 0x2b, 0xde, 0x53, 0x79, 0x4f, 0x55,
	0xb8, 0xcc, 0x9e, 0xea, 0x6f, 0xe5, 0xe1, 0xfd, 0x39, 0xcd, 0x63, 0x77, 0x53, 0xaf, 0xd2, 0x3a,
	0x1c, 0xb0, 0xb4, 0x33, 0x04, 0xb9, 0xc0, 0x07, 0xac, 0x84, 0xd1, 0xa9, 0xc4, 0xa4, 0x53, 0xfb,
	0x49, 0x05, 0xe9, 0xd4, 0x55, 0x80, 0xf8, 0xa6, 0xb1, 0x62, 0x67, 0x50, 0xf4, 0x5f, 0x81, 0x32,
	0x4d, 0xcb, 0xbe, 0xba, 0x77, 0xf9, 0xca, 0x3d, 0x43, 0xdb, 0x76, 0x9c, 0xc1, 0xf8, 0xf3, 0x3c,
	0x68, 0x74, 0x88, 0x99, 0xc3, 0xe7, 0x8e, 0x37, 0x20, 0x87, 0xce, 0xc4, 0x39, 0xa5, 0x5b, 0xa1,
	0x47, 0x6e, 0xcb, 0xbf, 0xeb, 0x3a, 0xfb, 0x8e, 0x87, 0x5a, 0x58, 0xb2, 0x25, 0x84, 0x8a, 0x48,
	0x53, 0x2d, 0x7f, 0x42, 0x7a, 0x27, 0x8e, 0xd7, 0x72, 0x5e, 0x50, 0xbe, 0x3c, 0xf2, 0x65, 0x50,
	0x68, 0x79, 0x77, 0x5d, 0xaf, 0xe1, 0x4f, 0x6b, 0xae, 0xe3, 0x73, 0xb7, 0xae, 0x84, 0xe0, 0x06,
	0xc1, 0x71, 0x6b, 0x6e, 0xd3, 0xf1, 0x1f, 0xf2, 0xdb, 0x87, 0x25, 0x5b, 0x86, 0xe8, 0xb1, 0xb6,
	0xe6, 0x3c, 0x70, 0x69, 0x02, 0x55, 0xb1, 0x64, 0x47, 0x69, 0x7d, 0x1b, 0xd6, 0x6a, 0xae, 0x83,
	0xbb, 0xa5, 0x83, 0xa9, 0x43, 0xab, 0xc7, 0x51, 0xbd, 0x64, 0x27, 0x61, 0x3a, 0x96, 0x1e, 0x3a,
	0xfe, 0x5d, 0x77, 0x8a, 0xd6, 0x69, 0xc9, 0xe6, 0x29, 0xba, 0x11, 0xbe, 0xeb, 0x3a, 0xde, 0x31,
	0x1a, 0xa3, 0x25, 0x9b, 0x25, 0xf4, 0x1d, 0xd0, 0xe8, 0x1e, 0xa5, 0xeb, 0x78, 0x8f, 0xe8, 0x66,
	0x1e, 0xa7, 0x2f, 0xb3, 0x43, 0x29, 0x9c, 0x0e, 0x8c, 0x16, 0xf1, 0xbe, 0xa2, 0x9d, 0x0a, 0x58,
	0x86, 0x48, 0xa2, 0x2e, 0x4f, 0x7c, 0xef, 0x18, 0x79, 0xd1, 0xe6, 0x50, 0x5d, 0x46, 0x88, 0xf1,
	0xbf, 0x8a, 0xc2, 0x1d, 0x54, 0x9d, 0x10, 0xba, 0xa3, 0x7a, 0x95, 0x4b, 0x15, 0xee, 0x30, 0x8b,
	0x9c, 0x98, 0xdc, 0x45, 0x24, 0x63, 0x78, 0xb3, 0xef, 0xfb, 0xa7, 0x35, 0xf7, 0xd1, 0xc9, 0x54,
	0xb8, 0x88, 0x22, 0x80, 0x8e, 0x4d, 0xc6, 0xfd, 0x62, 0x8f, 0xb8, 0xdd, 0x93, 0xa9, 0x18, 0x9b,
	0x0a, 0xa8, 0x7f, 0x01, 0x2b, 0xf2, 0x40, 0x41, 0x3d, 0x8b, 0x7d, 0x4e, 0x72, 0x14, 0xd9, 0x0a,
	0x2b, 0xb5, 0xab, 0xa7, 0xe6, 0x78, 0x4c, 0x87, 0x2c, 0x37, 0x70, 0x8b, 0x78, 0x8c, 0x48, 0xa0,
	0x54, 0x93, 0x35, 0x32, 0xf6, 0x03, 0x57, 0xf8, 0x81, 0x45, 0x32, 0x75, 0xcb, 0x56, 0xce, 0xb8,
	0x65, 0xdb, 0x86, 0xb5, 0x96, 0xeb, 0x61, 0x9b, 0xf1, 0xf2, 0x95, 0x7b, 0x7e, 0x2b, 0x76, 0x12,
	0xce, 0xbc, 0xf6, 0x62, 0x2b, 0x42, 0x0a, 0x97, 0xee, 0xfd, 0x98, 0xc7, 0x57, 0xdc, 0xfb, 0xdd,
	0x80, 0x8a, 0x15, 0x1c, 0x4e, 0xdc, 0xe7, 0xbc, 0xdf, 0x70, 0x73, 0xbd, 0x64, 0xab, 0x20, 0x1d,
	0x01, 0x96, 0xf7, 0xdc, 0x0d, 0xc9, 0xf0, 0xc8, 0xa5, 0x7b, 0xeb, 0xc2, 0x76, 0xd1, 0x96, 0x10,
	0x76, 0xf0, 0x38, 0xc3, 0x85, 0xca, 0xf5, 0x36, 0xd7, 0x58, 0x90, 0x46, 0x8c, 0xd0, 0x76, 0xdf,
	0xf5, 0xb9, 0xf4, 0xfb, 0x84, 0x6c, 0x6a, 0xcc, 0x1b, 0x2a, 0x63, 0x78, 0xc0, 0xa0, 0xdf, 0xd1,
	0xde, 0x99, 0x1e, 0x30, 0x04, 0x20, 0x3c, 0x62, 0x7a, 0xec, 0x11, 0x8b, 0xdc, 0xd3, 0xd2, 0xa0,
	0x7b, 0x4d, 0x4e, 0xe4, 0x1f, 0x08, 0x57, 0x40, 0xcd, 0x0d, 0x02, 0x7f, 0xf4, 0x7a, 0xaf, 0x09,
	0x8d, 0xbf, 0x24, 0xf6, 0xca, 0x4a, 0xe9, 0xaf, 0x49, 0xf4, 0x5d, 0xe1, 0x3d, 0x90, 0x0b, 0x8f,
	0xbd, 0xb3, 0x3c, 0x4f, 0x4e, 0xc9, 0xf3, 0x71, 0xec, 0x87, 0xe6, 0x57, 0x15, 0xe2, 0xc2, 0x3d,
	0x93, 0xfd, 0x23, 0xe1, 0xbc, 0x8f, 0xd9, 0xd9, 0x9d, 0x7b, 0x26, 0xf7, 0x5f, 0x8e, 0x56, 0x64,
	0xec, 0x26, 0x59, 0xac, 0xaa, 0x1f, 0x84, 0x17, 0x8b, 0xa6, 0xa8, 0x24, 0x3f, 0x47, 0x25, 0x3a,
	0x14, 0x69, 0x89, 0x3c, 0x16, 0x06, 0xbf, 0x8d, 0xbf, 0x52, 0x14, 0x5e, 0x0d, 0x2c, 0xf0, 0x67,
	0x73, 0x1b, 0xa0, 0x1a, 0xae, 0xc2, 0x3c, 0xc3, 0x55, 0x9c, 0x6b, 0xb8, 0x4a, 0x59, 0x86, 0x2b,
	0x79, 0xa3, 0xb0, 0x98, 0xbe, 0x51, 0x10, 0x25, 0xb1, 0x25, 0x96, 0x0a, 0xb3, 0xc4, 0x22, 0x13,
	0x14, 0x50, 0xff, 0x88, 0x49, 0xc3, 0xdc, 0x0a, 0x65, 0xb9, 0xd9, 0x02, 0xb5, 0x63, 0x86, 0x94,
	0xc1, 0x84, 0xcb, 0x1b, 0x4c, 0xc9, 0x10, 0x2e, 0xab, 0x86, 0x50, 0x35, 0x47, 0x71, 0x18, 0x42,
	0x86, 0xf1, 0xab, 0x5c, 0xde, 0xf8, 0xad, 0x66, 0x1b, 0x3f, 0xe3, 0xef, 0x47, 0x57, 0x01, 0xcc,
	0xbf, 0x73, 0xc2, 0x23, 0xd1, 0x2e, 0x77, 0x15, 0x40, 0xf7, 0xad, 0xe4, 0x45, 0x58, 0xf5, 0xbd,
	0x90, 0x78, 0x22, 0x62, 0x4f, 0x86, 0x68, 0x39, 0x7b, 0xae, 0xe7, 0x4c, 0xce, 0x05, 0x4f, 0x01,
	0x23, 0x02, 0x55, 0x90, 0x96, 0xc3, 0x3f, 0x71, 0xdb, 0xca, 0x5c, 0x53, 0x32, 0x64, 0xfc, 0xc3,
	0xc8, 0xbb, 0x1d, 0xc9, 0xc9, 0x07, 0xea, 0x2f, 0x9a, 0xa4, 0xbf, 0x2a, 0x7c, 0x15, 0xcc, 0x49,
	0xc9, 0x27, 0xb5, 0x39, 0x1e, 0x8f, 0xce, 0xc5, 0x1d, 0x16, 0x26, 0xd4, 0x3b, 0x24, 0x09, 0x32,
	0x4e, 0x84, 0x5d, 0xc0, 0x12, 0x4c, 0x2f, 0x38, 0x8b, 0x6d, 0x56, 0x5c, 0xce, 0x47, 0xb0, 0xce,
	0x48, 0xe9, 0xd2, 0xd2, 0x04, 0xba, 0x09, 0x32, 0x8f, 0x27, 0x84, 0xf0, 0x7d, 0x1c, 0x4b, 0x18,
	0x7f, 0x35, 0x0f, 0xef, 0xce, 0x12, 0x36, 0xbe, 0xf2, 0xba, 0x58, 0x5c, 0x14, 0x84, 0x96, 0x26,
	0x61, 0x01, 0x5e, 0x82, 0x50, 0x41, 0x92, 0x04, 0x7d, 0x17, 0x36, 0x6a, 0x6e, 0xe0, 0xa4, 0x32,
	0x14, 0x30, 0x43, 0x26, 0x4d, 0xff, 0x2e, 0x54, 0xf6, 0x5d, 0xcf, 0x19, 0xd5, 0xc8, 0xc0, 0x0d,
	0x5c, 0xdf, 0x43, 0x3b, 0x21, 0xfc, 0x47, 0x28, 0xb9, 0x42, 0xb6, 0x55, 0x6e, 0x6a, 0x1e, 0xb0,
	0x38, 0xe1, 0xe5, 0x66, 0x36, 0x44, 0xc1, 0x8c, 0xbb, 0x74, 0x9f, 0x86, 0xb3, 0xe8, 0xbe, 0xeb,
	0xb1, 0x1b, 0x9a, 0x0b, 0x83, 0x1f, 0xde, 0x82, 0xa5, 0xfb, 0xae, 0x27, 0xdf, 0x24, 0x45, 0x69,
	0xa3, 0x05, 0x5a, 0x5c, 0x16, 0xf7, 0xa1, 0x7d, 0x01, 0x10, 0x97, 0xca, 0x83, 0x6d, 0xdf, 0x14,
	0x2e, 0xb8, 0x54, 0xb5, 0xb6, 0xc4, 0x6c, 0xfc, 0x8d, 0x1c, 0xbc, 0x27, 0x75, 0x92, 0x5a, 0x30,
	0xef, 0xa5, 0x06, 0x5c, 0xc9, 0x20, 0xf2, 0x7a, 0xde, 0x48, 0xd4, 0xc3, 0x3d, 0x7d, 0x59, 0x39,
	0xe8, 0x2c, 0xc0, 0x44, 0xb4, 0x63, 0xc9, 0x33, 0x33, 0xa9, 0x80, 0xc6, 0x5d, 0x00, 0xb6, 0xca,
	0x51, 0x44, 0xbf, 0xa9, 0xdc, 0x93, 0xe9, 0xac, 0xb6, 0x23, 0xdb, 0xae, 0xb7, 0xab, 0x0f, 0xe5,
	0x2b, 0xb2, 0x0d, 0x28, 0xc5, 0xc1, 0x34, 0x25, 0x9b, 0x25, 0x8c, 0xff, 0x9c, 0x67, 0x31, 0x63,
	0xf5, 0x53, 0xa1, 0xf3, 0x55, 0xc8, 0x47, 0xfa, 0xce, 0xa3, 0xe5, 0x2b, 0x4a, 0xab, 0x1c, 0x73,
	0x7d, 0x37, 0xcc, 0x56, 0xbd, 0x5f, 0x6f, 0x99, 0x56, 0x53, 0xae, 0xe1, 0x3b, 0x00, 0x4c, 0x21,
	0x52, 0xdc, 0xe0, 0xdb, 0x49, 0xfe, 0x76, 0xa7, 0x67, 0xed, 0x73, 0xc1, 0x24, 0x76, 0xfd, 0x16,
	0x2c, 0x50, 0xb3, 0x3e, 0x0d, 0xf8, 0xf0, 0xba, 0x9a, 0xcc, 0xd8, 0xed, 0x99, 0xbd, 0xa3, 0xae,
	0xcd, 0xb9, 0xf0, 0x30, 0x49, 0xbc, 0x21, 0x5b, 0x72, 0x58, 0xc8, 0x58, 0x0c, 0xb0, 0x5b, 0x59,
	0x9a, 0xc0, 0x40, 0x3e, 0x16, 0x33, 0x26, 0x21, 0xe8, 0x9e, 0x77, 0xc3, 0x11, 0xc1, 0xc5, 0xaa,
	0x6c, 0xb3, 0x04, 0x1e, 0xdc, 0xc9, 0x0b, 0xb6, 0x39, 0x2e, 0xdb, 0xf8, 0x1d, 0x1d, 0xe6, 0xcb,
	0xec, 0x80, 0x4f, 0xbf, 0xf5, 0xaf, 0xc3, 0x22, 0x53, 0x3e, 0x73, 0x28, 0x8b, 0x48, 0xca, 0xb8,
	0x53, 0x6c, 0x41, 0x37, 0x3e, 0x15, 0x3b, 0xb6, 0x06, 0x09, 0x23, 0x1d, 0x67, 0x46, 0x1b, 0x97,
	0xa4, 0x68, 0x63, 0x4b, 0x98, 0x5b, 0x25, 0x57, 0x30, 0xd6, 0x3f, 0x81, 0x72, 0x94, 0xe6, 0xe3,
	0x4b, 0x8f, 0xea, 0x8e, 0x39, 0x63, 0x26, 0xe3, 0xb6, 0x58, 0x61, 0x3a, 0x63, 0xe2, 0x21, 0x8c,
	0xb5, 0x6f, 0xc2, 0x22, 0xe3, 0x11, 0x5d, 0x2d, 0x92, 0xc6, 0xbe, 0xd8, 0x45, 0xc5, 0x19, 0xd2,
	0x15, 0xe7, 0xe7, 0x57, 0xfc, 0xa9, 0xd8, 0xf0, 0x89, 0x36, 0x70, 0xd5, 0x5c, 0x5c, 0xfb, 0x37,
	0x45, 0xf4, 0x58, 0x22, 0x57, 0x30, 0xbe, 0x20, 0xd3, 0x9d, 0x68, 0xe3, 0x4a, 0x46, 0x24, 0x24,
	0x97, 0x69, 0xe5, 0x27, 0xe2, 0x64, 0x28, 0x67, 0xb9, 0xb0, 0x92, 0x03, 0x91, 0xa3, 0x4d, 0xce,
	0x10, 0xe3, 0x93, 0xff, 0xe5, 0x35, 0x13, 0x05, 0xc4, 0x76, 0xdd, 0x63, 0xcf, 0xf2, 0xe6, 0x8e,
	0x86, 0x2f, 0xa3, 0x40, 0x52, 0xc6, 0x1f, 0x8c, 0xf5, 0xcf, 0xe1, 0x5a, 0xd5, 0xf7, 0x02, 0x32,
	0x98, 0x86, 0xee, 0x73, 0xc2, 0xf0, 0xf6, 0xf4, 0xf4, 0x71, 0x14, 0xf4, 0x3b, 0x8b, 0x6c, 0xec,
	0xc1, 0x8d, 0x48, 0xc1, 0x33, 0x78, 0xe6, 0x0a, 0xf4, 0x23, 0xe1, 0x8e, 0xbd, 0xa0, 0x8c, 0x9f,
	0x46, 0x48, 0x76, 0xe3, 0x13, 0x30, 0x88, 0xaf, 0x99, 0x31, 0x60, 0x3c, 0x80, 0x35, 0xae, 0x09,
	0x66, 0x13, 0x9f, 0x60, 0x68, 0x7d, 0xcd, 0x39, 0x57, 0x0a, 0x8f, 0x01, 0xfd, 0x43, 0x58, 0x60,
	0xac, 0x4a, 0xe0, 0xb3, 0x34, 0x5d, 0x39, 0xd9, 0xf8, 0xb6, 0xd8, 0x3d, 0x34, 0x48, 0x98, 0xa8,
	0x62, 0xae, 0x52, 0xee, 0x8b, 0xf8, 0x9e, 0x8c, 0xbc, 0xa8, 0x8c, 0x15, 0x19, 0xe5, 0x93, 0x97,
	0x99, 0xd3, 0x24, 0xbb, 0xc2, 0x69, 0xfc, 0x9d, 0x28, 0x96, 0xb5, 0x41, 0xc2, 0xce, 0x64, 0xc8,
	0x3b, 0xe8, 0x2a, 0x2c, 0x34, 0x7c, 0x7f, 0x18, 0xaf, 0x8d, 0x2c, 0xa5, 0xdf, 0x84, 0xd5, 0xc3,
	0x89, 0x3f, 0x1d, 0x84, 0xfb, 0xee, 0x88, 0x1c, 0x38, 0xc1, 0x09, 0x0f, 0xcd, 0x4f, 0xa0, 0x7a,
	0x03, 0x34, 0x11, 0xa0, 0x73, 0x38, 0x72, 0xc2, 0x7d, 0x7f, 0x72, 0xaa, 0xd8, 0x6c, 0x0c, 0x99,
	0xb7, 0xeb, 0xd5, 0x03, 0xd3, 0x6e, 0xd4, 0xfb, 0x87, 0x4d, 0xb3, 0xb7, 0xdf, 0xb1, 0x5b, 0x76,
	0x2a, 0x93, 0xe1, 0x8b, 0x3b, 0xf5, 0x48, 0x3c, 0x76, 0xea, 0xca, 0x94, 0xee, 0x06, 0x54, 0xd8,
	0x1b, 0x09, 0xe4, 0xe4, 0x67, 0x96, 0xb2, 0xad, 0x82, 0x2c, 0xf4, 0xd9, 0x1f, 0xb6, 0x7c, 0x8f,
	0x9c, 0xa3, 0x50, 0x65, 0x3b, 0x06, 0x8c, 0x3f, 0xcc, 0x8b, 0xf9, 0x6e, 0x4e, 0xc3, 0x13, 0x9b,
	0x0c, 0x89, 0x3b, 0x0e, 0x33, 0x74, 0x52, 0x8a, 0x6a, 0xbd, 0x0e, 0xe5, 0xbd, 0xe9, 0x39, 0xbb,
	0x2f, 0xe0, 0xeb, 0x5f, 0x0c, 0xbc, 0x36, 0x4d, 0xa4, 0x1b, 0x57, 0xcc, 0x6a, 0xdc, 0x0e, 0x68,
	0xd1, 0x6b, 0x1a, 0x2e, 0x3c, 0x2e, 0x60, 0x65, 0x3b, 0x85, 0xab, 0x8a, 0x58, 0x48, 0x28, 0x22,
	0xa3, 0xab, 0x17, 0xb3, 0xba, 0xda, 0xf8, 0xad, 0x28, 0x2c, 0x4a, 0x56, 0x58, 0xaa, 0x97, 0x62,
	0x7d, 0x7d, 0x01, 0xc0, 0x74, 0x23, 0xad, 0xfc, 0x6f, 0x66, 0xe8, 0xc2, 0xae, 0x77, 0x8f, 0x9a,
	0x3d, 0x5b, 0x62, 0x4e, 0xeb, 0xa0, 0x90, 0xa1, 0x03, 0xe3, 0x04, 0x56, 0x44, 0x50, 0x3a, 0x3a,
	0x7f, 0x5f, 0xee, 0x6d, 0x89, 0x70, 0xba, 0x17, 0x24, 0xa7, 0xfb, 0x55, 0x58, 0x30, 0x9f, 0x3b,
	0xa1, 0x33, 0xe1, 0x4a, 0xe7, 0x29, 0xe3, 0x33, 0x71, 0x83, 0xde, 0x20, 0xa1, 0xa8, 0x2e, 0xf2,
	0xb7, 0x5f, 0xbc, 0x06, 0x6f, 0x66, 0x67, 0x0c, 0xc6, 0xfa, 0xc7, 0xb0, 0x24, 0x92, 0x7c, 0x22,
	0xaf, 0x47, 0x26, 0x45, 0xf0, 0xda, 0x11, 0x8b, 0x11, 0x82, 0x46, 0x29, 0xf7, 0x5d, 0x16, 0x2c,
	0xf4, 0x0a, 0x2d, 0x66, 0x1b, 0x5e, 0xb6, 0x7f, 0x63, 0xf7, 0x13, 0x51, 0x7a, 0x66, 0xcb, 0xbf,
	0x23, 0x82, 0xf1, 0x1a, 0x24, 0x94, 0xab, 0xbe, 0x54, 0xeb, 0xbf, 0x92, 0x2c, 0x61, 0x2a, 0x73,
	0x30, 0xd6, 0xef, 0xa4, 0x34, 0xf0, 0x46, 0xa4, 0x01, 0x99, 0x5f, 0xd2, 0xc2, 0xbf, 0x2c, 0xb0,
	0x4e, 0xef, 0x39, 0x01, 0x3a, 0xc8, 0xf5, 0x0f, 0x95, 0x9d, 0xeb, 0x95, 0x78, 0xc3, 0xd7, 0x33,
	0xbb, 0x5f, 0xca, 0x1b, 0x4b, 0xb6, 0x25, 0x65, 0xf3, 0x36, 0xcf, 0x03, 0x6a, 0x70, 0xf7, 0x56,
	0x90, 0x77, 0x6f, 0x74, 0xe9, 0x7e, 0x31, 0x1e, 0x39, 0xae, 0xc7, 0x15, 0x21, 0x92, 0xfa, 0xf7,
	0xa0, 0x52, 0xf5, 0xbd, 0xa1, 0x1b, 0xba, 0xbe, 0x87, 0x35, 0xb2, 0x90, 0x85, 0x4d, 0x76, 0x82,
	0xa1, 0x95, 0x55, 0x3b, 0xed, 0x9a, 0xd5, 0xb3, 0x3a, 0x6d, 0x56, 0xad, 0xca, 0x8e, 0xaf, 0x93,
	0x04, 0xc0, 0xc3, 0xcc, 0x16, 0x50, 0x98, 0x24, 0x2c, 0xef, 0x0c, 0x17, 0x2f, 0xde, 0x19, 0xc6,
	0xfb, 0xf1, 0x25, 0x69, 0x3f, 0x8e, 0x0e, 0xcd, 0x40, 0x44, 0xd2, 0xe2, 0xa6, 0x73, 0xc9, 0x96,
	0x10, 0x7a, 0x9a, 0x12, 0xdf, 0xb8, 0x2d, 0x65, 0xb1, 0xb7, 0x0a, 0xc6, 0xca, 0xb0, 0xc9, 0x80,
	0xb8, 0xb4, 0x67, 0x97, 0x45, 0x19, 0x02, 0x41, 0x6b, 0x48, 0x8e, 0x5d, 0x0f, 0x0b, 0x60, 0x6e,
	0x8e, 0x18, 0x40, 0x35, 0x7a, 0xac, 0xf0, 0x0a, 0xd2, 0x44, 0xd2, 0xf8, 0x65, 0x58, 0x16, 0x27,
	0xa1, 0xe0, 0x59, 0xa0, 0x7f, 0x08, 0x25, 0xfc, 0x48, 0xcd, 0x00, 0xd1, 0xc1, 0x36, 0xa3, 0x1b,
	0x9f, 0x0b, 0x57, 0x57, 0x83, 0x84, 0xe6, 0x68, 0x54, 0x73, 0xdc, 0xd1, 0x39, 0x52, 0xe6, 0x8e,
	0xc2, 0xef, 0xc1, 0x96, 0x9c, 0xd3, 0x1c, 0x9c, 0xb8, 0xe4, 0x39, 0x8b, 0x4c, 0xb8, 0x54, 0xfe,
	0xc7, 0xd2, 0x6e, 0x92, 0xe6, 0x90, 0xb6, 0xa0, 0xb7, 0x61, 0x89, 0x22, 0xf3, 0x06, 0x60, 0xc4,
	0xc4, 0x62, 0x74, 0x82, 0x67, 0xd1, 0x40, 0xe4, 0x29, 0xe3, 0xfb, 0xd2, 0x0e, 0x5f, 0xaa, 0x23,
	0x18, 0xeb, 0xbf, 0x04, 0xc5, 0x9e, 0x08, 0xf9, 0xcb, 0xd4, 0x0f, 0x92, 0x8d, 0x3f, 0x8a, 0xac,
	0xb3, 0x4d, 0x8e, 0xcd, 0xc1, 0x00, 0xa7, 0x0e, 0x6f, 0x59, 0xe2, 0x2d, 0x52, 0x6c, 0x10, 0x0c,
	0x58, 0x39, 0x74, 0x82, 0xe0, 0xbe, 0x3f, 0x19, 0x46, 0x6b, 0xfc, 0x8a, 0xad, 0x60, 0x34, 0xff,
	0xe1, 0x89, 0xef, 0x11, 0xe1, 0xfc, 0x2b, 0xdb, 0x51, 0x9a, 0x2e, 0x42, 0xf7, 0xc8, 0xc4, 0x7d,
	0xe2, 0x0e, 0x30, 0x52, 0x0d, 0x1f, 0x1d, 0xb2, 0x59, 0x93, 0xc2, 0xc5, 0x53, 0x3e, 0x76, 0x70,
	0xa7, 0x9f, 0xc6, 0xf7, 0x63, 0xc7, 0x6c, 0x24, 0x71, 0x30, 0xd6, 0xb7, 0xe9, 0x3e, 0x0b, 0xd7,
	0xd8, 0x9c, 0x14, 0x13, 0xc4, 0x16, 0x09, 0xa6, 0x4e, 0x4e, 0x37, 0x08, 0x54, 0xda, 0xfe, 0xe4,
	0xd4, 0x19, 0xd1, 0x05, 0xa9, 0x15, 0x1c, 0x2b, 0xb2, 0xe6, 0x12, 0xb2, 0x5e, 0xa6, 0xad, 0x1b,
	0x50, 0x32, 0xc7, 0xe3, 0x28, 0x7c, 0x84, 0x25, 0x8c, 0xdf, 0xce, 0xc1, 0x6a, 0x8f, 0x78, 0x03,
	0xe2, 0x85, 0xa2, 0x22, 0x03, 0x56, 0x38, 0xd2, 0xf3, 0x9f, 0x11, 0x8f, 0x3f, 0x46, 0x55, 0x30,
	0x0c, 0x5c, 0x67, 0x69, 0x7a, 0x06, 0xc2, 0x1e, 0xa7, 0x4c, 0x2a, 0x28, 0x71, 0x51, 0x2d, 0x61,
	0xd5, 0x32, 0x17, 0x03, 0x63, 0xc1, 0x8a, 0xb2, 0x60, 0x07, 0xb0, 0x7a, 0xcf, 0x0d, 0xdc, 0xd0,
	0x9f, 0x08, 0xb9, 0xb6, 0x60, 0xb9, 0xe5, 0x0c, 0x4e, 0x5c, 0x8f, 0x54, 0xd9, 0x93, 0x5c, 0x7c,
	0x7b, 0x26, 0x41, 0x71, 0x49, 0x79, 0xb9, 0xa4, 0xdf, 0x54, 0x36, 0x43, 0xf2, 0xf0, 0x79, 0x95,
	0x77, 0x9f, 0xfa, 0xb7, 0x61, 0x15, 0xcf, 0x38, 0x51, 0xe7, 0x60, 0xdb, 0xc5, 0x91, 0x46, 0xe9,
	0x33, 0x3b, 0xc1, 0xa9, 0x7f, 0x17, 0xd6, 0x28, 0x22, 0x35, 0x0c, 0x55, 0x22, 0x6e, 0x8f, 0xd5,
	0x06, 0xdb, 0x49, 0x5e, 0x91, 0x5d, 0xea, 0x2f, 0x74, 0xf0, 0x89, 0xec, 0x6a, 0x3f, 0xda, 0x49,
	0x5e, 0xe3, 0x1f, 0x2b, 0x9b, 0x9c, 0x57, 0x19, 0x95, 0xb8, 0xae, 0xe0, 0xa0, 0x60, 0x23, 0x8c,
	0x25, 0xe8, 0xc4, 0xa7, 0xa5, 0x5a, 0xe2, 0x01, 0x15, 0x4f, 0xe9, 0xdf, 0x51, 0xc6, 0x96, 0x1d,
	0x8c, 0x2f, 0x12, 0x37, 0xc1, 0x6a, 0xfc, 0xb5, 0x9c, 0xd8, 0x5e, 0x30, 0xbf, 0xbf, 0xb8, 0x65,
	0x13, 0x13, 0x7f, 0xe6, 0x64, 0xd8, 0x86, 0xb5, 0x36, 0x39, 0xcb, 0x98, 0x0f, 0x49, 0x38, 0x73,
	0x8a, 0x17, 0xb2, 0xa7, 0xb8, 0x51, 0x95, 0x1e, 0x6d, 0xc9, 0xd2, 0xbc, 0xd4, 0xa4, 0xfe, 0x9d,
	0x9c, 0xd8, 0x6b, 0xf1, 0xb7, 0xb1, 0xdd, 0x33, 0x37, 0x1c, 0x9c, 0xf0, 0x73, 0xb2, 0x01, 0x2b,
	0x6d, 0x72, 0x16, 0x3f, 0xa3, 0xe5, 0xa1, 0xff, 0x32, 0x46, 0xd7, 0x1e, 0xda, 0x0a, 0x7f, 0x22,
	0x9e, 0x7c, 0x89, 0x24, 0xcd, 0xdd, 0x19, 0x0d, 0xe3, 0xdc, 0xfc, 0x32, 0x43, 0xc6, 0x68, 0xee,
	0xce, 0x68, 0x88, 0xb9, 0x79, 0x94, 0x06, 0x4f, 0x1a, 0x3f, 0x12, 0x82, 0xa1, 0xbf, 0x8d, 0x39,
	0xdb, 0xa2, 0x6d, 0xd0, 0x16, 0x2c, 0xb3, 0x28, 0x04, 0xe1, 0xb5, 0x43, 0x1f, 0xab, 0x04, 0xe1,
	0x2d, 0x09, 0xf3, 0xf7, 0x45, 0xf7, 0xbf, 0x31, 0x40, 0xf3, 0x5b, 0x41, 0x75, 0x34, 0x7d, 0x8c,
	0x85, 0x8b, 0x97, 0x55, 0x12, 0x64, 0xfc, 0x4f, 0x16, 0x72, 0x1a, 0xd7, 0x8d, 0xdb, 0x9f, 0xd7,
	0x14, 0x36, 0xc7, 0xaf, 0x2b, 0x0a, 0xca, 0xed, 0x69, 0x74, 0x67, 0xc9, 0xdc, 0xe4, 0xb8, 0xc4,
	0x47, 0x40, 0xf4, 0x9c, 0xd6, 0x1d, 0x3c, 0xc3, 0x87, 0x09, 0xe2, 0x39, 0xad, 0x3b, 0x78, 0x46,
	0x15, 0xcd, 0xf7, 0x70, 0xcc, 0xbd, 0xba, 0xb0, 0x55, 0xd8, 0x2e, 0xd9, 0x0a, 0x96, 0x7a, 0x28,
	0xb4, 0x98, 0x7e, 0x28, 0x64, 0xfc, 0xb7, 0x68, 0x80, 0x27, 0x75, 0xce, 0x1e, 0xda, 0xfe, 0x54,
	0x2a, 0xbf, 0x09, 0xab, 0x2c, 0xfa, 0x23, 0x62, 0xe1, 0xf1, 0xde, 0x2a, 0xaa, 0xef, 0x81, 0x96,
	0xd0, 0x7a, 0xc0, 0xe3, 0x07, 0xaf, 0xca, 0x5e, 0xd9, 0x98, 0x6c, 0xa7, 0xf8, 0x93, 0xdd, 0x5b,
	0x4a, 0x77, 0xef, 0x77, 0x60, 0xad, 0xda, 0xed, 0x9e, 0x07, 0x21, 0x39, 0x6d, 0x05, 0xc7, 0x99,
	0x4e, 0xd4, 0x4d, 0x58, 0x6c, 0x05, 0xc7, 0x7b, 0xfe, 0xf0, 0x9c, 0x6f, 0xed, 0x45, 0xd2, 0xb0,
	0xe8, 0xd0, 0x88, 0x32, 0xf3, 0xb9, 0xf2, 0x29, 0x40, 0x04, 0x05, 0x8a, 0xab, 0x20, 0x51, 0x91,
	0x2d, 0xf1, 0x19, 0x5f, 0x17, 0x93, 0x98, 0x3f, 0x5b, 0xef, 0xf9, 0xd1, 0x5b, 0xe2, 0x58, 0x1e,
	0xdc, 0x41, 0x1b, 0x7f, 0x2f, 0x27, 0xf6, 0x64, 0xad, 0xa7, 0x72, 0xc0, 0x05, 0xaf, 0xff, 0x16,
	0x2c, 0x51, 0x34, 0xe5, 0x57, 0xc6, 0x7d, 0xd1, 0x41, 0xf7, 0x11, 0x1f, 0x9e, 0x82, 0x47, 0xf2,
	0xd3, 0xe7, 0x93, 0x51, 0xc4, 0x71, 0xec, 0x6a, 0x61, 0x4e, 0xec, 0x6a, 0x31, 0x15, 0xbb, 0x1a,
	0x7b, 0x4f, 0xd5, 0x16, 0xb1, 0x17, 0xe1, 0x33, 0x77, 0x7d, 0x7f, 0x18, 0x05, 0xac, 0xd2, 0x7e,
	0x44, 0xeb, 0xf0, 0x8b, 0xf4, 0xd2, 0x99, 0x9f, 0xfc, 0x4a, 0x71, 0xc4, 0x80, 0x23, 0x5c, 0x47,
	0x19, 0xf2, 0xbe, 0xa6, 0xeb, 0xf7, 0x3f, 0x2e, 0xb0, 0x33, 0x68, 0xd3, 0x09, 0xf0, 0x59, 0xdb,
	0x85, 0xd7, 0x2b, 0x22, 0x20, 0x8e, 0x4f, 0x4f, 0xb6, 0xdf, 0x95, 0xa1, 0x44, 0x40, 0x77, 0x21,
	0x15, 0xd0, 0x8d, 0xcf, 0x6b, 0x30, 0xba, 0xb0, 0x28, 0x9e, 0xd7, 0x60, 0x5c, 0xa1, 0x12, 0xe8,
	0x5d, 0xba, 0x30, 0xd0, 0x7b, 0xe1, 0xc2, 0x40, 0xef, 0xc5, 0x39, 0x81, 0xde, 0x4b, 0x73, 0x03,
	0xbd, 0xcb, 0x73, 0x02, 0xbd, 0x21, 0x19, 0xe8, 0x9d, 0x0e, 0xa4, 0x5e, 0x7e, 0xa9, 0x40, 0xea,
	0x8c, 0x58, 0xe6, 0x95, 0x97, 0x8a, 0x65, 0x8e, 0x2c, 0xaa, 0xdc, 0x89, 0xf1, 0xea, 0xfa, 0xe8,
	0x64, 0xea, 0x78, 0xc7, 0xea, 0xc3, 0x3a, 0x19, 0xc3, 0x4b, 0x78, 0x72, 0xea, 0xb8, 0x9e, 0x78,
	0xca, 0xca, 0x5f, 0x14, 0x29, 0xa0, 0xfe, 0x05, 0xac, 0xc8, 0xe5, 0xe3, 0xb4, 0x95, 0x4f, 0xf7,
	0x32, 0xd1, 0x56, 0x58, 0x53, 0xeb, 0x42, 0x31, 0x63, 0x5d, 0xb8, 0x03, 0x57, 0x98, 0x2b, 0xdb,
	0x3b, 0x1e, 0x91, 0x3d, 0x9f, 0xbf, 0x68, 0x50, 0x6e, 0xf4, 0x72, 0x89, 0x1b, 0xbd, 0x63, 0x11,
	0x5c, 0x68, 0x8e, 0x26, 0xc4, 0x19, 0x9e, 0xb3, 0xc3, 0x6e, 0x42, 0x01, 0x7b, 0xb0, 0x96, 0x28,
	0x93, 0xdb, 0xcd, 0xcd, 0x48, 0xf2, 0x04, 0xdd, 0x4e, 0x66, 0x30, 0x7e, 0xa8, 0xdc, 0xc7, 0xb2,
	0x87, 0x85, 0x27, 0xd3, 0xb0, 0xe6, 0x9f, 0x79, 0xf1, 0x75, 0xb7, 0x02, 0xf3, 0x00, 0x3e, 0x15,
	0xd4, 0x77, 0x61, 0x23, 0x06, 0xce, 0x7c, 0x4f, 0x5c, 0x7d, 0x32, 0x7d, 0x67, 0xd2, 0x8c, 0x7f,
	0x94, 0x03, 0x0d, 0x5d, 0x92, 0x74, 0x7e, 0xe1, 0x8d, 0xf6, 0x0b, 0xdc, 0xf5, 0x1c, 0x4e, 0xfc,
	0xe1, 0x74, 0x10, 0x32, 0x57, 0x01, 0xf3, 0x16, 0x29, 0x98, 0xc4, 0x73, 0x38, 0x11, 0x6f, 0x9b,
	0x63, 0x1e, 0xc4, 0xb8, 0xa3, 0x90, 0xa6, 0xf7, 0xa6, 0x78, 0xe9, 0xca, 0xb7, 0xb2, 0x09, 0xf4,
	0x72, 0x0e, 0x4c, 0xa3, 0x29, 0x9d, 0x78, 0x23, 0x91, 0xd1, 0xb0, 0xbe, 0x0b, 0x80, 0x8e, 0x04,
	0xcb, 0x1b, 0xf2, 0x7f, 0x5c, 0x54, 0x6c, 0x09, 0xd1, 0x75, 0x28, 0x76, 0xdd, 0x1f, 0x8a, 0xf7,
	0xd7, 0xf8, 0x6d, 0xfc, 0x46, 0x4e, 0xba, 0xec, 0x8a, 0x8b, 0x63, 0x7f, 0xd8, 0x79, 0xd9, 0xd2,
	0xf4, 0x6f, 0x01, 0xec, 0x4d, 0xcf, 0xb9, 0xfe, 0x94, 0xb1, 0x9b, 0x54, 0xae, 0x2d, 0x31, 0xd2,
	0x33, 0x38, 0x9a, 0x47, 0x36, 0xa8, 0xdc, 0x8b, 0x9f, 0xde, 0xab, 0xc6, 0x2f, 0x9f, 0x32, 0x7e,
	0x37, 0xa0, 0x42, 0xcb, 0x88, 0x4d, 0x19, 0x5b, 0xf9, 0x54, 0x50, 0x5d, 0x1b, 0x8b, 0x73, 0xd6,
	0xc6, 0x52, 0x7a, 0x6d, 0x1c, 0xc0, 0xba, 0x90, 0x98, 0x05, 0x5b, 0xb8, 0xbe, 0x77, 0x91, 0x45,
	0x4f, 0x3e, 0x63, 0xaa, 0x5c, 0xe2, 0xc1, 0x92, 0xf1, 0xef, 0xf2, 0x91, 0x1f, 0xd0, 0x39, 0x25,
	0xe6, 0x68, 0x14, 0x55, 0xf5, 0x12, 0x76, 0x67, 0x03, 0x4a, 0x35, 0x77, 0x40, 0xee, 0x88, 0x83,
	0x2b, 0x26, 0x04, 0xba, 0x2b, 0x2a, 0xc4, 0x04, 0xbe, 0xa6, 0xe9, 0x3e, 0x42, 0xeb, 0xca, 0xf7,
	0xf0, 0x3c, 0x89, 0x8b, 0x92, 0x13, 0x3c, 0x13, 0x54, 0xe6, 0x8d, 0x90, 0xa1, 0xcc, 0xb7, 0xe9,
	0x2c, 0xa2, 0x3e, 0xfd, 0x36, 0xfd, 0x0b, 0x58, 0x91, 0xfb, 0x9a, 0x7b, 0xeb, 0x62, 0x2b, 0x27,
	0x13, 0x6d, 0x85, 0x55, 0xff, 0x15, 0xa8, 0x28, 0x4a, 0xc7, 0xb5, 0x46, 0xec, 0x28, 0x53, 0x5d,
	0x62, 0xab, 0xcc, 0xc6, 0x9f, 0x97, 0x40, 0x8b, 0xb6, 0x8e, 0x62, 0x9e, 0xbf, 0xc5, 0x56, 0x78,
	0x1c, 0xcd, 0xe2, 0xcf, 0x53, 0x3c, 0x8d, 0x91, 0x47, 0xb8, 0x73, 0xa7, 0xcb, 0xaf, 0xfc, 0x3b,
	0x8c, 0x24, 0xac, 0x7f, 0x04, 0xeb, 0x08, 0x71, 0x33, 0x19, 0x7b, 0x8b, 0x2b, 0x76, 0x9a, 0x10,
	0x1d, 0x11, 0xd0, 0xbd, 0xc4, 0xe6, 0x79, 0x0c, 0x08, 0x89, 0xf0, 0xd0, 0x58, 0x42, 0xbf, 0x46,
	0x94, 0xd6, 0x3f, 0x87, 0x6b, 0x72, 0x71, 0x2c, 0x7e, 0x8b, 0xd5, 0xc6, 0xd4, 0x3d, 0x8b, 0x2c,
	0xed, 0x4e, 0x16, 0x93, 0x9b, 0xa9, 0x38, 0x0c, 0x6d, 0x69, 0x6e, 0x18, 0x5a, 0x39, 0x2b, 0x0c,
	0x4d, 0x8a, 0xe9, 0x02, 0x35, 0xa6, 0xeb, 0x65, 0xc2, 0x51, 0x93, 0x41, 0x65, 0x2b, 0x97, 0x0f,
	0x2a, 0xdb, 0x82, 0x65, 0x16, 0xf3, 0xc6, 0x62, 0x12, 0x98, 0xf3, 0x54, 0x86, 0x12, 0xff, 0x8a,
	0x58, 0x9d, 0xff, 0xaf, 0x88, 0x1d, 0x69, 0xac, 0x60, 0x2c, 0x9d, 0x35, 0xe4, 0x41, 0xac, 0x29,
	0x3c, 0x11, 0xea, 0xaa, 0xcd, 0x0d, 0x75, 0x5d, 0xcf, 0x08, 0x75, 0x8d, 0x82, 0x6e, 0x5d, 0x1e,
	0x74, 0xab, 0xcb, 0x41, 0xb7, 0x6e, 0x66, 0xd0, 0xed, 0x95, 0x54, 0xd0, 0xad, 0x12, 0x30, 0xbb,
	0x91, 0x08, 0x98, 0x35, 0x7e, 0x2c, 0x79, 0x83, 0xa3, 0x46, 0x44, 0x51, 0x11, 0xaf, 0x62, 0xf3,
	0x67, 0x1d, 0x82, 0x37, 0xa0, 0x64, 0x05, 0x9d, 0x33, 0x8f, 0x07, 0xbd, 0xb3, 0x84, 0xf1, 0xbb,
	0x39, 0xe9, 0x46, 0x48, 0x15, 0xe0, 0x15, 0xd7, 0x9c, 0x3b, 0x6c, 0xae, 0xa4, 0x76, 0x4b, 0xc9,
	0x69, 0x6e, 0x47, 0x6c, 0x33, 0x44, 0xfb, 0xed, 0x1c, 0xe8, 0x98, 0x89, 0x9c, 0x3e, 0x7e, 0xe5,
	0x1f, 0xaf, 0xc5, 0xd7, 0x41, 0x05, 0xf9, 0x3a, 0x48, 0x78, 0x71, 0x8b, 0xf1, 0x0f, 0xd9, 0x36,
	0x61, 0x91, 0x1e, 0xa7, 0xa8, 0x99, 0x64, 0xcf, 0x57, 0x44, 0x12, 0x8f, 0x8b, 0x87, 0xfc, 0x8e,
	0x23, 0x6f, 0x1d, 0x1a, 0xbf, 0x97, 0x87, 0x15, 0x2a, 0x58, 0x24, 0x52, 0x7c, 0x9e, 0x2c, 0xe2,
	0xf9, 0xf6, 0x22, 0x81, 0xf0, 0xa4, 0x74, 0xec, 0x33, 0x8d, 0x46, 0x27, 0x25, 0x0e, 0xb0, 0xc1,
	0xf2, 0x82, 0xb5, 0x58, 0x44, 0xa0, 0x46, 0x00, 0xfe, 0x5b, 0xcb, 0x0f, 0xe9, 0xb6, 0x86, 0xdd,
	0x90, 0xf2, 0x94, 0x7e, 0x07, 0x16, 0xab, 0xce, 0x38, 0x74, 0x5c, 0x8f, 0xc7, 0xc9, 0x5f, 0x8b,
	0x35, 0xae, 0x28, 0xcf, 0x16, 0x7c, 0x74, 0xfc, 0x33, 0x12, 0x8f, 0x12, 0x60, 0x16, 0x48, 0xc1,
	0x70, 0xf9, 0x64, 0x41, 0x48, 0x4b, 0x7c, 0xf9, 0x64, 0xc1, 0x46, 0x37, 0xa0, 0xc2, 0x8b, 0xe1,
	0xb7, 0xf7, 0xec, 0xd7, 0x28, 0x2a, 0x68, 0xec, 0xc2, 0x46, 0xb5, 0xcb, 0xcd, 0xdd, 0x68, 0xfa,
	0xf8, 0xd0, 0x39, 0x26, 0x73, 0xff, 0x2b, 0xf8, 0x03, 0xb8, 0x92, 0xca, 0xc3, 0x86, 0x21, 0x13,
	0x2c, 0x3a, 0xf4, 0x55, 0x6c, 0x09, 0xd1, 0x7f, 0x09, 0x8a, 0x94, 0x9d, 0x3b, 0x67, 0xd7, 0xa3,
	0xc6, 0x47, 0xcd, 0x46, 0xb2, 0xb1, 0x0b, 0x5a, 0xb5, 0xdb, 0x25, 0xce, 0x64, 0x70, 0x42, 0xd3,
	0x62, 0x86, 0xd1, 0xef, 0x6e, 0x38, 0x11, 0x2f, 0x82, 0xca, 0xb6, 0x84, 0x18, 0xdf, 0x46, 0x6f,
	0x46, 0x9c, 0x27, 0x18, 0xeb, 0x1f, 0x42, 0x89, 0x7e, 0xaa, 0x37, 0x3d, 0x4a, 0x75, 0x8c, 0x6e,
	0x6c, 0xc3, 0x6a, 0xb5, 0x4b, 0x2d, 0x4a, 0x54, 0x5b, 0x3c, 0x37, 0x73, 0x72, 0x3c, 0xad, 0xf1,
	0x0d, 0xa8, 0x48, 0x9c, 0x19, 0x07, 0x7a, 0x59, 0x49, 0x0d, 0xb8, 0x56, 0xed, 0x52, 0x46, 0x73,
	0x3c, 0x1e, 0x71, 0xb7, 0x25, 0xdf, 0x7f, 0x7c, 0x04, 0xeb, 0x32, 0x18, 0x07, 0x80, 0x54, 0xec,
	0x34, 0xc1, 0xf8, 0x88, 0xca, 0xf7, 0xd5, 0xd4, 0x0d, 0x23, 0xf9, 0x2e, 0xaa, 0x16, 0x65, 0x8c,
	0xb8, 0xe7, 0xc8, 0x88, 0x7f, 0x86, 0x13, 0xcc, 0x71, 0xf0, 0x38, 0x1f, 0xd8, 0xbc, 0xf1, 0x2c,
	0x65, 0xf4, 0xe9, 0x06, 0x1a, 0x15, 0x91, 0x8c, 0xfb, 0x7e, 0x4d, 0xfd, 0x4e, 0xd0, 0xa9, 0xc4,
	0xcc, 0x5b, 0x64, 0x5a, 0x95, 0x79, 0x98, 0x4b, 0xce, 0xc3, 0x39, 0x26, 0x85, 0xcf, 0xc2, 0x82,
	0x3c, 0x0b, 0x59, 0x20, 0x93, 0x5c, 0xcd, 0x1c, 0x1d, 0xdd, 0xa1, 0x83, 0xbd, 0x41, 0x42, 0xde,
	0x31, 0x5e, 0x18, 0xcc, 0xed, 0x83, 0x16, 0xe8, 0xc9, 0x2c, 0xc1, 0x58, 0xff, 0x0c, 0x20, 0x06,
	0xf8, 0xa8, 0x9c, 0x69, 0x01, 0x24, 0x56, 0xe3, 0x5b, 0xf4, 0xac, 0x61, 0x93, 0x27, 0xd3, 0x80,
	0x44, 0xa8, 0x50, 0x4e, 0x04, 0xf0, 0xde, 0x8a, 0x01, 0xe3, 0x53, 0x3a, 0xb3, 0x93, 0xd9, 0xd8,
	0x8b, 0xb6, 0x0b, 0x72, 0x61, 0x65, 0xe6, 0x60, 0x40, 0xc6, 0xe1, 0xcb, 0x54, 0x86, 0x66, 0x24,
	0x99, 0x6d, 0x8e, 0x66, 0xdb, 0x58, 0xd5, 0x70, 0x18, 0x37, 0x9f, 0x0f, 0xa8, 0x6f, 0x41, 0xb9,
	0x4d, 0xce, 0xa4, 0x51, 0x78, 0x81, 0xa2, 0x62, 0x4e, 0xd6, 0xb3, 0x0d, 0x12, 0xb2, 0xe4, 0xfc,
	0x6e, 0xaa, 0x51, 0xa3, 0x21, 0xf1, 0x63, 0x84, 0xc0, 0x22, 0x4f, 0xcd, 0xeb, 0x20, 0xc1, 0xc7,
	0x1e, 0x70, 0xd8, 0xe4, 0xd4, 0x7f, 0x4e, 0x18, 0x24, 0x4c, 0x48, 0xe6, 0x2c, 0xba, 0x4d, 0x07,
	0xb9, 0xc2, 0x3d, 0x47, 0x49, 0xf8, 0x04, 0x85, 0x65, 0x48, 0xe9, 0x69, 0x56, 0x25, 0x9f, 0x50,
	0x91, 0x44, 0x64, 0xf6, 0xa5, 0xac, 0x06, 0x8a, 0xa5, 0xe4, 0x98, 0x23, 0xd6, 0xbf, 0xce, 0xc1,
	0x0a, 0xdd, 0x21, 0x4c, 0xdc, 0xc7, 0x53, 0x3c, 0xc4, 0xbd, 0xdc, 0x7a, 0xff, 0x11, 0xac, 0x77,
	0x43, 0xe7, 0x98, 0xc8, 0x45, 0xf0, 0xe3, 0x7d, 0x9a, 0x80, 0x0f, 0x7b, 0xd9, 0x89, 0x41, 0xe2,
	0x66, 0x7e, 0x9a, 0x34, 0x81, 0xee, 0x3f, 0xb1, 0x08, 0x71, 0x6c, 0xa2, 0xfa, 0x61, 0x7e, 0xcb,
	0x14, 0x6e, 0xdc, 0xa6, 0x43, 0x90, 0x05, 0x04, 0x46, 0x05, 0x5c, 0xb8, 0x04, 0x74, 0xe8, 0x38,
	0x4f, 0x66, 0xc0, 0xc9, 0x5d, 0x19, 0x48, 0x50, 0x62, 0xd5, 0x91, 0x99, 0x55, 0x3e, 0xe6, 0x2d,
	0xa6, 0x05, 0xca, 0xab, 0xf2, 0xdc, 0xfe, 0xfa, 0xa6, 0x90, 0x5b, 0xc9, 0x35, 0xa7, 0xcf, 0x26,
	0xec, 0x96, 0x44, 0x18, 0x3e, 0xba, 0xb9, 0xa0, 0xdf, 0xec, 0x98, 0xe7, 0x8b, 0x15, 0x48, 0xc1,
	0xa2, 0x48, 0xe2, 0xbc, 0x14, 0x49, 0x4c, 0xf7, 0x81, 0xde, 0x13, 0xff, 0x8e, 0x88, 0x64, 0xc1,
	0x84, 0x40, 0x77, 0xf9, 0xb1, 0x8c, 0x25, 0x98, 0xa0, 0xd2, 0xbe, 0x75, 0x66, 0x24, 0xb1, 0xba,
	0x74, 0x6e, 0xa4, 0x33, 0x05, 0x63, 0xfd, 0x36, 0x94, 0x45, 0x32, 0x1d, 0xc0, 0x11, 0x31, 0xc6,
	0x3c, 0xc6, 0x81, 0xb8, 0x5c, 0x68, 0x93, 0x33, 0x81, 0xf2, 0xb9, 0xf3, 0x31, 0x2c, 0x09, 0x24,
	0x15, 0xeb, 0x10, 0x15, 0x15, 0xb1, 0x18, 0x5f, 0xd2, 0x69, 0x18, 0x4f, 0xc0, 0x8e, 0x37, 0x72,
	0xbd, 0xf8, 0x6f, 0x2e, 0x0b, 0x97, 0xb3, 0x55, 0x62, 0x7e, 0xfe, 0x7a, 0x5e, 0x84, 0xe7, 0xb3,
	0x03, 0x88, 0xe5, 0x49, 0x27, 0x15, 0x5e, 0xe8, 0x75, 0x28, 0x33, 0x62, 0x3c, 0xab, 0x62, 0x60,
	0xa6, 0x83, 0x5f, 0x3d, 0x4f, 0x15, 0xe6, 0x9e, 0xa7, 0x8a, 0x97, 0x39, 0x4f, 0x95, 0xb2, 0xce,
	0x53, 0xca, 0x79, 0x69, 0x21, 0xf9, 0xc0, 0x70, 0x0b, 0x96, 0x99, 0xb0, 0xf2, 0xdb, 0x7f, 0x19,
	0x32, 0x9a, 0xa2, 0x6b, 0xf0, 0xd6, 0xe0, 0xd1, 0x93, 0xc7, 0xcc, 0x7d, 0x49, 0x87, 0xc6, 0x1d,
	0xfe, 0x9b, 0xc4, 0x54, 0x98, 0xcb, 0xa3, 0xfd, 0xbd, 0x7e, 0xcf, 0xdc, 0x6b, 0xd6, 0x99, 0xab,
	0x3a, 0xe6, 0x32, 0xfe, 0x45, 0xf4, 0xbf, 0x21, 0xb5, 0x38, 0xbc, 0x88, 0x48, 0xff, 0xfa, 0x34,
	0xf7, 0x12, 0xbf, 0x3e, 0xcd, 0x67, 0xff, 0xfa, 0x54, 0x95, 0xb2, 0x70, 0x19, 0x29, 0xe9, 0xd9,
	0x85, 0x4e, 0xa0, 0xb6, 0x7f, 0xc6, 0x15, 0x2f, 0x92, 0xc6, 0x3f, 0x29, 0x09, 0x2f, 0xae, 0x10,
	0x9d, 0xed, 0xb0, 0xc4, 0x80, 0x0d, 0xcf, 0xd5, 0x3f, 0xba, 0xe5, 0x2e, 0xfe, 0xa3, 0x5b, 0x3e,
	0xf5, 0x47, 0xb7, 0xa4, 0x97, 0xbb, 0x90, 0xfd, 0x9b, 0xc4, 0x36, 0x79, 0xc1, 0x7e, 0x7d, 0x29,
	0xa2, 0xa9, 0xf8, 0x8f, 0x5f, 0x93, 0xf8, 0xcb, 0xff, 0x41, 0x72, 0x1b, 0xd6, 0x3a, 0x67, 0xde,
	0x43, 0x87, 0x39, 0xd9, 0x70, 0x78, 0xb2, 0x51, 0x93, 0x84, 0xf1, 0x75, 0x16, 0x85, 0xac, 0xe1,
	0x88, 0x20, 0xdf, 0x22, 0x7f, 0x9d, 0x25, 0x83, 0xe8, 0x1c, 0xa4, 0xc0, 0x01, 0xe3, 0x59, 0xe2,
	0xce, 0xc1, 0x18, 0x8a, 0x6a, 0x6c, 0x12, 0x7f, 0xec, 0x4c, 0x90, 0xab, 0x2c, 0xd5, 0x18, 0xc3,
	0xb4, 0xe1, 0x08, 0xf5, 0x5c, 0xc7, 0xdb, 0xe3, 0xac, 0xcc, 0x1d, 0x93, 0xc2, 0x69, 0xa9, 0xb1,
	0xac, 0xb2, 0x5b, 0x26, 0x09, 0xe3, 0x3c, 0xe2, 0xd2, 0x32, 0x3e, 0xf6, 0x56, 0x58, 0x05, 0xd1,
	0x67, 0x2a, 0xf1, 0xb0, 0xf7, 0x79, 0x32, 0x44, 0x6b, 0x8c, 0x65, 0x95, 0x9f, 0xe6, 0x25, 0x61,
	0x0c, 0x13, 0x62, 0xa2, 0x32, 0xb6, 0x35, 0xfe, 0xcf, 0x01, 0x09, 0x53, 0x87, 0xad, 0x76, 0xa9,
	0x61, 0xcb, 0xff, 0xaa, 0xb5, 0x1e, 0xff, 0x55, 0xeb, 0x0f, 0x22, 0x77, 0xc4, 0xa3, 0x27, 0x8f,
	0xd9, 0x18, 0x92, 0x46, 0x2a, 0xe7, 0xcf, 0x45, 0xfc, 0xfa, 0x2d, 0xd0, 0xa3, 0x11, 0x14, 0x47,
	0xf1, 0xb1, 0x99, 0x95, 0x41, 0xa1, 0x13, 0x05, 0xe3, 0x31, 0xb9, 0x0d, 0x2b, 0xd8, 0x22, 0xa9,
	0x8a, 0x5f, 0xbc, 0x94, 0x6d, 0xf8, 0x83, 0x1c, 0x54, 0x1e, 0x3d, 0x79, 0x2c, 0x05, 0x31, 0x6c,
	0xc2, 0x22, 0xf3, 0x9f, 0x44, 0xef, 0x25, 0x78, 0x32, 0x8a, 0x21, 0x26, 0xa9, 0x18, 0xe2, 0xb8,
	0x7c, 0xfb, 0xa8, 0x59, 0xef, 0xf2, 0xb7, 0x40, 0x31, 0xb3, 0xa4, 0x7c, 0xd9, 0x87, 0xa9, 0x60,
	0xb4, 0xb3, 0x45, 0x9f, 0xc5, 0xbf, 0xf7, 0x95, 0x21, 0xe3, 0xc7, 0x62, 0xbd, 0x8c, 0x24, 0xe6,
	0x4a, 0x7d, 0x79, 0xa3, 0xa8, 0xef, 0xd2, 0xc6, 0x88, 0x46, 0xf3, 0x7f, 0x0c, 0xb2, 0x2b, 0x71,
	0x45, 0x1d, 0xb6, 0xc4, 0x15, 0x9b, 0x65, 0xfc, 0xc7, 0xf2, 0x4f, 0x6b, 0x96, 0xbf, 0x14, 0x56,
	0x59, 0x2d, 0x0d, 0x37, 0xda, 0x2f, 0x5d, 0xd8, 0xef, 0x46, 0xb1, 0x52, 0x68, 0x2e, 0x2c, 0x8f,
	0xb6, 0xe2, 0xd5, 0x04, 0x63, 0x7e, 0xfc, 0x47, 0x27, 0x53, 0x3e, 0x06, 0x59, 0x42, 0xff, 0x0c,
	0xca, 0x58, 0xb4, 0x64, 0xd2, 0x2f, 0xe8, 0xfc, 0x98, 0xd7, 0xf8, 0x9d, 0xe8, 0x49, 0xac, 0x24,
	0xda, 0x2b, 0xb5, 0xf2, 0x35, 0x4b, 0xb6, 0x33, 0x86, 0xab, 0xd9, 0x2f, 0x01, 0xf4, 0x37, 0xe1,
	0x8d, 0x14, 0xd8, 0xb7, 0x3a, 0x5d, 0x2d, 0xa7, 0x5f, 0x87, 0xcd, 0x34, 0xe9, 0x7e, 0xdd, 0x7a,
	0x60, 0xb5, 0xb5, 0xbc, 0xfe, 0x0e, 0xbc, 0x99, 0x41, 0xb5, 0xda, 0xb5, 0xce, 0xfd, 0xae, 0x56,
	0xd8, 0xf9, 0x9b, 0x39, 0xd0, 0xd3, 0xd1, 0x7a, 0xfa, 0x26, 0x6c, 0x28, 0x40, 0xbf, 0xdd, 0xb1,
	0x5b, 0x66, 0x53, 0xcb, 0x51, 0x41, 0x54, 0xca, 0x3d, 0xab, 0x6b, 0xf5, 0x3a, 0xb6, 0x96, 0x4f,
	0x67, 0xe2, 0x42, 0x14, 0xf4, 0x0d, 0xd0, 0x54, 0xca, 0x57, 0x5f, 0x69, 0x45, 0xfd, 0x1a, 0x5c,
	0x51, 0x51, 0xbb, 0xb3, 0xd7, 0xe9, 0x69, 0xa5, 0x9d, 0x5f, 0xcf, 0xc3, 0xb2, 0x14, 0xfd, 0x45,
	0x19, 0xa5, 0x64, 0xbf, 0x7b, 0x54, 0xad, 0xd6, 0xbb, 0x5d, 0xed, 0x6b, 0x29, 0xc2, 0xc3, 0x6e,
	0xbf, 0x6e, 0xdb, 0x5a, 0x4e, 0x7f, 0x1b, 0xae, 0xc9, 0x84, 0x9e, 0xd5, 0xaa, 0x77, 0x8e, 0x7a,
	0x48, 0xcc, 0x33, 0x85, 0xc5, 0xc4, 0xc3, 0x83, 0x4e, 0xbb, 0xde, 0x3e, 0x6a, 0x21, 0xb5, 0xa0,
	0x6f, 0xc1, 0x75, 0x99, 0x6a, 0xd7, 0x1b, 0xfd, 0xb6, 0x55, 0xfd, 0xb2, 0x8d, 0xcf, 0x04, 0x6d,
	0x5b, 0x2b, 0x26, 0x0b, 0xa7, 0x1c, 0xdd, 0xfa, 0x03, 0x24, 0x96, 0xf4, 0xf7, 0xe1, 0x1d, 0x99,
	0x68, 0x1e, 0xf5, 0x0e, 0xfa, 0x87, 0x66, 0xb7, 0x7b, 0xbf, 0x63, 0xd7, 0x90, 0x65, 0x41, 0xff,
	0x00, 0xde, 0x93, 0x59, 0xaa, 0x07, 0x66, 0x9b, 0x76, 0x8e, 0xcc, 0xb4, 0xb8, 0xf3, 0xb7, 0x73,
	0xb0, 0x91, 0xf5, 0x12, 0x82, 0x6a, 0x39, 0x01, 0xf5, 0xdb, 0x9d, 0x76, 0x5d, 0xfb, 0x5a, 0x16,
	0xc5, 0x6a, 0x5b, 0x3d, 0x2d, 0xc7, 0xf4, 0x94, 0xa4, 0x34, 0xb4, 0x3c, 0x6b, 0x8a, 0x4a, 0x10,
	0xda, 0x2d, 0x64, 0x95, 0xb7, 0x6f, 0x5a, 0x4d, 0xad, 0xb8, 0x13, 0x40, 0x45, 0x79, 0xff, 0xa9,
	0x5f, 0x05, 0x5d, 0x01, 0x84, 0x48, 0x29, 0xbc, 0xd1, 0x69, 0xd6, 0xd8, 0x28, 0x52, 0xf1, 0x9a,
	0x65, 0xb6, 0x3a, 0xed, 0x9a, 0x96, 0xa7, 0xb2, 0xaa, 0xa4, 0xc3, 0x8e, 0xd5, 0xee, 0x69, 0x85,
	0x9d, 0x7f, 0x96, 0x83, 0x72, 0x14, 0x8f, 0xa2, 0xeb, 0xb0, 0x1a, 0x25, 0x58, 0x6d, 0x39, 0xfd,
	0x7d, 0xb8, 0x1e, 0x63, 0xd5, 0xa3, 0x6e, 0xaf, 0xd3, 0xea, 0x3f, 0x38, 0xaa, 0xf7, 0x1f, 0x1d,
	0x98, 0xed, 0x7e, 0xeb, 0xae, 0xf6, 0xbf, 0x0b, 0xfa, 0x4d, 0x78, 0x3f, 0xc5, 0x42, 0x65, 0x52,
	0xf8, 0xfe, 0x4f, 0x36, 0x5f, 0xb5, 0x79, 0xb4, 0xa7, 0xf0, 0xfd, 0xdf, 0x42, 0x66, 0x95, 0x74,
	0x96, 0x3f, 0x3c, 0x6a, 0xd6, 0x29, 0xcb, 0xff, 0x2b, 0xec, 0xf4, 0x61, 0x55, 0x35, 0x20, 0x54,
	0xf6, 0x9e, 0xd9, 0xac, 0xf7, 0x9b, 0xf5, 0x7b, 0x91, 0xec, 0xeb, 0x50, 0x89, 0x31, 0x0a, 0xe5,
	0x55, 0xa8, 0x77, 0xbf, 0xa3, 0x15, 0xf4, 0x2b, 0xb0, 0x26, 0x41, 0x07, 0x76, 0xbd, 0xae, 0x15,
	0x77, 0x7e, 0x2b, 0x07, 0x1b, 0x59, 0x96, 0x85, 0xd6, 0x43, 0x71, 0x86, 0xf0, 0x7a, 0x36, 0x40,
	0x8b, 0xb1, 0x47, 0x07, 0x47, 0x26, 0x8e, 0x03, 0x85, 0xd3, 0xaa, 0x35, 0xeb, 0x5a, 0x41, 0xd7,
	0x60, 0x25, 0xc6, 0x0e, 0xea, 0x5a, 0x51, 0xcd, 0xdb, 0xac, 0x77, 0x0e, 0x4d, 0x3a, 0xe2, 0xd7,
	0xa1, 0x12, 0xa3, 0x7b, 0xa6, 0xad, 0x2d, 0xec, 0xb8, 0xd2, 0x5f, 0x16, 0xa8, 0xcc, 0x34, 0xd1,
	0xc7, 0x54, 0xdf, 0xf2, 0xdc, 0x50, 0xcb, 0x25, 0xc0, 0x86, 0x73, 0x4a, 0x58, 0xd7, 0x4b, 0xa0,
	0x70, 0x70, 0x68, 0x05, 0xb4, 0x7e, 0x31, 0xe1, 0xbe, 0xe3, 0x86, 0x7d, 0xfc, 0x01, 0x87, 0x56,
	0xdc, 0x31, 0x60, 0x99, 0x3d, 0x6d, 0x27, 0x4f, 0x5c, 0x8f, 0x30, 0x05, 0x51, 0x35, 0x74, 0xeb,
	0x26, 0x9f, 0x18, 0xc3, 0x9d, 0x3f, 0xc9, 0x01, 0xc4, 0x1b, 0x5d, 0xda, 0x0c, 0x4c, 0xa9, 0x12,
	0xbd, 0x01, 0xeb, 0x32, 0x8a, 0x91, 0x82, 0x5a, 0x9e, 0x8e, 0x60, 0x19, 0x6e, 0x38, 0xa7, 0xae,
	0x77, 0xcc, 0x26, 0x47, 0x02, 0x27, 0xfd, 0xba, 0x37, 0xd4, 0x8a, 0x49, 0x4a, 0xd4, 0x8c, 0x92,
	0xfe, 0x16, 0x5c, 0x95, 0x29, 0x52, 0x3b, 0x16, 0xa8, 0x9d, 0x4e, 0xd1, 0xa2, 0xac, 0x8b, 0x99,
	0x64, 0xf1, 0x38, 0x4c, 0x5b, 0xda, 0xf9, 0xd3, 0x1c, 0x2c, 0x4b, 0x3f, 0xc6, 0xa4, 0x52, 0xb7,
	0x9e, 0xf6, 0x69, 0x3a, 0xd5, 0x48, 0x15, 0xef, 0xba, 0x21, 0x53, 0xbc, 0x0a, 0x63, 0xfc, 0x08,
	0x53, 0xbc, 0x4a, 0x38, 0x1c, 0x39, 0xe7, 0x54, 0x01, 0x38, 0x18, 0x54, 0xd2, 0xc1, 0x54, 0x2b,
	0xd1, 0xc6, 0xab, 0x28, 0xfb, 0xef, 0xb6, 0xb6, 0xa0, 0xbf, 0x0b, 0x6f, 0xa9, 0x94, 0xce, 0x63,
	0x74, 0x20, 0x4c, 0x50, 0x86, 0x45, 0xfd, 0x3d, 0x78, 0x5b, 0xa5, 0x27, 0xdb, 0x78, 0x1b, 0x56,
	0xd8, 0x2d, 0x06, 0xef, 0xea, 0xf7, 0xe0, 0x2d, 0xab, 0x7d, 0xcf, 0x6c, 0x5a, 0xb5, 0x7e, 0xd3,
	0xec, 0x59, 0xbd, 0xa3, 0x5a, 0xbd, 0xdf, 0xec, 0xb4, 0x1b, 0xf8, 0xa5, 0xfd, 0x9b, 0xdc, 0xce,
	0x7f, 0xcd, 0xc3, 0x5a, 0xe2, 0x0f, 0xaa, 0x28, 0x9f, 0x0a, 0x89, 0x89, 0x91, 0x41, 0xa9, 0xd5,
	0xcd, 0x26, 0xd7, 0x4e, 0x82, 0xd2, 0x38, 0xea, 0xb0, 0x31, 0x90, 0x24, 0x1c, 0xd6, 0xdb, 0x0d,
	0xad, 0x48, 0xbb, 0x2b, 0x49, 0x69, 0x59, 0xed, 0x46, 0xbf, 0x41, 0xa7, 0x5b, 0x89, 0x9a, 0xdd,
	0x24, 0xd9, 0x6c, 0x33, 0xe2, 0x42, 0x16, 0x71, 0xef, 0x88, 0x11, 0x17, 0x51, 0x8b, 0x09, 0xa2,
	0x5d, 0xbf, 0x5b, 0xaf, 0xf6, 0xba, 0x47, 0x56, 0x4f, 0x5b, 0xc2, 0x8e, 0x4f, 0xd0, 0x0f, 0x8e,
	0xb4, 0x32, 0x1d, 0x7a, 0x29, 0x81, 0x3a, 0xfd, 0x43, 0xd3, 0xd2, 0x20, 0xab, 0xc2, 0x86, 0x75,
	0xaf, 0xde, 0x3f, 0x3a, 0xd4, 0x96, 0x75, 0x03, 0xde, 0x4d, 0x17, 0x68, 0xb6, 0xfb, 0x5d, 0xb3,
	0x8d, 0x76, 0xb0, 0xa1, 0xad, 0xec, 0xfc, 0x8f, 0x02, 0xd6, 0x9a, 0x08, 0x4e, 0xe3, 0xe5, 0x26,
	0x50, 0xb1, 0x32, 0xd0, 0x91, 0x95, 0x26, 0x1e, 0x1c, 0xb1, 0x0d, 0x4d, 0x06, 0xe9, 0x91, 0xd5,
	0x6f, 0x75, 0xb4, 0x3c, 0x5d, 0x60, 0x33, 0xa8, 0x5f, 0x59, 0xa6, 0x50, 0x6f, 0x01, 0x87, 0x52,
	0x9a, 0x85, 0x12, 0xa9, 0xec, 0x5a, 0xf1, 0x22, 0x86, 0x43, 0xb3, 0xa3, 0x95, 0x66, 0x31, 0x1c,
	0x99, 0xfd, 0xfd, 0x3a, 0x76, 0x12, 0xeb, 0xe0, 0x24, 0xc3, 0x03, 0xcb, 0xec, 0x3f, 0x3c, 0xe2,
	0x83, 0x39, 0x4d, 0xae, 0x1e, 0x98, 0xfd, 0xbb, 0x96, 0xd9, 0xd1, 0x96, 0x66, 0x30, 0xf4, 0x8e,
	0xac, 0x7e, 0xf7, 0xe0, 0xc8, 0xd2, 0xca, 0xbc, 0xa3, 0xd3, 0xfa, 0x31, 0xa9, 0xd1, 0xd6, 0x60,
	0x46, 0x01, 0x68, 0xd0, 0xa9, 0x08, 0xcb, 0x33, 0x0a, 0xe8, 0x59, 0x66, 0x9b, 0x6a, 0x79, 0x65,
	0x86, 0x96, 0x6b, 0x16, 0xa5, 0x56, 0x66, 0xb4, 0xaf, 0xde, 0xad, 0x9a, 0x87, 0x75, 0x6d, 0x75,
	0xe7, 0x3f, 0xe4, 0x61, 0x6d, 0xdf, 0x6a, 0x9b, 0xcd, 0x7e, 0xd5, 0xb4, 0x6b, 0xd1, 0x9e, 0x31,
	0x01, 0x49, 0xbb, 0x80, 0x24, 0x05, 0x3b, 0xfa, 0x2d, 0xb8, 0x9a, 0xc4, 0x6b, 0x66, 0xbf, 0x76,
	0x64, 0x69, 0x79, 0x3a, 0x3e, 0x92, 0xb4, 0xbb, 0xb4, 0x8f, 0xd9, 0xfe, 0x2b, 0x49, 0x7a, 0x68,
	0x76, 0xfa, 0x77, 0xad, 0x23, 0x6d, 0x29, 0x4b, 0x8a, 0xaf, 0xe8, 0x5e, 0x47, 0xcb, 0xaa, 0xed,
	0x2b, 0x0b, 0x6b, 0xdb, 0xa2, 0x9b, 0xbe, 0x74, 0x6d, 0xed, 0x7e, 0xa3, 0x73, 0x44, 0x77, 0x26,
	0x1d, 0xed, 0x57, 0xa9, 0xb5, 0x49, 0xb5, 0xc1, 0xb4, 0xa8, 0xbe, 0x9a, 0x66, 0x47, 0xfb, 0x49,
	0x4e, 0x7f, 0x07, 0x36, 0x93, 0x0c, 0xad, 0x7a, 0x9b, 0x55, 0xfe, 0x93, 0xbc, 0xbe, 0x05, 0x6f,
	0x27, 0xc9, 0x8f, 0x0e, 0x3a, 0xed, 0x06, 0x9f, 0x44, 0x3f, 0x29, 0xee, 0xb8, 0x70, 0x45, 0x9d,
	0x59, 0x4c, 0xad, 0xd7, 0x61, 0x33, 0x03, 0x96, 0xa6, 0x51, 0x16, 0xf5, 0x0e, 0xdb, 0x63, 0x65,
	0x91, 0x76, 0xb5, 0xfc, 0xce, 0x90, 0x2f, 0x6a, 0xea, 0x6f, 0x54, 0xae, 0xf1, 0x7f, 0x8c, 0xf4,
	0x05, 0xd2, 0x6f, 0xfb, 0x1e, 0x61, 0xa6, 0x31, 0x41, 0xc0, 0xdf, 0xbe, 0xb0, 0xfd, 0x63, 0x82,
	0x22, 0xfe, 0xef, 0xa2, 0x15, 0x76, 0x1a, 0xb0, 0x96, 0xf8, 0x8b, 0x07, 0x2d, 0x29, 0x01, 0xf5,
	0x7b, 0xf5, 0x07, 0x3d, 0xed, 0x6b, 0xb4, 0x77, 0x92, 0x14, 0xbb, 0x7e, 0xdf, 0xb4, 0x6b, 0x5a,
	0x6e, 0xe7, 0x07, 0x0a, 0x4d, 0xfa, 0xbd, 0x07, 0x9d, 0x05, 0xd9, 0x14, 0xa1, 0x9f, 0xf7, 0xe1,
	0x9d, 0x19, 0x0c, 0x76, 0xbd, 0x65, 0xb5, 0x69, 0xe9, 0x2d, 0x58, 0x4f, 0xfd, 0x03, 0x24, 0x21,
	0x0e, 0x03, 0x45, 0x99, 0xd7, 0x61, 0x33, 0x4d, 0xeb, 0x1c, 0xd6, 0xdb, 0x75, 0x5a, 0xdc, 0x00,
	0x56, 0xd5, 0x07, 0x7e, 0x54, 0xaf, 0x2a, 0x22, 0x6d, 0xd8, 0x13, 0x84, 0x9a, 0x69, 0x35, 0x1f,
	0x6a, 0x39, 0x3a, 0x79, 0x13, 0x14, 0xb3, 0x7a, 0x60, 0xd5, 0xef, 0xe1, 0x5c, 0xd4, 0xf2, 0x3b,
	0x7f, 0xbd, 0x08, 0x57, 0x32, 0x5e, 0x95, 0x52, 0xd1, 0x32, 0x60, 0x51, 0xdf, 0x0d, 0xd8, 0xca,
	0xa2, 0x56, 0x9b, 0x66, 0xb7, 0x6b, 0x55, 0xfb, 0xad, 0x4e, 0xad, 0xce, 0xcc, 0x6f, 0x16, 0x17,
	0xae, 0x6c, 0xf9, 0x59, 0x54, 0x6e, 0x79, 0xe9, 0x36, 0x25, 0x83, 0xca, 0x6c, 0x77, 0x71, 0x56,
	0x66, 0x9c, 0x23, 0x78, 0x74, 0xca, 0xa2, 0x32, 0x93, 0xd0, 0x7f, 0x64, 0x69, 0x0b, 0xfa, 0x4d,
	0x30, 0x66, 0xd5, 0xde, 0xef, 0x1e, 0x08, 0x03, 0xbf, 0x48, 0x8f, 0x58, 0x59, 0x7c, 0x74, 0x7b,
	0x20, 0x26, 0xfd, 0x12, 0x5d, 0xda, 0xb2, 0xa5, 0x89, 0x96, 0x92, 0x32, 0x1d, 0x60, 0x59, 0x3c,
	0xc2, 0xde, 0xc0, 0x2c, 0x9d, 0xb6, 0xeb, 0xf7, 0xe9, 0xc1, 0xd0, 0xea, 0xf6, 0xea, 0xb6, 0xb6,
	0xab, 0x7f, 0x03, 0x3e, 0xcc, 0xd4, 0x7c, 0xa7, 0x75, 0xd8, 0xac, 0xf7, 0xe8, 0x87, 0xd5, 0xee,
	0xef, 0x5b, 0xfb, 0xbd, 0x87, 0xda, 0x37, 0xf5, 0x3b, 0xf0, 0xf1, 0x7c, 0xe6, 0x4e, 0x9b, 0x1a,
	0xd1, 0x76, 0xcd, 0xae, 0xd7, 0xb4, 0x4f, 0x77, 0x7e, 0x44, 0x8f, 0x0a, 0xd2, 0xc3, 0x09, 0xdc,
	0xb6, 0xca, 0x80, 0x18, 0x02, 0x74, 0xc2, 0x2a, 0x78, 0xb5, 0xd9, 0xa9, 0x7e, 0x79, 0xdf, 0xea,
	0xd2, 0x9e, 0xdf, 0x82, 0xeb, 0x2a, 0xd1, 0x6c, 0xf7, 0x2c, 0x89, 0x23, 0x8f, 0x9b, 0x64, 0x85,
	0x63, 0xbf, 0xb7, 0xaf, 0x15, 0x76, 0x4e, 0x40, 0xc3, 0xc3, 0x51, 0xab, 0xde, 0xda, 0xab, 0xdb,
	0x4c, 0x02, 0x7a, 0xc4, 0x4b, 0x60, 0x92, 0x10, 0x29, 0x12, 0xfb, 0x66, 0xc3, 0x2f, 0x45, 0xac,
	0x9a, 0x87, 0x3d, 0xd3, 0x6a, 0x6b, 0xf9, 0x9d, 0x00, 0x96, 0x91, 0xca, 0xa7, 0xe9, 0x06, 0xaf,
	0x58, 0x9d, 0xa0, 0xf4, 0xd4, 0xa9, 0xa0, 0xdc, 0x77, 0x71, 0x05, 0xd6, 0x64, 0x7c, 0xcf, 0x6c,
	0xb3, 0xfd, 0x84, 0x0c, 0xde, 0x37, 0xad, 0x5e, 0x7f, 0xbf, 0x63, 0xf7, 0x6b, 0x56, 0xb7, 0xdb,
	0x69, 0xde, 0xa3, 0xe7, 0x87, 0xff, 0x94, 0x87, 0x8d, 0xc3, 0xa6, 0xf9, 0xb0, 0x6e, 0xb3, 0x33,
	0x20, 0xdb, 0x0d, 0x75, 0x6c, 0x3a, 0xdc, 0xb3, 0x70, 0x21, 0xc7, 0x2c, 0xf2, 0xdd, 0x8e, 0xd5,
	0x66, 0x93, 0x3c, 0x93, 0xdc, 0xac, 0x9b, 0xf7, 0xa8, 0xb2, 0x3f, 0x80, 0xf7, 0x32, 0xe9, 0x66,
	0xb3, 0x57, 0xb7, 0xfb, 0x6d, 0xb3, 0x45, 0x4f, 0x69, 0x17, 0x33, 0x35, 0x3b, 0x0d, 0x3a, 0xef,
	0x3e, 0x84, 0x0f, 0xb2, 0x99, 0x0e, 0x0f, 0x9b, 0x0f, 0xe3, 0x96, 0x96, 0xa8, 0xf2, 0x33, 0x19,
	0xa9, 0xaa, 0x16, 0x66, 0xd6, 0x55, 0x35, 0xdb, 0xd5, 0x7a, 0x13, 0x99, 0x16, 0xf5, 0x6d, 0xb8,
	0x91, 0xc9, 0xc4, 0xb6, 0xa9, 0x71, 0x65, 0x4b, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x97,
	0xad, 0x66, 0xb4, 0x76, 0x00, 0x00,
}
