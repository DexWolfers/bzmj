// Code generated by protoc-gen-go.
// source: msg.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	msg.proto

It has these top-level messages:
	Rpc
	Request
	Msg
	SyncError
	RpcErrorResponse
	Login
	LoginRsp
	CSUserCreateRoomRqst
	CSUserCreateRoomRsp
	CSUserEnterRoomRqst
	CSUserEnterRoomRsp
	CSUserReadyGameRqst
	CSUserReadyGameNotify
	CSUserMjAssignNotify
	PlayerBaseInfo
	SeatInfo
	ViewSeatInfo
	TableInfo
	CSUserTableInfoChangeNotify
	CSUserMjOperateRqst
	MjSettlementDetail
	MjSettlementInfo
	CSUserMjOperateNotify
	CSUserMjWaitForOperateNotify
	CSUserMjGetNotify
	CSUserMjLastHandNotify
	CSMjOperateRecord
	CSUserTableCardInfoNotify
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomState int32

const (
	RoomState_Room_State_Init       RoomState = 1
	RoomState_Room_State_Game       RoomState = 2
	RoomState_Room_State_Dissolve   RoomState = 3
	RoomState_Room_State_Wait_Renew RoomState = 4
)

var RoomState_name = map[int32]string{
	1: "Room_State_Init",
	2: "Room_State_Game",
	3: "Room_State_Dissolve",
	4: "Room_State_Wait_Renew",
}
var RoomState_value = map[string]int32{
	"Room_State_Init":       1,
	"Room_State_Game":       2,
	"Room_State_Dissolve":   3,
	"Room_State_Wait_Renew": 4,
}

func (x RoomState) Enum() *RoomState {
	p := new(RoomState)
	*p = x
	return p
}
func (x RoomState) String() string {
	return proto.EnumName(RoomState_name, int32(x))
}
func (x *RoomState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RoomState_value, data, "RoomState")
	if err != nil {
		return err
	}
	*x = RoomState(value)
	return nil
}
func (RoomState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TableState int32

const (
	TableState_Table_State_Init          TableState = 1
	TableState_Table_State_Start         TableState = 2
	TableState_Table_State_Gaming        TableState = 3
	TableState_Table_State_Game_End      TableState = 4
	TableState_Table_State_Dissolve      TableState = 5
	TableState_Table_State_Wait_Renew    TableState = 6
	TableState_Table_State_Wait_Dissolve TableState = 7
	TableState_Table_State_Wait_Recharge TableState = 8
)

var TableState_name = map[int32]string{
	1: "Table_State_Init",
	2: "Table_State_Start",
	3: "Table_State_Gaming",
	4: "Table_State_Game_End",
	5: "Table_State_Dissolve",
	6: "Table_State_Wait_Renew",
	7: "Table_State_Wait_Dissolve",
	8: "Table_State_Wait_Recharge",
}
var TableState_value = map[string]int32{
	"Table_State_Init":          1,
	"Table_State_Start":         2,
	"Table_State_Gaming":        3,
	"Table_State_Game_End":      4,
	"Table_State_Dissolve":      5,
	"Table_State_Wait_Renew":    6,
	"Table_State_Wait_Dissolve": 7,
	"Table_State_Wait_Recharge": 8,
}

func (x TableState) Enum() *TableState {
	p := new(TableState)
	*p = x
	return p
}
func (x TableState) String() string {
	return proto.EnumName(TableState_name, int32(x))
}
func (x *TableState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TableState_value, data, "TableState")
	if err != nil {
		return err
	}
	*x = TableState(value)
	return nil
}
func (TableState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type MjUserState int32

const (
	MjUserState_Mj_User_State_Init          MjUserState = 1
	MjUserState_Mj_User_State_Sit           MjUserState = 2
	MjUserState_Mj_User_State_Ready         MjUserState = 3
	MjUserState_Mj_User_State_Playing       MjUserState = 4
	MjUserState_Mj_User_State_Hu            MjUserState = 5
	MjUserState_Mj_User_State_GiveUp        MjUserState = 6
	MjUserState_Mj_User_State_Observer_Sit  MjUserState = 7
	MjUserState_Mj_User_State_Wait_Recharge MjUserState = 8
)

var MjUserState_name = map[int32]string{
	1: "Mj_User_State_Init",
	2: "Mj_User_State_Sit",
	3: "Mj_User_State_Ready",
	4: "Mj_User_State_Playing",
	5: "Mj_User_State_Hu",
	6: "Mj_User_State_GiveUp",
	7: "Mj_User_State_Observer_Sit",
	8: "Mj_User_State_Wait_Recharge",
}
var MjUserState_value = map[string]int32{
	"Mj_User_State_Init":          1,
	"Mj_User_State_Sit":           2,
	"Mj_User_State_Ready":         3,
	"Mj_User_State_Playing":       4,
	"Mj_User_State_Hu":            5,
	"Mj_User_State_GiveUp":        6,
	"Mj_User_State_Observer_Sit":  7,
	"Mj_User_State_Wait_Recharge": 8,
}

func (x MjUserState) Enum() *MjUserState {
	p := new(MjUserState)
	*p = x
	return p
}
func (x MjUserState) String() string {
	return proto.EnumName(MjUserState_name, int32(x))
}
func (x *MjUserState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MjUserState_value, data, "MjUserState")
	if err != nil {
		return err
	}
	*x = MjUserState(value)
	return nil
}
func (MjUserState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ROOM_TYPE int32

const (
	ROOM_TYPE_ROOM_TYPE_NONE                    ROOM_TYPE = 1
	ROOM_TYPE_ROOM_TYPE_CUSTOM_XUE_ZHAN_MJ      ROOM_TYPE = 500
	ROOM_TYPE_ROOM_TYPE_CUSTOM_GOLD_XUE_ZHAN_MJ ROOM_TYPE = 501
	ROOM_TYPE_ROOM_TYPE_CUSTOM_CLUB_XUE_ZHAN_MJ ROOM_TYPE = 502
	ROOM_TYPE_ROOM_TYPE_CUSTOM_ZFB_YULE_MJ      ROOM_TYPE = 503
)

var ROOM_TYPE_name = map[int32]string{
	1:   "ROOM_TYPE_NONE",
	500: "ROOM_TYPE_CUSTOM_XUE_ZHAN_MJ",
	501: "ROOM_TYPE_CUSTOM_GOLD_XUE_ZHAN_MJ",
	502: "ROOM_TYPE_CUSTOM_CLUB_XUE_ZHAN_MJ",
	503: "ROOM_TYPE_CUSTOM_ZFB_YULE_MJ",
}
var ROOM_TYPE_value = map[string]int32{
	"ROOM_TYPE_NONE":                    1,
	"ROOM_TYPE_CUSTOM_XUE_ZHAN_MJ":      500,
	"ROOM_TYPE_CUSTOM_GOLD_XUE_ZHAN_MJ": 501,
	"ROOM_TYPE_CUSTOM_CLUB_XUE_ZHAN_MJ": 502,
	"ROOM_TYPE_CUSTOM_ZFB_YULE_MJ":      503,
}

func (x ROOM_TYPE) Enum() *ROOM_TYPE {
	p := new(ROOM_TYPE)
	*p = x
	return p
}
func (x ROOM_TYPE) String() string {
	return proto.EnumName(ROOM_TYPE_name, int32(x))
}
func (x *ROOM_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ROOM_TYPE_value, data, "ROOM_TYPE")
	if err != nil {
		return err
	}
	*x = ROOM_TYPE(value)
	return nil
}
func (ROOM_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 麻将操作码
type MJ_OPERATE_MASK int32

const (
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE           MJ_OPERATE_MASK = 1
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_DEAL           MJ_OPERATE_MASK = 2
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_GUO            MJ_OPERATE_MASK = 3
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_PENG           MJ_OPERATE_MASK = 4
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_MING_GANG      MJ_OPERATE_MASK = 5
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_AN_GANG        MJ_OPERATE_MASK = 6
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_BU_GANG        MJ_OPERATE_MASK = 7
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_REJECTSUIT     MJ_OPERATE_MASK = 8
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_HU             MJ_OPERATE_MASK = 9
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_MO_PAI         MJ_OPERATE_MASK = 10
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_GIVE_UP        MJ_OPERATE_MASK = 11
	MJ_OPERATE_MASK_MJ_OPERATE_MASK_HUAN_SAN_ZHANG MJ_OPERATE_MASK = 12
)

var MJ_OPERATE_MASK_name = map[int32]string{
	1:  "MJ_OPERATE_MASK_NONE",
	2:  "MJ_OPERATE_MASK_DEAL",
	3:  "MJ_OPERATE_MASK_GUO",
	4:  "MJ_OPERATE_MASK_PENG",
	5:  "MJ_OPERATE_MASK_MING_GANG",
	6:  "MJ_OPERATE_MASK_AN_GANG",
	7:  "MJ_OPERATE_MASK_BU_GANG",
	8:  "MJ_OPERATE_MASK_REJECTSUIT",
	9:  "MJ_OPERATE_MASK_HU",
	10: "MJ_OPERATE_MASK_MO_PAI",
	11: "MJ_OPERATE_MASK_GIVE_UP",
	12: "MJ_OPERATE_MASK_HUAN_SAN_ZHANG",
}
var MJ_OPERATE_MASK_value = map[string]int32{
	"MJ_OPERATE_MASK_NONE":           1,
	"MJ_OPERATE_MASK_DEAL":           2,
	"MJ_OPERATE_MASK_GUO":            3,
	"MJ_OPERATE_MASK_PENG":           4,
	"MJ_OPERATE_MASK_MING_GANG":      5,
	"MJ_OPERATE_MASK_AN_GANG":        6,
	"MJ_OPERATE_MASK_BU_GANG":        7,
	"MJ_OPERATE_MASK_REJECTSUIT":     8,
	"MJ_OPERATE_MASK_HU":             9,
	"MJ_OPERATE_MASK_MO_PAI":         10,
	"MJ_OPERATE_MASK_GIVE_UP":        11,
	"MJ_OPERATE_MASK_HUAN_SAN_ZHANG": 12,
}

func (x MJ_OPERATE_MASK) Enum() *MJ_OPERATE_MASK {
	p := new(MJ_OPERATE_MASK)
	*p = x
	return p
}
func (x MJ_OPERATE_MASK) String() string {
	return proto.EnumName(MJ_OPERATE_MASK_name, int32(x))
}
func (x *MJ_OPERATE_MASK) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJ_OPERATE_MASK_value, data, "MJ_OPERATE_MASK")
	if err != nil {
		return err
	}
	*x = MJ_OPERATE_MASK(value)
	return nil
}
func (MJ_OPERATE_MASK) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 麻将操作码
type MJ_SETTLEMENT_TYPE int32

const (
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE       MJ_SETTLEMENT_TYPE = 0
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_HU         MJ_SETTLEMENT_TYPE = 1
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ZI_MO      MJ_SETTLEMENT_TYPE = 2
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_QIANG_GANG MJ_SETTLEMENT_TYPE = 3
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GANG_HUA   MJ_SETTLEMENT_TYPE = 4
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GANG_PAO   MJ_SETTLEMENT_TYPE = 5
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_GUA_FENG   MJ_SETTLEMENT_TYPE = 6
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_XIA_YU     MJ_SETTLEMENT_TYPE = 7
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_CHA_JIAO   MJ_SETTLEMENT_TYPE = 8
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_TUI_SHUI   MJ_SETTLEMENT_TYPE = 9
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_HUA_ZHU    MJ_SETTLEMENT_TYPE = 10
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ZHUAN_YU   MJ_SETTLEMENT_TYPE = 11
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_TIAN_HU    MJ_SETTLEMENT_TYPE = 12
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_DI_HU      MJ_SETTLEMENT_TYPE = 13
	MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_ESCAPE     MJ_SETTLEMENT_TYPE = 14
)

var MJ_SETTLEMENT_TYPE_name = map[int32]string{
	0:  "MJ_SETTLEMENT_TYPE_NONE",
	1:  "MJ_SETTLEMENT_TYPE_HU",
	2:  "MJ_SETTLEMENT_TYPE_ZI_MO",
	3:  "MJ_SETTLEMENT_TYPE_QIANG_GANG",
	4:  "MJ_SETTLEMENT_TYPE_GANG_HUA",
	5:  "MJ_SETTLEMENT_TYPE_GANG_PAO",
	6:  "MJ_SETTLEMENT_TYPE_GUA_FENG",
	7:  "MJ_SETTLEMENT_TYPE_XIA_YU",
	8:  "MJ_SETTLEMENT_TYPE_CHA_JIAO",
	9:  "MJ_SETTLEMENT_TYPE_TUI_SHUI",
	10: "MJ_SETTLEMENT_TYPE_HUA_ZHU",
	11: "MJ_SETTLEMENT_TYPE_ZHUAN_YU",
	12: "MJ_SETTLEMENT_TYPE_TIAN_HU",
	13: "MJ_SETTLEMENT_TYPE_DI_HU",
	14: "MJ_SETTLEMENT_TYPE_ESCAPE",
}
var MJ_SETTLEMENT_TYPE_value = map[string]int32{
	"MJ_SETTLEMENT_TYPE_NONE":       0,
	"MJ_SETTLEMENT_TYPE_HU":         1,
	"MJ_SETTLEMENT_TYPE_ZI_MO":      2,
	"MJ_SETTLEMENT_TYPE_QIANG_GANG": 3,
	"MJ_SETTLEMENT_TYPE_GANG_HUA":   4,
	"MJ_SETTLEMENT_TYPE_GANG_PAO":   5,
	"MJ_SETTLEMENT_TYPE_GUA_FENG":   6,
	"MJ_SETTLEMENT_TYPE_XIA_YU":     7,
	"MJ_SETTLEMENT_TYPE_CHA_JIAO":   8,
	"MJ_SETTLEMENT_TYPE_TUI_SHUI":   9,
	"MJ_SETTLEMENT_TYPE_HUA_ZHU":    10,
	"MJ_SETTLEMENT_TYPE_ZHUAN_YU":   11,
	"MJ_SETTLEMENT_TYPE_TIAN_HU":    12,
	"MJ_SETTLEMENT_TYPE_DI_HU":      13,
	"MJ_SETTLEMENT_TYPE_ESCAPE":     14,
}

func (x MJ_SETTLEMENT_TYPE) Enum() *MJ_SETTLEMENT_TYPE {
	p := new(MJ_SETTLEMENT_TYPE)
	*p = x
	return p
}
func (x MJ_SETTLEMENT_TYPE) String() string {
	return proto.EnumName(MJ_SETTLEMENT_TYPE_name, int32(x))
}
func (x *MJ_SETTLEMENT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MJ_SETTLEMENT_TYPE_value, data, "MJ_SETTLEMENT_TYPE")
	if err != nil {
		return err
	}
	*x = MJ_SETTLEMENT_TYPE(value)
	return nil
}
func (MJ_SETTLEMENT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Rpc struct {
	Request          []*Request `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Rpc) Reset()                    { *m = Rpc{} }
func (m *Rpc) String() string            { return proto.CompactTextString(m) }
func (*Rpc) ProtoMessage()               {}
func (*Rpc) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Rpc) GetRequest() []*Request {
	if m != nil {
		return m.Request
	}
	return nil
}

type Request struct {
	Method            *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	SerializedRequest []byte  `protobuf:"bytes,2,opt,name=serialized_request,json=serializedRequest" json:"serialized_request,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *Request) GetSerializedRequest() []byte {
	if m != nil {
		return m.SerializedRequest
	}
	return nil
}

type Msg struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Msg) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *Msg) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type SyncError struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SyncError) Reset()                    { *m = SyncError{} }
func (m *SyncError) String() string            { return proto.CompactTextString(m) }
func (*SyncError) ProtoMessage()               {}
func (*SyncError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SyncError) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type RpcErrorResponse struct {
	Method           *string `protobuf:"bytes,1,req,name=method" json:"method,omitempty"`
	Text             *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RpcErrorResponse) Reset()                    { *m = RpcErrorResponse{} }
func (m *RpcErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*RpcErrorResponse) ProtoMessage()               {}
func (*RpcErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RpcErrorResponse) GetMethod() string {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return ""
}

func (m *RpcErrorResponse) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type Login struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Login) Reset()                    { *m = Login{} }
func (m *Login) String() string            { return proto.CompactTextString(m) }
func (*Login) ProtoMessage()               {}
func (*Login) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Login) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type LoginRsp struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginRsp) Reset()                    { *m = LoginRsp{} }
func (m *LoginRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()               {}
func (*LoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LoginRsp) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

// 创建房间
type CSUserCreateRoomRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserCreateRoomRqst) Reset()                    { *m = CSUserCreateRoomRqst{} }
func (m *CSUserCreateRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserCreateRoomRqst) ProtoMessage()               {}
func (*CSUserCreateRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CSUserCreateRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

type CSUserCreateRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserCreateRoomRsp) Reset()                    { *m = CSUserCreateRoomRsp{} }
func (m *CSUserCreateRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserCreateRoomRsp) ProtoMessage()               {}
func (*CSUserCreateRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CSUserCreateRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserCreateRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 进入房间
type CSUserEnterRoomRqst struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserEnterRoomRqst) Reset()                    { *m = CSUserEnterRoomRqst{} }
func (m *CSUserEnterRoomRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserEnterRoomRqst) ProtoMessage()               {}
func (*CSUserEnterRoomRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CSUserEnterRoomRqst) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserEnterRoomRqst) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

type CSUserEnterRoomRsp struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	EnterRoomSuccess *bool      `protobuf:"varint,3,req,name=EnterRoomSuccess" json:"EnterRoomSuccess,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserEnterRoomRsp) Reset()                    { *m = CSUserEnterRoomRsp{} }
func (m *CSUserEnterRoomRsp) String() string            { return proto.CompactTextString(m) }
func (*CSUserEnterRoomRsp) ProtoMessage()               {}
func (*CSUserEnterRoomRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CSUserEnterRoomRsp) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserEnterRoomRsp) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserEnterRoomRsp) GetEnterRoomSuccess() bool {
	if m != nil && m.EnterRoomSuccess != nil {
		return *m.EnterRoomSuccess
	}
	return false
}

// 游戏准备
type CSUserReadyGameRqst struct {
	ReadySeatId      *uint32 `protobuf:"varint,1,req,name=ReadySeatId" json:"ReadySeatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserReadyGameRqst) Reset()                    { *m = CSUserReadyGameRqst{} }
func (m *CSUserReadyGameRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserReadyGameRqst) ProtoMessage()               {}
func (*CSUserReadyGameRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CSUserReadyGameRqst) GetReadySeatId() uint32 {
	if m != nil && m.ReadySeatId != nil {
		return *m.ReadySeatId
	}
	return 0
}

// 通知游戏准备
type CSUserReadyGameNotify struct {
	ReadySeatId      *uint32 `protobuf:"varint,1,req,name=ReadySeatId" json:"ReadySeatId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSUserReadyGameNotify) Reset()                    { *m = CSUserReadyGameNotify{} }
func (m *CSUserReadyGameNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserReadyGameNotify) ProtoMessage()               {}
func (*CSUserReadyGameNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CSUserReadyGameNotify) GetReadySeatId() uint32 {
	if m != nil && m.ReadySeatId != nil {
		return *m.ReadySeatId
	}
	return 0
}

// 发牌
type CSUserMjAssignNotify struct {
	SeatId           *uint32  `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	BankerSeatId     *uint32  `protobuf:"varint,2,req,name=BankerSeatId" json:"BankerSeatId,omitempty"`
	FirstDice        *uint32  `protobuf:"varint,3,req,name=FirstDice" json:"FirstDice,omitempty"`
	SecondDice       *uint32  `protobuf:"varint,4,req,name=SecondDice" json:"SecondDice,omitempty"`
	Mjs              []uint32 `protobuf:"varint,5,rep,name=Mjs" json:"Mjs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSUserMjAssignNotify) Reset()                    { *m = CSUserMjAssignNotify{} }
func (m *CSUserMjAssignNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjAssignNotify) ProtoMessage()               {}
func (*CSUserMjAssignNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CSUserMjAssignNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetBankerSeatId() uint32 {
	if m != nil && m.BankerSeatId != nil {
		return *m.BankerSeatId
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetFirstDice() uint32 {
	if m != nil && m.FirstDice != nil {
		return *m.FirstDice
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetSecondDice() uint32 {
	if m != nil && m.SecondDice != nil {
		return *m.SecondDice
	}
	return 0
}

func (m *CSUserMjAssignNotify) GetMjs() []uint32 {
	if m != nil {
		return m.Mjs
	}
	return nil
}

type PlayerBaseInfo struct {
	Uid              *uint64 `protobuf:"varint,1,req,name=Uid" json:"Uid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerBaseInfo) Reset()                    { *m = PlayerBaseInfo{} }
func (m *PlayerBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*PlayerBaseInfo) ProtoMessage()               {}
func (*PlayerBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *PlayerBaseInfo) GetUid() uint64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

type SeatInfo struct {
	SeatId                  *uint32         `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	UserState               *MjUserState    `protobuf:"varint,2,req,name=UserState,enum=rpc.MjUserState" json:"UserState,omitempty"`
	OffLineFlag             *bool           `protobuf:"varint,3,req,name=OffLineFlag" json:"OffLineFlag,omitempty"`
	BaseInfo                *PlayerBaseInfo `protobuf:"bytes,4,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	StartMatchCurrencyValue *int64          `protobuf:"varint,5,opt,name=StartMatchCurrencyValue" json:"StartMatchCurrencyValue,omitempty"`
	XXX_unrecognized        []byte          `json:"-"`
}

func (m *SeatInfo) Reset()                    { *m = SeatInfo{} }
func (m *SeatInfo) String() string            { return proto.CompactTextString(m) }
func (*SeatInfo) ProtoMessage()               {}
func (*SeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SeatInfo) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *SeatInfo) GetUserState() MjUserState {
	if m != nil && m.UserState != nil {
		return *m.UserState
	}
	return MjUserState_Mj_User_State_Init
}

func (m *SeatInfo) GetOffLineFlag() bool {
	if m != nil && m.OffLineFlag != nil {
		return *m.OffLineFlag
	}
	return false
}

func (m *SeatInfo) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

func (m *SeatInfo) GetStartMatchCurrencyValue() int64 {
	if m != nil && m.StartMatchCurrencyValue != nil {
		return *m.StartMatchCurrencyValue
	}
	return 0
}

type ViewSeatInfo struct {
	BaseInfo         *PlayerBaseInfo `protobuf:"bytes,1,req,name=BaseInfo" json:"BaseInfo,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ViewSeatInfo) Reset()                    { *m = ViewSeatInfo{} }
func (m *ViewSeatInfo) String() string            { return proto.CompactTextString(m) }
func (*ViewSeatInfo) ProtoMessage()               {}
func (*ViewSeatInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ViewSeatInfo) GetBaseInfo() *PlayerBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

type TableInfo struct {
	BankerSeatId         *uint32         `protobuf:"varint,1,req,name=BankerSeatId" json:"BankerSeatId,omitempty"`
	FirstDice            *uint32         `protobuf:"varint,2,req,name=FirstDice" json:"FirstDice,omitempty"`
	SecondDice           *uint32         `protobuf:"varint,3,req,name=SecondDice" json:"SecondDice,omitempty"`
	CardNum              *uint32         `protobuf:"varint,4,req,name=CardNum" json:"CardNum,omitempty"`
	TableState           *TableState     `protobuf:"varint,5,req,name=tableState,enum=rpc.TableState" json:"tableState,omitempty"`
	SeatInfos            []*SeatInfo     `protobuf:"bytes,6,rep,name=SeatInfos" json:"SeatInfos,omitempty"`
	ViewSeatInfos        []*ViewSeatInfo `protobuf:"bytes,7,rep,name=ViewSeatInfos" json:"ViewSeatInfos,omitempty"`
	WaitRenewRoomTimeOut *uint32         `protobuf:"varint,8,req,name=WaitRenewRoomTimeOut" json:"WaitRenewRoomTimeOut,omitempty"`
	SettlementId         *uint64         `protobuf:"varint,9,req,name=SettlementId" json:"SettlementId,omitempty"`
	FinishedMatchNum     *uint64         `protobuf:"varint,10,req,name=FinishedMatchNum" json:"FinishedMatchNum,omitempty"`
	TotalMatchNum        *uint32         `protobuf:"varint,11,req,name=TotalMatchNum" json:"TotalMatchNum,omitempty"`
	WaitRechargeTimeOut  *uint32         `protobuf:"varint,12,req,name=WaitRechargeTimeOut" json:"WaitRechargeTimeOut,omitempty"`
	XXX_unrecognized     []byte          `json:"-"`
}

func (m *TableInfo) Reset()                    { *m = TableInfo{} }
func (m *TableInfo) String() string            { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()               {}
func (*TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *TableInfo) GetBankerSeatId() uint32 {
	if m != nil && m.BankerSeatId != nil {
		return *m.BankerSeatId
	}
	return 0
}

func (m *TableInfo) GetFirstDice() uint32 {
	if m != nil && m.FirstDice != nil {
		return *m.FirstDice
	}
	return 0
}

func (m *TableInfo) GetSecondDice() uint32 {
	if m != nil && m.SecondDice != nil {
		return *m.SecondDice
	}
	return 0
}

func (m *TableInfo) GetCardNum() uint32 {
	if m != nil && m.CardNum != nil {
		return *m.CardNum
	}
	return 0
}

func (m *TableInfo) GetTableState() TableState {
	if m != nil && m.TableState != nil {
		return *m.TableState
	}
	return TableState_Table_State_Init
}

func (m *TableInfo) GetSeatInfos() []*SeatInfo {
	if m != nil {
		return m.SeatInfos
	}
	return nil
}

func (m *TableInfo) GetViewSeatInfos() []*ViewSeatInfo {
	if m != nil {
		return m.ViewSeatInfos
	}
	return nil
}

func (m *TableInfo) GetWaitRenewRoomTimeOut() uint32 {
	if m != nil && m.WaitRenewRoomTimeOut != nil {
		return *m.WaitRenewRoomTimeOut
	}
	return 0
}

func (m *TableInfo) GetSettlementId() uint64 {
	if m != nil && m.SettlementId != nil {
		return *m.SettlementId
	}
	return 0
}

func (m *TableInfo) GetFinishedMatchNum() uint64 {
	if m != nil && m.FinishedMatchNum != nil {
		return *m.FinishedMatchNum
	}
	return 0
}

func (m *TableInfo) GetTotalMatchNum() uint32 {
	if m != nil && m.TotalMatchNum != nil {
		return *m.TotalMatchNum
	}
	return 0
}

func (m *TableInfo) GetWaitRechargeTimeOut() uint32 {
	if m != nil && m.WaitRechargeTimeOut != nil {
		return *m.WaitRechargeTimeOut
	}
	return 0
}

// 通知桌子信息改变
type CSUserTableInfoChangeNotify struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	Info             *TableInfo `protobuf:"bytes,3,req,name=Info" json:"Info,omitempty"`
	RoomOwnerUid     *uint64    `protobuf:"varint,4,req,name=RoomOwnerUid" json:"RoomOwnerUid,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserTableInfoChangeNotify) Reset()                    { *m = CSUserTableInfoChangeNotify{} }
func (m *CSUserTableInfoChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableInfoChangeNotify) ProtoMessage()               {}
func (*CSUserTableInfoChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CSUserTableInfoChangeNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserTableInfoChangeNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserTableInfoChangeNotify) GetInfo() *TableInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CSUserTableInfoChangeNotify) GetRoomOwnerUid() uint64 {
	if m != nil && m.RoomOwnerUid != nil {
		return *m.RoomOwnerUid
	}
	return 0
}

// 玩家操作
type CSUserMjOperateRqst struct {
	OperateSeatId    *uint32          `protobuf:"varint,1,req,name=OperateSeatId" json:"OperateSeatId,omitempty"`
	OperateMask      *MJ_OPERATE_MASK `protobuf:"varint,2,req,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	TagMj            *uint32          `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	TagMj1           *uint32          `protobuf:"varint,4,opt,name=TagMj1" json:"TagMj1,omitempty"`
	TagMj2           *uint32          `protobuf:"varint,5,opt,name=TagMj2" json:"TagMj2,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CSUserMjOperateRqst) Reset()                    { *m = CSUserMjOperateRqst{} }
func (m *CSUserMjOperateRqst) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjOperateRqst) ProtoMessage()               {}
func (*CSUserMjOperateRqst) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CSUserMjOperateRqst) GetOperateSeatId() uint32 {
	if m != nil && m.OperateSeatId != nil {
		return *m.OperateSeatId
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CSUserMjOperateRqst) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetTagMj1() uint32 {
	if m != nil && m.TagMj1 != nil {
		return *m.TagMj1
	}
	return 0
}

func (m *CSUserMjOperateRqst) GetTagMj2() uint32 {
	if m != nil && m.TagMj2 != nil {
		return *m.TagMj2
	}
	return 0
}

type MjSettlementDetail struct {
	SeatId           *uint32 `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	Value            *int32  `protobuf:"varint,2,req,name=Value" json:"Value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MjSettlementDetail) Reset()                    { *m = MjSettlementDetail{} }
func (m *MjSettlementDetail) String() string            { return proto.CompactTextString(m) }
func (*MjSettlementDetail) ProtoMessage()               {}
func (*MjSettlementDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *MjSettlementDetail) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *MjSettlementDetail) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// 结算信息
type MjSettlementInfo struct {
	Type             *MJ_SETTLEMENT_TYPE   `protobuf:"varint,1,req,name=Type,enum=rpc.MJ_SETTLEMENT_TYPE" json:"Type,omitempty"`
	Detail           []*MjSettlementDetail `protobuf:"bytes,2,rep,name=Detail" json:"Detail,omitempty"`
	HuType           *uint32               `protobuf:"varint,3,req,name=HuType" json:"HuType,omitempty"`
	Multiple         *uint32               `protobuf:"varint,4,req,name=Multiple" json:"Multiple,omitempty"`
	GenCount         *int32                `protobuf:"varint,5,req,name=GenCount" json:"GenCount,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *MjSettlementInfo) Reset()                    { *m = MjSettlementInfo{} }
func (m *MjSettlementInfo) String() string            { return proto.CompactTextString(m) }
func (*MjSettlementInfo) ProtoMessage()               {}
func (*MjSettlementInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *MjSettlementInfo) GetType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

func (m *MjSettlementInfo) GetDetail() []*MjSettlementDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *MjSettlementInfo) GetHuType() uint32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *MjSettlementInfo) GetMultiple() uint32 {
	if m != nil && m.Multiple != nil {
		return *m.Multiple
	}
	return 0
}

func (m *MjSettlementInfo) GetGenCount() int32 {
	if m != nil && m.GenCount != nil {
		return *m.GenCount
	}
	return 0
}

// 玩家操作通知
type CSUserMjOperateNotify struct {
	OperateMask      *MJ_OPERATE_MASK    `protobuf:"varint,1,req,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	OperateSeatId    *uint32             `protobuf:"varint,2,req,name=OperateSeatId" json:"OperateSeatId,omitempty"`
	TagMj            *uint32             `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	SettlementInfo   []*MjSettlementInfo `protobuf:"bytes,4,rep,name=SettlementInfo" json:"SettlementInfo,omitempty"`
	TagMj1           *uint32             `protobuf:"varint,5,opt,name=TagMj1" json:"TagMj1,omitempty"`
	TagMj2           *uint32             `protobuf:"varint,6,opt,name=TagMj2" json:"TagMj2,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CSUserMjOperateNotify) Reset()                    { *m = CSUserMjOperateNotify{} }
func (m *CSUserMjOperateNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjOperateNotify) ProtoMessage()               {}
func (*CSUserMjOperateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CSUserMjOperateNotify) GetOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CSUserMjOperateNotify) GetOperateSeatId() uint32 {
	if m != nil && m.OperateSeatId != nil {
		return *m.OperateSeatId
	}
	return 0
}

func (m *CSUserMjOperateNotify) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSUserMjOperateNotify) GetSettlementInfo() []*MjSettlementInfo {
	if m != nil {
		return m.SettlementInfo
	}
	return nil
}

func (m *CSUserMjOperateNotify) GetTagMj1() uint32 {
	if m != nil && m.TagMj1 != nil {
		return *m.TagMj1
	}
	return 0
}

func (m *CSUserMjOperateNotify) GetTagMj2() uint32 {
	if m != nil && m.TagMj2 != nil {
		return *m.TagMj2
	}
	return 0
}

// 通知玩家等待其他人操作
type CSUserMjWaitForOperateNotify struct {
	OperateMask      []MJ_OPERATE_MASK `protobuf:"varint,1,rep,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	RelationSeatId   *uint32           `protobuf:"varint,2,req,name=RelationSeatId" json:"RelationSeatId,omitempty"`
	OperateTimeOut   *uint32           `protobuf:"varint,3,req,name=OperateTimeOut" json:"OperateTimeOut,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSUserMjWaitForOperateNotify) Reset()                    { *m = CSUserMjWaitForOperateNotify{} }
func (m *CSUserMjWaitForOperateNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjWaitForOperateNotify) ProtoMessage()               {}
func (*CSUserMjWaitForOperateNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CSUserMjWaitForOperateNotify) GetOperateMask() []MJ_OPERATE_MASK {
	if m != nil {
		return m.OperateMask
	}
	return nil
}

func (m *CSUserMjWaitForOperateNotify) GetRelationSeatId() uint32 {
	if m != nil && m.RelationSeatId != nil {
		return *m.RelationSeatId
	}
	return 0
}

func (m *CSUserMjWaitForOperateNotify) GetOperateTimeOut() uint32 {
	if m != nil && m.OperateTimeOut != nil {
		return *m.OperateTimeOut
	}
	return 0
}

// 摸牌
type CSUserMjGetNotify struct {
	OperateMask      []MJ_OPERATE_MASK `protobuf:"varint,1,rep,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	RelationSeatId   *uint32           `protobuf:"varint,2,req,name=RelationSeatId" json:"RelationSeatId,omitempty"`
	TagMj            *uint32           `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	OperateTimeOut   *uint32           `protobuf:"varint,4,req,name=OperateTimeOut" json:"OperateTimeOut,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSUserMjGetNotify) Reset()                    { *m = CSUserMjGetNotify{} }
func (m *CSUserMjGetNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjGetNotify) ProtoMessage()               {}
func (*CSUserMjGetNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CSUserMjGetNotify) GetOperateMask() []MJ_OPERATE_MASK {
	if m != nil {
		return m.OperateMask
	}
	return nil
}

func (m *CSUserMjGetNotify) GetRelationSeatId() uint32 {
	if m != nil && m.RelationSeatId != nil {
		return *m.RelationSeatId
	}
	return 0
}

func (m *CSUserMjGetNotify) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSUserMjGetNotify) GetOperateTimeOut() uint32 {
	if m != nil && m.OperateTimeOut != nil {
		return *m.OperateTimeOut
	}
	return 0
}

// 结束时，推送每个人的手牌
type CSUserMjLastHandNotify struct {
	RoomType         *ROOM_TYPE `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId           *uint32    `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	SeatId           *uint32    `protobuf:"varint,3,req,name=SeatId" json:"SeatId,omitempty"`
	Mjs              []uint32   `protobuf:"varint,4,rep,name=Mjs" json:"Mjs,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *CSUserMjLastHandNotify) Reset()                    { *m = CSUserMjLastHandNotify{} }
func (m *CSUserMjLastHandNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserMjLastHandNotify) ProtoMessage()               {}
func (*CSUserMjLastHandNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CSUserMjLastHandNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserMjLastHandNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserMjLastHandNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserMjLastHandNotify) GetMjs() []uint32 {
	if m != nil {
		return m.Mjs
	}
	return nil
}

type CSMjOperateRecord struct {
	SeatId           *uint32          `protobuf:"varint,1,req,name=SeatId" json:"SeatId,omitempty"`
	OperateMask      *MJ_OPERATE_MASK `protobuf:"varint,2,req,name=OperateMask,enum=rpc.MJ_OPERATE_MASK" json:"OperateMask,omitempty"`
	TagMj            *uint32          `protobuf:"varint,3,req,name=TagMj" json:"TagMj,omitempty"`
	TagMj1           *uint32          `protobuf:"varint,4,opt,name=TagMj1" json:"TagMj1,omitempty"`
	TagMj2           *uint32          `protobuf:"varint,5,opt,name=TagMj2" json:"TagMj2,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CSMjOperateRecord) Reset()                    { *m = CSMjOperateRecord{} }
func (m *CSMjOperateRecord) String() string            { return proto.CompactTextString(m) }
func (*CSMjOperateRecord) ProtoMessage()               {}
func (*CSMjOperateRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CSMjOperateRecord) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSMjOperateRecord) GetOperateMask() MJ_OPERATE_MASK {
	if m != nil && m.OperateMask != nil {
		return *m.OperateMask
	}
	return MJ_OPERATE_MASK_MJ_OPERATE_MASK_NONE
}

func (m *CSMjOperateRecord) GetTagMj() uint32 {
	if m != nil && m.TagMj != nil {
		return *m.TagMj
	}
	return 0
}

func (m *CSMjOperateRecord) GetTagMj1() uint32 {
	if m != nil && m.TagMj1 != nil {
		return *m.TagMj1
	}
	return 0
}

func (m *CSMjOperateRecord) GetTagMj2() uint32 {
	if m != nil && m.TagMj2 != nil {
		return *m.TagMj2
	}
	return 0
}

// 桌子麻将信息
type CSUserTableCardInfoNotify struct {
	RoomType          *ROOM_TYPE          `protobuf:"varint,1,req,name=RoomType,enum=rpc.ROOM_TYPE" json:"RoomType,omitempty"`
	RoomId            *uint32             `protobuf:"varint,2,req,name=RoomId" json:"RoomId,omitempty"`
	SeatId            *uint32             `protobuf:"varint,3,req,name=SeatId" json:"SeatId,omitempty"`
	TagSeatId         *uint32             `protobuf:"varint,4,req,name=TagSeatId" json:"TagSeatId,omitempty"`
	UserState         *MjUserState        `protobuf:"varint,5,req,name=UserState,enum=rpc.MjUserState" json:"UserState,omitempty"`
	RejectSuit        *uint32             `protobuf:"varint,6,req,name=RejectSuit" json:"RejectSuit,omitempty"`
	DealCards         []uint32            `protobuf:"varint,7,rep,name=DealCards" json:"DealCards,omitempty"`
	HandCards         []uint32            `protobuf:"varint,8,rep,name=HandCards" json:"HandCards,omitempty"`
	MingCards         []uint32            `protobuf:"varint,9,rep,name=MingCards" json:"MingCards,omitempty"`
	AnGangCards       []uint32            `protobuf:"varint,10,rep,name=AnGangCards" json:"AnGangCards,omitempty"`
	BuGangCards       []uint32            `protobuf:"varint,11,rep,name=BuGangCards" json:"BuGangCards,omitempty"`
	PengCards         []uint32            `protobuf:"varint,12,rep,name=PengCards" json:"PengCards,omitempty"`
	HuCards           *uint32             `protobuf:"varint,13,req,name=HuCards" json:"HuCards,omitempty"`
	LastOperateRecord *CSMjOperateRecord  `protobuf:"bytes,14,opt,name=LastOperateRecord" json:"LastOperateRecord,omitempty"`
	HuanCards         []uint32            `protobuf:"varint,15,rep,name=HuanCards" json:"HuanCards,omitempty"`
	HuanInCards       []uint32            `protobuf:"varint,16,rep,name=HuanInCards" json:"HuanInCards,omitempty"`
	SettlementType    *MJ_SETTLEMENT_TYPE `protobuf:"varint,17,req,name=SettlementType,enum=rpc.MJ_SETTLEMENT_TYPE" json:"SettlementType,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *CSUserTableCardInfoNotify) Reset()                    { *m = CSUserTableCardInfoNotify{} }
func (m *CSUserTableCardInfoNotify) String() string            { return proto.CompactTextString(m) }
func (*CSUserTableCardInfoNotify) ProtoMessage()               {}
func (*CSUserTableCardInfoNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CSUserTableCardInfoNotify) GetRoomType() ROOM_TYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return ROOM_TYPE_ROOM_TYPE_NONE
}

func (m *CSUserTableCardInfoNotify) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetSeatId() uint32 {
	if m != nil && m.SeatId != nil {
		return *m.SeatId
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetTagSeatId() uint32 {
	if m != nil && m.TagSeatId != nil {
		return *m.TagSeatId
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetUserState() MjUserState {
	if m != nil && m.UserState != nil {
		return *m.UserState
	}
	return MjUserState_Mj_User_State_Init
}

func (m *CSUserTableCardInfoNotify) GetRejectSuit() uint32 {
	if m != nil && m.RejectSuit != nil {
		return *m.RejectSuit
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetDealCards() []uint32 {
	if m != nil {
		return m.DealCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHandCards() []uint32 {
	if m != nil {
		return m.HandCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetMingCards() []uint32 {
	if m != nil {
		return m.MingCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetAnGangCards() []uint32 {
	if m != nil {
		return m.AnGangCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetBuGangCards() []uint32 {
	if m != nil {
		return m.BuGangCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetPengCards() []uint32 {
	if m != nil {
		return m.PengCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHuCards() uint32 {
	if m != nil && m.HuCards != nil {
		return *m.HuCards
	}
	return 0
}

func (m *CSUserTableCardInfoNotify) GetLastOperateRecord() *CSMjOperateRecord {
	if m != nil {
		return m.LastOperateRecord
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHuanCards() []uint32 {
	if m != nil {
		return m.HuanCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetHuanInCards() []uint32 {
	if m != nil {
		return m.HuanInCards
	}
	return nil
}

func (m *CSUserTableCardInfoNotify) GetSettlementType() MJ_SETTLEMENT_TYPE {
	if m != nil && m.SettlementType != nil {
		return *m.SettlementType
	}
	return MJ_SETTLEMENT_TYPE_MJ_SETTLEMENT_TYPE_NONE
}

func init() {
	proto.RegisterType((*Rpc)(nil), "rpc.Rpc")
	proto.RegisterType((*Request)(nil), "rpc.Request")
	proto.RegisterType((*Msg)(nil), "rpc.Msg")
	proto.RegisterType((*SyncError)(nil), "rpc.SyncError")
	proto.RegisterType((*RpcErrorResponse)(nil), "rpc.RpcErrorResponse")
	proto.RegisterType((*Login)(nil), "rpc.Login")
	proto.RegisterType((*LoginRsp)(nil), "rpc.LoginRsp")
	proto.RegisterType((*CSUserCreateRoomRqst)(nil), "rpc.CSUserCreateRoomRqst")
	proto.RegisterType((*CSUserCreateRoomRsp)(nil), "rpc.CSUserCreateRoomRsp")
	proto.RegisterType((*CSUserEnterRoomRqst)(nil), "rpc.CSUserEnterRoomRqst")
	proto.RegisterType((*CSUserEnterRoomRsp)(nil), "rpc.CSUserEnterRoomRsp")
	proto.RegisterType((*CSUserReadyGameRqst)(nil), "rpc.CSUserReadyGameRqst")
	proto.RegisterType((*CSUserReadyGameNotify)(nil), "rpc.CSUserReadyGameNotify")
	proto.RegisterType((*CSUserMjAssignNotify)(nil), "rpc.CSUserMjAssignNotify")
	proto.RegisterType((*PlayerBaseInfo)(nil), "rpc.PlayerBaseInfo")
	proto.RegisterType((*SeatInfo)(nil), "rpc.SeatInfo")
	proto.RegisterType((*ViewSeatInfo)(nil), "rpc.ViewSeatInfo")
	proto.RegisterType((*TableInfo)(nil), "rpc.TableInfo")
	proto.RegisterType((*CSUserTableInfoChangeNotify)(nil), "rpc.CSUserTableInfoChangeNotify")
	proto.RegisterType((*CSUserMjOperateRqst)(nil), "rpc.CSUserMjOperateRqst")
	proto.RegisterType((*MjSettlementDetail)(nil), "rpc.MjSettlementDetail")
	proto.RegisterType((*MjSettlementInfo)(nil), "rpc.MjSettlementInfo")
	proto.RegisterType((*CSUserMjOperateNotify)(nil), "rpc.CSUserMjOperateNotify")
	proto.RegisterType((*CSUserMjWaitForOperateNotify)(nil), "rpc.CSUserMjWaitForOperateNotify")
	proto.RegisterType((*CSUserMjGetNotify)(nil), "rpc.CSUserMjGetNotify")
	proto.RegisterType((*CSUserMjLastHandNotify)(nil), "rpc.CSUserMjLastHandNotify")
	proto.RegisterType((*CSMjOperateRecord)(nil), "rpc.CSMjOperateRecord")
	proto.RegisterType((*CSUserTableCardInfoNotify)(nil), "rpc.CSUserTableCardInfoNotify")
	proto.RegisterEnum("rpc.RoomState", RoomState_name, RoomState_value)
	proto.RegisterEnum("rpc.TableState", TableState_name, TableState_value)
	proto.RegisterEnum("rpc.MjUserState", MjUserState_name, MjUserState_value)
	proto.RegisterEnum("rpc.ROOM_TYPE", ROOM_TYPE_name, ROOM_TYPE_value)
	proto.RegisterEnum("rpc.MJ_OPERATE_MASK", MJ_OPERATE_MASK_name, MJ_OPERATE_MASK_value)
	proto.RegisterEnum("rpc.MJ_SETTLEMENT_TYPE", MJ_SETTLEMENT_TYPE_name, MJ_SETTLEMENT_TYPE_value)
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1868 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x57, 0xcf, 0x6f, 0xdb, 0xc8,
	0x15, 0x2e, 0x45, 0x49, 0x96, 0x9e, 0x2c, 0x65, 0x3c, 0x76, 0x1c, 0x25, 0xf1, 0x66, 0x15, 0x62,
	0x11, 0x18, 0x5e, 0x6c, 0xd2, 0xfa, 0xd0, 0x6d, 0x0f, 0xed, 0x82, 0x96, 0x69, 0x49, 0xa9, 0x29,
	0xa9, 0x23, 0x31, 0x5d, 0xfb, 0x42, 0x70, 0xa5, 0x89, 0x4c, 0xaf, 0x4c, 0x69, 0x49, 0x2a, 0xa9,
	0x7b, 0x2c, 0x8a, 0xfe, 0x21, 0x3d, 0x14, 0xd8, 0x63, 0x0f, 0x3d, 0xf4, 0xd6, 0xff, 0x64, 0xd1,
	0x4b, 0xaf, 0xbd, 0xf4, 0x07, 0xb0, 0xa7, 0x62, 0x66, 0xf8, 0x9b, 0x52, 0x92, 0x16, 0xc1, 0xee,
	0x8d, 0xef, 0xfb, 0xde, 0xcc, 0xbc, 0xf7, 0xbe, 0x37, 0x4f, 0x23, 0xa8, 0xde, 0x78, 0xb3, 0xa7,
	0x4b, 0x77, 0xe1, 0x2f, 0xb0, 0xec, 0x2e, 0x27, 0xca, 0x27, 0x20, 0x93, 0xe5, 0x04, 0x3f, 0x81,
	0x2d, 0x97, 0x7e, 0xb5, 0xa2, 0x9e, 0xdf, 0x94, 0x5a, 0xf2, 0x61, 0xed, 0x78, 0xfb, 0xa9, 0xbb,
	0x9c, 0x3c, 0x25, 0x02, 0x23, 0x21, 0xa9, 0x0c, 0x61, 0x2b, 0xc0, 0xf0, 0x3e, 0x94, 0x6f, 0xa8,
	0x7f, 0xb5, 0x98, 0x36, 0xa5, 0x56, 0xe1, 0xb0, 0x4a, 0x02, 0x0b, 0x7f, 0x02, 0xd8, 0xa3, 0xae,
	0x6d, 0xcd, 0xed, 0xdf, 0xd0, 0xa9, 0x19, 0xee, 0x5a, 0x68, 0x49, 0x87, 0xdb, 0x64, 0x27, 0x66,
	0x82, 0x6d, 0x58, 0x00, 0xba, 0x37, 0xc3, 0x18, 0x8a, 0x93, 0xc5, 0x94, 0x36, 0xa5, 0x96, 0x74,
	0x58, 0x25, 0xfc, 0x9b, 0x61, 0x3e, 0xfd, 0xb5, 0x58, 0x5b, 0x25, 0xfc, 0x5b, 0xf9, 0x10, 0xaa,
	0xa3, 0x5b, 0x67, 0xa2, 0xb9, 0xee, 0xc2, 0x8d, 0x1c, 0xa4, 0x84, 0xc3, 0xcf, 0x01, 0x91, 0xa5,
	0xe0, 0x09, 0xf5, 0x96, 0x0b, 0xc7, 0xa3, 0x1b, 0x43, 0x8d, 0x0f, 0x28, 0x44, 0xeb, 0xef, 0x43,
	0xe9, 0x7c, 0x31, 0xb3, 0x1d, 0x8c, 0x40, 0x5e, 0xd9, 0x62, 0x45, 0x91, 0xb0, 0x4f, 0xe5, 0x00,
	0x2a, 0x9c, 0x22, 0xde, 0x72, 0x0d, 0x7b, 0x02, 0x7b, 0xed, 0x91, 0xe1, 0x51, 0xb7, 0xed, 0x52,
	0xcb, 0xa7, 0x64, 0xb1, 0xb8, 0x21, 0x5f, 0x79, 0x3e, 0x3e, 0x82, 0x0a, 0xfb, 0x1e, 0xdf, 0x2e,
	0x29, 0x77, 0x6f, 0x1c, 0x37, 0x44, 0x6d, 0x07, 0x03, 0xdd, 0x1c, 0x5f, 0x0c, 0x35, 0x12, 0xf1,
	0xca, 0x05, 0xec, 0xe6, 0xf6, 0xf0, 0x96, 0xff, 0xcb, 0x16, 0x2c, 0x57, 0xf6, 0xdd, 0x9b, 0xf2,
	0xac, 0xea, 0x24, 0xb0, 0xe2, 0xad, 0x35, 0xc7, 0xa7, 0xee, 0xff, 0x13, 0xdd, 0xc6, 0xad, 0x7f,
	0x27, 0x01, 0xce, 0xee, 0xfd, 0x7e, 0xa2, 0xc6, 0x47, 0x80, 0xa2, 0x3d, 0x47, 0xab, 0xc9, 0x84,
	0x7a, 0x5e, 0x53, 0x6e, 0x15, 0x0e, 0x2b, 0x24, 0x87, 0x2b, 0x9f, 0x86, 0x19, 0x12, 0x6a, 0x4d,
	0x6f, 0x3b, 0xd6, 0x0d, 0xe5, 0x19, 0xb6, 0xa0, 0xc6, 0x81, 0x11, 0xb5, 0xfc, 0x9e, 0x50, 0xac,
	0x4e, 0x92, 0x90, 0xf2, 0x53, 0xb8, 0x9b, 0x59, 0xd8, 0x5f, 0xf8, 0xf6, 0xcb, 0xdb, 0x77, 0x58,
	0xfa, 0x07, 0x29, 0x54, 0x5d, 0xbf, 0x56, 0x3d, 0xcf, 0x9e, 0x39, 0xc1, 0xd2, 0x7d, 0x28, 0xa7,
	0x56, 0x05, 0x16, 0x56, 0x60, 0xfb, 0xc4, 0x72, 0xbe, 0xa4, 0x6e, 0xc0, 0x8a, 0x74, 0x53, 0x18,
	0x3e, 0x80, 0xea, 0x99, 0xed, 0x7a, 0xfe, 0xa9, 0x3d, 0xa1, 0x3c, 0xdb, 0x3a, 0x89, 0x01, 0xfc,
	0x08, 0x60, 0x44, 0x27, 0x0b, 0x67, 0xca, 0xe9, 0x22, 0xa7, 0x13, 0x08, 0xeb, 0x4c, 0xfd, 0xda,
	0x6b, 0x96, 0x5a, 0xf2, 0x61, 0x9d, 0xb0, 0x4f, 0x45, 0x81, 0xc6, 0x70, 0x6e, 0xdd, 0x52, 0xf7,
	0xc4, 0xf2, 0x68, 0xcf, 0x79, 0xb9, 0x60, 0x3e, 0x46, 0xdc, 0xbd, 0x86, 0x3d, 0x55, 0xbe, 0x91,
	0xa0, 0xc2, 0x8f, 0x67, 0xf4, 0xa6, 0xe0, 0x9f, 0x42, 0x95, 0xa5, 0x3a, 0xf2, 0x2d, 0x9f, 0xf2,
	0xc8, 0x1b, 0xc7, 0x88, 0x4b, 0xaa, 0x5f, 0x47, 0x38, 0x89, 0x5d, 0x58, 0xfd, 0x06, 0x2f, 0x5f,
	0x9e, 0xdb, 0x0e, 0x3d, 0x9b, 0x5b, 0xb3, 0x40, 0xb8, 0x24, 0x84, 0x9f, 0x41, 0x25, 0x0c, 0x8a,
	0xa7, 0x52, 0x3b, 0xde, 0xe5, 0x1b, 0xa6, 0xe3, 0x25, 0x91, 0x13, 0xfe, 0x09, 0xdc, 0x1b, 0xf9,
	0x96, 0xeb, 0xeb, 0x96, 0x3f, 0xb9, 0x6a, 0xaf, 0x5c, 0x97, 0x3a, 0x93, 0xdb, 0x17, 0xd6, 0x7c,
	0x45, 0x9b, 0xa5, 0x96, 0x74, 0x28, 0x93, 0x4d, 0xb4, 0xf2, 0x19, 0x6c, 0xbf, 0xb0, 0xe9, 0xeb,
	0x28, 0xc9, 0xe4, 0xd1, 0xd2, 0x3b, 0x1c, 0xad, 0x7c, 0x2b, 0x43, 0x75, 0x6c, 0x7d, 0x31, 0x17,
	0x81, 0x64, 0x85, 0x94, 0xde, 0x26, 0x64, 0xe1, 0xcd, 0x42, 0xca, 0x39, 0x21, 0x9b, 0xb0, 0xd5,
	0xb6, 0xdc, 0x69, 0x7f, 0x75, 0x13, 0xa8, 0x1c, 0x9a, 0xf8, 0x19, 0x80, 0xcf, 0x02, 0x11, 0x42,
	0x94, 0xb8, 0x10, 0x77, 0x78, 0xf0, 0xe3, 0x08, 0x26, 0x09, 0x17, 0xfc, 0x31, 0x54, 0xc3, 0xbc,
	0xbd, 0x66, 0x99, 0x0f, 0xf8, 0x3a, 0xf7, 0x0f, 0x51, 0x12, 0xf3, 0xf8, 0x53, 0xa8, 0x27, 0x0b,
	0xe5, 0x35, 0xb7, 0xf8, 0x82, 0x1d, 0xbe, 0x20, 0xc9, 0x90, 0xb4, 0x1f, 0x3e, 0x86, 0xbd, 0x5f,
	0x59, 0xb6, 0x4f, 0xa8, 0x43, 0x5f, 0xf3, 0x9b, 0x6d, 0xdf, 0xd0, 0xc1, 0xca, 0x6f, 0x56, 0x78,
	0xf4, 0x6b, 0x39, 0x56, 0xc6, 0x11, 0xf5, 0xfd, 0x39, 0xbd, 0xa1, 0x0e, 0x2b, 0x63, 0x95, 0xb7,
	0x64, 0x0a, 0x63, 0x43, 0xe0, 0xcc, 0x76, 0x6c, 0xef, 0x8a, 0x4e, 0xb9, 0xae, 0xac, 0x22, 0xc0,
	0xfd, 0x72, 0x38, 0xfe, 0x08, 0xea, 0xe3, 0x85, 0x6f, 0xcd, 0x23, 0xc7, 0x1a, 0x3f, 0x3c, 0x0d,
	0xe2, 0x1f, 0xc2, 0xae, 0x88, 0x66, 0x72, 0x65, 0xb9, 0x33, 0x1a, 0x06, 0xba, 0xcd, 0x7d, 0xd7,
	0x51, 0xca, 0xd7, 0x12, 0x3c, 0x14, 0x17, 0x3d, 0x6a, 0x81, 0xf6, 0x95, 0xe5, 0xcc, 0xc2, 0x51,
	0xf1, 0x3e, 0x86, 0x9d, 0x02, 0x45, 0xde, 0x8d, 0x32, 0xef, 0xc6, 0x46, 0x2c, 0x28, 0x2f, 0x76,
	0x31, 0x6c, 0x3b, 0xe6, 0x3d, 0x78, 0xed, 0x50, 0x97, 0x5d, 0xe1, 0xa2, 0xa8, 0x57, 0x12, 0x53,
	0xfe, 0x22, 0x85, 0x93, 0x50, 0xbf, 0x1e, 0x2c, 0xa9, 0xcb, 0xba, 0x81, 0x4d, 0xc2, 0x8f, 0xa0,
	0x1e, 0x98, 0xa9, 0x9e, 0x4d, 0x83, 0xf8, 0xc7, 0x50, 0x0b, 0x00, 0xdd, 0xf2, 0xbe, 0x0c, 0xae,
	0xf9, 0x9e, 0xb8, 0xe6, 0xcf, 0xcd, 0xc1, 0x50, 0x23, 0xea, 0x58, 0x33, 0x75, 0x75, 0xf4, 0x0b,
	0x92, 0x74, 0xc4, 0x7b, 0x50, 0x1a, 0x5b, 0x33, 0xfd, 0x3a, 0xe8, 0x64, 0x61, 0xb0, 0x5c, 0xf9,
	0xc7, 0x8f, 0x9a, 0xc5, 0x96, 0xc4, 0x72, 0x15, 0x56, 0x84, 0x1f, 0xf3, 0x6b, 0x1b, 0xe2, 0xc7,
	0xca, 0x09, 0x60, 0xfd, 0x3a, 0x56, 0xff, 0x94, 0xfa, 0x96, 0x3d, 0xdf, 0x38, 0x90, 0xf6, 0xa0,
	0x24, 0xee, 0x3e, 0x8b, 0xb2, 0x44, 0x84, 0xa1, 0xfc, 0x55, 0x02, 0x94, 0xdc, 0x84, 0x17, 0xee,
	0x63, 0x28, 0x26, 0xc4, 0xb9, 0x17, 0xe6, 0x33, 0xd2, 0xc6, 0xe3, 0x73, 0x4d, 0xd7, 0xfa, 0x63,
	0xa1, 0x12, 0x77, 0xc2, 0xcf, 0xa0, 0x2c, 0x4e, 0x6e, 0x16, 0x78, 0xef, 0x07, 0xee, 0xb9, 0xc0,
	0x48, 0x39, 0x0e, 0xb0, 0xbb, 0xe2, 0xfb, 0x8b, 0xec, 0x03, 0x0b, 0x3f, 0x80, 0x8a, 0xbe, 0x9a,
	0xfb, 0xf6, 0x72, 0x1e, 0x8e, 0xea, 0xc8, 0x66, 0x5c, 0x87, 0x3a, 0xed, 0xc5, 0xca, 0xf1, 0xf9,
	0x1d, 0x2e, 0x91, 0xc8, 0x56, 0xbe, 0x95, 0xc2, 0xdf, 0xa4, 0x48, 0xc2, 0xa0, 0xd1, 0x32, 0xf2,
	0x48, 0xef, 0x2a, 0x4f, 0x4e, 0xfc, 0xc2, 0x3a, 0xf1, 0xd7, 0x8b, 0xf8, 0x33, 0x68, 0xa4, 0xab,
	0xd9, 0x2c, 0xf2, 0xb2, 0xdc, 0xcd, 0x95, 0x85, 0x77, 0x6a, 0xc6, 0x39, 0xd1, 0x03, 0xa5, 0x0d,
	0x3d, 0x50, 0x4e, 0xf5, 0xc0, 0x1f, 0x25, 0x38, 0x08, 0x93, 0x67, 0x77, 0xf1, 0x6c, 0xe1, 0xbe,
	0xa5, 0x06, 0xf2, 0xbb, 0xd5, 0xe0, 0x09, 0x34, 0x08, 0x9d, 0x5b, 0xbe, 0xbd, 0x70, 0x52, 0x45,
	0xc8, 0xa0, 0xcc, 0x2f, 0x58, 0x16, 0x4e, 0x06, 0x51, 0x8e, 0x0c, 0xaa, 0xfc, 0x49, 0x82, 0x9d,
	0x30, 0xd0, 0x0e, 0xf5, 0xbf, 0xa3, 0xe8, 0xd6, 0x6b, 0x94, 0x8f, 0xb9, 0xb8, 0x36, 0xe6, 0xdf,
	0x4b, 0xb0, 0x1f, 0xc6, 0x7c, 0x6e, 0x79, 0x7e, 0xd7, 0x72, 0xa6, 0xef, 0x71, 0x86, 0xc5, 0x37,
	0x55, 0x4e, 0xdd, 0xd4, 0xe0, 0x55, 0x52, 0x8c, 0x5f, 0x25, 0x5f, 0xf3, 0xe2, 0xc5, 0x13, 0x8a,
	0x4e, 0x16, 0xee, 0x74, 0xe3, 0x4d, 0xff, 0x7e, 0xa7, 0xd2, 0x6f, 0x4b, 0x70, 0x3f, 0x31, 0xfd,
	0xd9, 0xef, 0x30, 0xeb, 0xec, 0xef, 0xa0, 0x6e, 0x07, 0xec, 0xcd, 0x31, 0x0b, 0x28, 0xa1, 0x68,
	0x0c, 0xa4, 0x1f, 0x64, 0xa5, 0xb7, 0x3f, 0xc8, 0x1e, 0x01, 0x10, 0x7a, 0x4d, 0x27, 0xfe, 0x68,
	0x65, 0xfb, 0xcd, 0xb2, 0x78, 0x72, 0xc4, 0x08, 0x3b, 0xed, 0x94, 0x5a, 0x73, 0x96, 0x9f, 0xf8,
	0xd9, 0xaf, 0x93, 0x18, 0x60, 0x2c, 0xeb, 0x16, 0xc1, 0x56, 0x04, 0x1b, 0x01, 0x8c, 0xd5, 0x6d,
	0x67, 0x26, 0xd8, 0xaa, 0x60, 0x23, 0x80, 0x3d, 0x05, 0x55, 0xa7, 0x63, 0x85, 0x3c, 0x70, 0x3e,
	0x09, 0x31, 0x8f, 0x93, 0x55, 0xec, 0x51, 0x13, 0x1e, 0x09, 0x88, 0x9d, 0x30, 0xa4, 0x21, 0xbf,
	0x2d, 0x4e, 0x88, 0x00, 0xf6, 0x5c, 0xea, 0xae, 0x04, 0x57, 0x17, 0xcf, 0xa5, 0xc0, 0xc4, 0xa7,
	0xb0, 0xc3, 0x3a, 0x3d, 0xd5, 0x68, 0xcd, 0x46, 0x4b, 0x3a, 0xac, 0x1d, 0xef, 0xf3, 0x6a, 0xe5,
	0xda, 0x90, 0xe4, 0x17, 0xf0, 0xec, 0x57, 0x96, 0x23, 0x4e, 0xb8, 0x13, 0x64, 0x1f, 0x02, 0x2c,
	0x7a, 0x66, 0xf4, 0x02, 0x1e, 0x89, 0xe8, 0x13, 0x10, 0xfe, 0x2c, 0x39, 0x44, 0x79, 0xaf, 0xec,
	0xbc, 0xf9, 0xa7, 0x28, 0xe3, 0x7e, 0x64, 0x43, 0x95, 0xff, 0xdd, 0xe1, 0x4a, 0xee, 0xc2, 0x1d,
	0x66, 0x98, 0xdc, 0x32, 0x7b, 0x8e, 0xed, 0x23, 0x29, 0x03, 0xb2, 0x3f, 0x32, 0xa8, 0x80, 0xef,
	0xc1, 0x6e, 0x02, 0x3c, 0xb5, 0x3d, 0x6f, 0x31, 0x7f, 0x45, 0x91, 0x8c, 0xef, 0xc3, 0xdd, 0x04,
	0xc1, 0x06, 0xad, 0xc9, 0x9f, 0x67, 0xa8, 0x78, 0xf4, 0x8d, 0x04, 0x10, 0x3f, 0x25, 0xf1, 0x1e,
	0x20, 0x6e, 0xa5, 0x4f, 0xbb, 0x0b, 0x3b, 0x49, 0x94, 0xbf, 0xbb, 0x51, 0x01, 0xef, 0x03, 0x4e,
	0xc2, 0x1d, 0xeb, 0xc6, 0x76, 0x66, 0x48, 0xc6, 0x4d, 0xd8, 0xcb, 0xe0, 0xd4, 0xd4, 0x9c, 0x29,
	0x2a, 0x66, 0x99, 0x28, 0xc4, 0x12, 0x7e, 0x00, 0xfb, 0x49, 0x26, 0x11, 0x63, 0x19, 0x7f, 0x00,
	0xf7, 0x73, 0x5c, 0xb4, 0x74, 0x6b, 0x2d, 0x1d, 0x3e, 0xea, 0x50, 0xe5, 0xe8, 0x6f, 0x12, 0xd4,
	0x12, 0x97, 0x84, 0x45, 0xad, 0x5f, 0x9b, 0xcc, 0xce, 0x25, 0x99, 0xc6, 0x47, 0xb6, 0x2f, 0x8a,
	0x9a, 0x86, 0xf9, 0x9f, 0x42, 0x51, 0xd4, 0x34, 0xc1, 0xfe, 0x4e, 0xb0, 0x02, 0x14, 0x59, 0x15,
	0xd3, 0x54, 0x77, 0x85, 0x4a, 0x2c, 0xf9, 0x34, 0xda, 0xb1, 0x5f, 0x51, 0x63, 0x89, 0xca, 0xf8,
	0x11, 0x3c, 0x48, 0x33, 0x83, 0x2f, 0x3c, 0xea, 0xbe, 0x62, 0xa6, 0xed, 0xa3, 0x2d, 0xfc, 0x21,
	0x3c, 0x4c, 0xf3, 0xd9, 0x1c, 0xff, 0x2c, 0x41, 0x35, 0x9a, 0x41, 0x18, 0x43, 0x23, 0x32, 0xcc,
	0xfe, 0xa0, 0xaf, 0x21, 0x09, 0x3f, 0x86, 0x83, 0x18, 0x6b, 0x1b, 0xa3, 0xf1, 0x40, 0x37, 0x3f,
	0x37, 0x34, 0xf3, 0xb2, 0xab, 0xf6, 0x4d, 0xfd, 0x39, 0xfa, 0xa7, 0x8c, 0x9f, 0xc0, 0xe3, 0x9c,
	0x4b, 0x67, 0x70, 0x7e, 0x9a, 0xf2, 0xfb, 0xd7, 0x7a, 0xbf, 0xf6, 0xb9, 0x71, 0x92, 0xf2, 0xfb,
	0xb7, 0xbc, 0xf6, 0xc8, 0xcb, 0xb3, 0x13, 0xf3, 0xc2, 0x38, 0xd7, 0x98, 0xcb, 0x7f, 0xe4, 0xa3,
	0xbf, 0x17, 0xe0, 0x4e, 0x66, 0xa8, 0xf3, 0x32, 0xa5, 0xa1, 0x30, 0x87, 0x35, 0xcc, 0xa9, 0xa6,
	0x9e, 0x07, 0x22, 0x65, 0x98, 0x8e, 0x31, 0x10, 0xad, 0x98, 0x25, 0x86, 0x5a, 0xbf, 0x83, 0x8a,
	0xac, 0x6b, 0xb2, 0x8c, 0xde, 0xeb, 0x77, 0xcc, 0x8e, 0xda, 0xef, 0xa0, 0x12, 0x7e, 0x08, 0xf7,
	0xb2, 0xb4, 0xda, 0x17, 0x64, 0x79, 0x1d, 0x79, 0x62, 0x08, 0x72, 0x8b, 0x8b, 0x99, 0x21, 0x89,
	0xf6, 0x5c, 0x6b, 0x8f, 0x47, 0x46, 0x6f, 0x8c, 0x2a, 0xbc, 0xff, 0x32, 0x7c, 0xd7, 0x40, 0x55,
	0x76, 0x03, 0x72, 0x01, 0x0d, 0xcc, 0xa1, 0xda, 0x43, 0xb0, 0xee, 0xc0, 0x4e, 0xef, 0x85, 0x66,
	0x1a, 0x43, 0x54, 0xc3, 0x0a, 0x3c, 0xca, 0x6f, 0xa8, 0xf6, 0xcd, 0x91, 0xda, 0xe7, 0x72, 0x74,
	0xd0, 0xf6, 0xd1, 0x3f, 0x64, 0x7e, 0x6a, 0x66, 0xf0, 0x04, 0xfb, 0x66, 0x50, 0x51, 0xee, 0x1f,
	0xf0, 0x06, 0xcf, 0x93, 0x5d, 0x03, 0x49, 0xf8, 0x00, 0x9a, 0x6b, 0xa8, 0xcb, 0x9e, 0xa9, 0x0f,
	0x50, 0x01, 0x3f, 0x86, 0x0f, 0xd6, 0xb0, 0xbf, 0xec, 0xa9, 0x61, 0x79, 0x65, 0xde, 0xd1, 0x79,
	0x17, 0x46, 0xb2, 0xd8, 0x51, 0xf1, 0x4d, 0x0e, 0x43, 0x75, 0x80, 0x4a, 0x9b, 0x1c, 0x0c, 0xd5,
	0x3c, 0xd3, 0xb8, 0x48, 0x42, 0xe0, 0xac, 0xc3, 0xe7, 0x3d, 0xd5, 0xbc, 0x30, 0x82, 0x3b, 0x95,
	0xa7, 0xdb, 0x5d, 0xd5, 0x7c, 0xde, 0x53, 0x07, 0xa8, 0xb2, 0xc1, 0x61, 0x6c, 0xf4, 0xcc, 0x51,
	0xd7, 0xe8, 0xa1, 0x6a, 0x20, 0x74, 0xbe, 0x3e, 0xaa, 0x79, 0xd9, 0x35, 0x10, 0x6c, 0xd8, 0xe0,
	0x92, 0x6b, 0x73, 0x61, 0xa0, 0xda, 0x86, 0x0d, 0xc6, 0x3d, 0xb5, 0xcf, 0xaa, 0xbc, 0xbd, 0xa1,
	0xca, 0xa7, 0x3d, 0xc6, 0xd6, 0x37, 0xe4, 0xa7, 0x8d, 0xda, 0xea, 0x50, 0x43, 0x8d, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x9c, 0x93, 0x30, 0x56, 0xff, 0x15, 0x00, 0x00,
}
